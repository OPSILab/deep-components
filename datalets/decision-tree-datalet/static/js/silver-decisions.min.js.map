{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d/auto-bind.js","node_modules/d/index.js","node_modules/es5-ext/array/#/clear.js","node_modules/es5-ext/array/#/e-index-of.js","node_modules/es5-ext/array/from/index.js","node_modules/es5-ext/array/from/is-implemented.js","node_modules/es5-ext/array/from/shim.js","node_modules/es5-ext/function/is-arguments.js","node_modules/es5-ext/function/is-function.js","node_modules/es5-ext/function/noop.js","node_modules/es5-ext/global.js","node_modules/es5-ext/math/sign/index.js","node_modules/es5-ext/math/sign/is-implemented.js","node_modules/es5-ext/math/sign/shim.js","node_modules/es5-ext/number/is-nan/index.js","node_modules/es5-ext/number/is-nan/is-implemented.js","node_modules/es5-ext/number/is-nan/shim.js","node_modules/es5-ext/number/to-integer.js","node_modules/es5-ext/number/to-pos-integer.js","node_modules/es5-ext/object/_iterate.js","node_modules/es5-ext/object/assign/index.js","node_modules/es5-ext/object/assign/is-implemented.js","node_modules/es5-ext/object/assign/shim.js","node_modules/es5-ext/object/copy.js","node_modules/es5-ext/object/create.js","node_modules/es5-ext/object/for-each.js","node_modules/es5-ext/object/is-callable.js","node_modules/es5-ext/object/is-object.js","node_modules/es5-ext/object/is-value.js","node_modules/es5-ext/object/keys/index.js","node_modules/es5-ext/object/keys/is-implemented.js","node_modules/es5-ext/object/keys/shim.js","node_modules/es5-ext/object/map.js","node_modules/es5-ext/object/normalize-options.js","node_modules/es5-ext/object/set-prototype-of/index.js","node_modules/es5-ext/object/set-prototype-of/is-implemented.js","node_modules/es5-ext/object/set-prototype-of/shim.js","node_modules/es5-ext/object/valid-callable.js","node_modules/es5-ext/object/valid-value.js","node_modules/es5-ext/string/#/contains/index.js","node_modules/es5-ext/string/#/contains/is-implemented.js","node_modules/es5-ext/string/#/contains/shim.js","node_modules/es5-ext/string/is-string.js","node_modules/es6-iterator/array.js","node_modules/es6-iterator/for-of.js","node_modules/es6-iterator/get.js","node_modules/es6-iterator/index.js","node_modules/es6-iterator/is-iterable.js","node_modules/es6-iterator/string.js","node_modules/es6-iterator/valid-iterable.js","node_modules/es6-set/implement.js","node_modules/es6-set/is-implemented.js","node_modules/es6-set/is-native-implemented.js","node_modules/es6-set/lib/iterator.js","node_modules/es6-set/polyfill.js","node_modules/es6-symbol/index.js","node_modules/es6-symbol/is-implemented.js","node_modules/es6-symbol/is-symbol.js","node_modules/es6-symbol/polyfill.js","node_modules/es6-symbol/validate-symbol.js","node_modules/event-emitter/index.js","node_modules/jquery-ui/ui/data.js","package.json","src/app-utils.js","src/app.js","src/autocomplete.js","src/d3.js","src/dialogs/about-dialog.js","src/dialogs/definitions-dialog.js","src/dialogs/dialog.js","src/dialogs/sensitivity-analysis-dialog.js","src/dialogs/settings-dialog.js","src/exporter.js","src/file-loader.js","src/form/input-field.js","src/form/path-value-accessor.js","src/i18n/de.json","src/i18n/en.json","src/i18n/fr.json","src/i18n/i18n.js","src/i18n/it.json","src/i18n/pl.json","src/index.js","src/jobs/job-parameters-builder.js","src/jobs/job-result-table.js","src/jobs/probabilistic-sensitivity-analysis-result-table.js","src/jobs/sensitivity-analysis-result-table.js","src/jobs/spider-plot.js","src/jobs/tornado-diagram-plot.js","src/league-table/league-table-dialog.js","src/league-table/league-table-plot.js","src/league-table/league-table.js","src/loading-indicator.js","src/pivot-table.js","src/sidebar.js","src/templates.js","src/templates/about/de.html","src/templates/about/en.html","src/templates/about/fr.html","src/templates/about/it.html","src/templates/about/pl.html","src/templates/about_dialog.html","src/templates/definitions_dialog.html","src/templates/evaluated_variables.html","src/templates/fullscreen_popup.html","src/templates/help.html","src/templates/input_group.html","src/templates/jobs/job_parameter.html","src/templates/jobs/job_parameters_builder.html","src/templates/league_table_dialog.html","src/templates/loading_indicator.html","src/templates/main.html","src/templates/select_input_group.html","src/templates/sensitivity_analysis_dialog.html","src/templates/settings_dialog.html","src/templates/settings_dialog_form_group.html","src/templates/sidebar/definitions.html","src/templates/sidebar/diagram_details_box.html","src/templates/sidebar/layout_options.html","src/templates/sidebar/multiple_criteria.html","src/templates/sidebar/object_properties.html","src/templates/sidebar/sidebar.html","src/templates/toolbar.html","src/templates/warning_message.html","src/toolbar.js","src/validation/number-input-validator.js","src/validation/payoff-input-validator.js","src/validation/probability-input-validator.js","src/validation/required-input-validator.js","tmp/build-config.js","../sd-tree-designer/index.js","../sd-tree-designer/src/app-utils.js","../sd-tree-designer/src/context-menu/context-menu.js","../sd-tree-designer/src/context-menu/edge-context-menu.js","../sd-tree-designer/src/context-menu/main-context-menu.js","../sd-tree-designer/src/context-menu/node-context-menu.js","../sd-tree-designer/src/context-menu/text-context-menu.js","../sd-tree-designer/src/d3-extensions.js","../sd-tree-designer/src/d3.js","../sd-tree-designer/src/i18n/de.json","../sd-tree-designer/src/i18n/en.json","../sd-tree-designer/src/i18n/fr.json","../sd-tree-designer/src/i18n/i18n.js","../sd-tree-designer/src/i18n/it.json","../sd-tree-designer/src/i18n/pl.json","../sd-tree-designer/src/index.js","../sd-tree-designer/src/layout.js","../sd-tree-designer/src/node-drag-handler.js","../sd-tree-designer/src/symbols/circle.js","../sd-tree-designer/src/symbols/triangle.js","../sd-tree-designer/src/templates.js","../sd-tree-designer/src/templates/growl_message.html","../sd-tree-designer/src/text-drag-handler.js","../sd-tree-designer/src/tooltip.js","../sd-tree-designer/src/tree-designer.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","App","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","copy","normalizeOptions","ensureCallable","map","callable","validValue","bind","Function","prototype","defineProperty","Object","hasOwnProperty","name","desc","options","dgs","value","writable","get","overwriteDefinition","resolveContext","props","arguments","assign","normalizeOpts","isCallable","contains","dscr","c","w","configurable","enumerable","gs","set","undefined","numberIsNaN","toPosInt","indexOf","Array","objHasOwnProperty","abs","Math","floor","searchElement","fromIndex","val","apply","isNaN","from","arr","result","Boolean","iteratorSymbol","iterator","isArguments","isFunction","isValue","isString","isArray","arrayLike","Context","j","getIterator","mapFn","thisArg","next","done","charCodeAt","objToString","toString","id","sign","Number","NaN","isFinite","toInteger","max","keys","objPropertyIsEnumerable","propertyIsEnumerable","method","defVal","obj","cb","list","compareFn","sort","key","index","foo","bar","trzy","dest","src","error","forEach","aFrom","propertyNames","propertyName","ensure","shim","create","nullObject","polyProps","level","getOwnPropertyNames","defineProperties","function","object","_undefined","targetObj","process","opts1","setPrototypeOf","getPrototypeOf","plainObject","customCreate","validate","isObject","objIsPrototypOf","isPrototypeOf","nullDesc","TypeError","status","fn","__proto__","isNullBase","nullPolyfill","tmpObj1","tmpObj2","getOwnPropertyDescriptor","ignore","String","str","searchString","ArrayIterator","d","Symbol","Iterator","kind","constructor","_resolve","__kind__","__list__","toStringTag","some","iterable","mode","doBreak","broken","char","StringIterator","clear","autoBind","context","__context__","__nextIndex__","on","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","_createResult","off","redo","push","splice","__length__","isIterable","Set","size","add","delete","entries","has","values","SetIterator","toStringTagSymbol","__setData__","SetPoly","getValues","NativeSet","eIndexOf","ee","forOf","isNative","emit","validTypes","symbol","toPrimitive","x","NativeSymbol","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","objPrototype","globalSymbols","generateName","created","ie11BugWorkaround","postfix","description","__description__","__name__","for","keyFor","hasInstance","isConcatSpreadable","match","replace","search","species","split","unscopables","valueOf","isSymbol","once","methods","descriptors","base","descriptor","type","listener","data","__ee__","__eeOnceListener__","listeners","candidate","args","slice","factory","jQuery","$","extend","expr","createPseudo","dataName","elem","version","main","scripts","test","repository","url","author","license","bugs","homepage","browserify","transform","presets","plugins","spec","globals","devDependencies","babel-plugin-transform-builtin-extend","babel-plugin-transform-class-properties","babel-plugin-transform-es2015-spread","babel-plugin-transform-object-assign","babel-plugin-transform-object-rest-spread","babel-preset-es2015","babelify","browser-sync","browserify-resolutions","browserify-shim","chalk","del","es6-set","gulp","gulp-concat","gulp-filelist","gulp-html2js","gulp-load-plugins","gulp-minify-css","gulp-plumber","gulp-rename","gulp-replace","gulp-sass","gulp-sourcemaps","gulp-strip-debug","gulp-template","gulp-uglify","gulp-util","jasmine","jasmine-jquery","karma","karma-browserify","karma-chrome-launcher","karma-intl-shim","karma-jasmine","merge-stream","odc-d3","run-sequence","stringify","svg2pdf.js","vinyl-buffer","vinyl-source-stream","yargs","dependencies","autosize","blueimp-canvas-to-blob","d3-array","d3-dispatch","d3-drag","d3-scale","d3-selection","d3-time-format","file-saver","hammerjs","i18next","jquery","jquery-ui","pivottable","sd-computations","sd-model","sd-utils","sd-tree-designer","d3","_interopRequireWildcard","_templates","_sdTreeDesigner","AppUtils","_TdUtils","selection","node","classed","element","style","width","getBoundingClientRect","update","default","form","createElement","mergeDeep","document","body","submit","removeElement","title","html","closeCallback","popup","select","selectOrAppend","Templates","remove","_i18n","_sdUtils","_appUtils","model","_sidebar","_toolbar","_settingsDialog","_aboutDialog","_exporter","_definitionsDialog","_sdComputations","_sensitivityAnalysisDialog","_loadingIndicator","_leagueTableDialog","buildConfig","AppConfig","custom","readOnly","logLevel","workerUrl","jobRepositoryType","clearRepository","buttons","showDetails","showDefinitions","jsonFileDownload","height","rule","lng","format","treeDesigner","leagueTable","deepExtend","containerIdOrElem","config","diagramData","viewModes","payoffsMaximization","p","Promise","resolve","setConfig","initI18n","initContainer","initViewModes","initDataModel","initComputationsManager","initProbabilityNumberFormat","initPayoffNumberFormat","initTreeDesigner","initSidebar","initSettingsDialog","initAboutDialog","initDefinitionsDialog","initSensitivityAnalysisDialog","initLeagueTableDialog","initOnBeforeUnload","initKeyCodes","then","initToolbar","openDiagram","updateView","catch","setLogLevel","setLevel","Utils","selector","trim","startsWith","container","buildTimestamp","init","dataModel","DataModel","nodeAddedCallback","nodeRemovedCallback","waitForFinalEvent","_this2","onNodeAddedOrRemoved","textAddedCallback","text","onTextAdded","textRemovedCallback","onTextRemoved","computationsManager","ComputationsManager","ruleName","expressionEngine","checkValidityAndRecomputeObjective","sidebar","Sidebar","settingsDialog","SettingsDialog","aboutDialog","AboutDialog","definitionsDialog","DefinitionsDialog","onClosed","_this3","recompute","leagueTableDialog","LeagueTableDialog","isMultipleCriteria","getRoots","isValid","validateParams","sensitivityAnalysisDialog","SensitivityAnalysisDialog","getGlobalVariableNames","toolbar","Toolbar","payoffNumberFormat","Intl","NumberFormat","locales","payoff1","payoff2","probabilityNumberFormat","probability","getTreeDesignerInitialConfig","container2","TreeDesigner","onObjectSelected","edge","onSelectionCleared","v","prefix","currentViewMode","multiCriteria","payoffNames","charAt","payoffIndex","operationsForObject","selectedObject","updateObjectPropertiesView","updateVariableDefinitions","updatePlottingRegionSize","hideObjectProperties","domain","Node","Edge","parentNode","definitionsSourceObject","getCurrentVariableDefinitionsSourceObject","TerminalNode","updateDefinitions","saveState","open","withTransitions","redraw","updateLayoutOptions","updateDiagramDetails","updateMultipleCriteria","undo","findById","fieldName","Text","_this5","_this6","evalCode","evalNumeric","getCurrentRule","setCurrentRuleByName","currentRule","maxPayoffsToDisplay","payoffCoeffs","i18n","maximization","tmp","flipCriteria","getObjectiveRules","filter","_this9","setViewMode","find","objectiveRulesManager","setPayoffIndex","rules","newRule","_this10","every","setObjectiveRule","isSensitivityAnalysisAvailable","dataDTO","originalDataModelSnapshot","createStateSnapshot","loadFromDTO","getJsonReviver","updateDisplayValues","svgString","Exporter","getSVGString","svg","showFullScreenPopup","_setNewState","policy","displayPolicy","show","hide","debounce","forceWhenAutoIsDisabled","debouncedRecompute","_this11","isAutoRecalculationEnabled","raw","allRules","updateValidationMessages","dispatchEvent","_this13","setDiagramTitle","setDiagramDescription","errors","JSON","parse","dataModelObject","isValidVersionString","compareVersionNumbers","expressionScope","trees","texts","isRuleName","viewMode","setViewModeByName","setDefaultViewModeForRule","getObjectiveRuleByName","load","updateVisibility","sensitivityAnalysis","loadSavedParamValues","updateNumberFormats","filterLocation","filterComputed","filterPrivate","isoFormat","Date","serialize","_this15","jobNameToParamValues","getJsonReplacer","json","_this16","blob","Blob","saveAs","getExportFileName","addEventListener","isUndoAvailable","isRedoAvailable","dialogText","returnValue","path","withoutStateSaving","callback","prevValue","setConfigParam","_this17","updateDiagramTitle","_this18","updateDiagramDescription","srcElement","event","target","nodeName","toUpperCase","keyCode","removeSelectedNodes","removeSelectedTexts","ctrlKey","altKey","_this19","selectedNode","addDecisionNode","addChanceNode","addTerminalNode","injectDecisionNode","injectChanceNode","selectedNodes","getSelectedNodes","cutSelectedNodes","copySelectedNodes","_selectedNode","pasteToNode","growl","utils","appUtils","getGlobalObject","widget","wrapper","addClass","insertAfter","_createAutocomplete","_createShowAllButton","selected","children","input","appendTo","attr","autocomplete","proxy","_on","ui","item","option","_trigger","inputD3","dispatchHtmlEvent","wasOpen","is","trigger","request","response","matcher","RegExp","escapeRegex","term","Autocomplete","combobox","_d3Dispatch","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","_dialog","_Dialog","app","_sdModel","_this","definitionsScopeLabel","definitionsCode","updateInputClass","changeCallback","recalculateButton","variableValuesContainer","elasticTextarea","detail","isVisible","scopeType","labelSuffix","autoResizeTextarea","$codeError","printError","printVariables","scope","scopeVariables","getVariablesAsList","Dialog","close","shrink","onOpen","fullScreen","onResized","setFullScreen","_jobParametersBuilder","_sensitivityAnalysisResultTable","_probabilisticSensitivityAnalysisResultTable","_policy","_tornadoDiagramPlot","_spiderPlot","jobConfigurations","jobConfigurationContainer","parameterBuilderContainer","jobParametersBuilder","JobParametersBuilder","onJobParametersChanged","progressBarContainer","progressBar","jobResultsContainer","jobResultPlotContainer","debouncedCheckWarnings","checkWarnings","initButtons","initJobConfigurations","jobSelect","initJobSelect","payoffConf","cloneDeep","useGrouping","jobInstanceManager","terminate","jobConfig","clearWarnings","selectedJobConfig","jobName","job","getJobByName","jobParamsValues","setJobParamsValues","deleteId","refreshSelectedJobConfig","jobParameters","createJobParameters","setJobParameters","customParamsConfig","ExpressionEngine","customVariablesValidator","isValidArray","names","isVariableInGlobalScope","valid","largeScenariosNumberWarning","variables","reduce","b","number","variable","min","toFloat","divide","subtract","isValidNameArray","randomMenuList","warnings","warnConf","check","_this4","addWarning","selectAll","msg","msgHTML","appendSelector","guid","onJobSelected","rows","indexes","onResultRowSelected","resultTable","setClassName","SensitivityAnalysisJobResultTable","setData","ProbabilisticSensitivityAnalysisJobResultTable","disable","runJobButton","_this7","disableActionButtonsAndShowLoadingIndicator","runJobWithInstanceManager","onJobStarted","onJobCompleted","onJobFailed","onJobStopped","onJobTerminated","onProgress","resumeJobButton","resume","stopJobButton","stop","terminateJobButton","terminateJob","backButton","downloadCsvButtons","downloadCSV","clearButton","clearParams","clearAllParams","clearResults","setProgress","markAsError","forOwn","_this8","globalVariableNames","paramValues","resultPlots","destroy","progress","displayResult","debug","initResultTable","initResultPlots","initTornadoResultPlots","initSpiderResultPlots","policies","plot","maxWidth","resultPlot","TornadoDiagramPlot","SpiderPlot","errorMessage","msgKey","message","percents","current","total","policyIndexes","policyIndex","Policy","toPolicyString","row","variableNames","showPolicyPreview","clearSelection","saveAsCSV","getRows","params","extendedPolicyDescription","jobResultToCsvRows","_inputField","_pathValueAccessor","formGroups","group","FormGroup","updateCustomStyles","addField","addSelectField","fontWeightOptions","fontStyleOptions","payoffGroup","updatePayoffNumberFormat","currency","minimumFractionDigits","maximumFractionDigits","payoff2Group","updateProbabilityNumberFormat","nodeGroup","addGroup","edgeGroup","titleGroup","leagueTableGroup","otherGroup","onRawOptionChanged","initView","temp","formGroupsEnter","enter","formGroupsMerge","merge","inputGroups","fields","checked","validator","valueAccessor","valueUpdateCallback","each","pristineVal","initFormGroups","groups","fieldConfig","_addField","fieldId","label","configInputField","ConfigInputField","_InputField","sourceObject","PathValueAccessor","_blueimpCanvasToBlob","_fileSaver","svgNode","appendInlineStyles","source","parentCs","targetChildren","childNodes","tagName","cssStyleText","cs","getComputedStyle","display","styleName","propertyValue","getPropertyValue","exportedStyles","svgProperties","setAttribute","removeAttribute","toRemove","_i","removeChild","svgClone","cloneNode","removeIds","getSvgCloneWithInlineStyles","serializeSvgNode","sanitizeSVG","XMLSerializer","serializeToString","DOMParser","parseFromString","documentElement","imgsrc","encodeURIComponent","canvas","getContext","image","Image","onload","drawImage","toBlob","filesize","round","ext","timeFormat","clientSide","png","fallback","serverSide","detectIE","pngWidth","pngHeight","svgString2Image","dataBlob","warn","info","exportPngServerSide","serverUrl","doc","jsPDF","dummy","innerHTML","firstChild","save","filename","successCallback","failCallback","xhr","XMLHttpRequest","setRequestHeader","responseType","getResponseHeader","onreadystatechange","oEvent","readyState","send","noDownload","postAndSave","LoadingIndicator","clientSidePdfExportAvailable","isClientSidePdfExportAvailable","pdf","svgElement","baseVal","exportPdfClientSide","exportPdfServerSide","svg2pdf","sanitized","csvRows","escapeCsvField","join","csvString","field","dataURLtoBlob","FileLoader","getElementById","onchange","file","fr","FileReader","files","readAsText","click","InputField","parser","styleClass","newDiagram","saveDiagram","export","layout","manual","tree","cluster","criterion1","criterion2","twoCriteria","objectiveRule","expected-value-maximization","expected-value-minimization","maxi-min","maxi-max","mini-min","mini-max","min-max","max-min","min-min","max-max","settings","about","payoff","downloadCsv","headers","policyNo","comment","dominatedBy","extendedDominatedBy","incratio","highlighted","highlighted-default","extended-dominated","dominated","tooltip","gradientArrow1","gradientArrow2","dominatedRegion","legend","gradientArrows","runJob","stopJob","resumeJob","back","removeParameterValue","addParameterValue","jobResultTable","multiplePoliciesInCell","pivot","aggregators","maximum","minimum","renderers","heatmap","policyPreview","sensitivity-analysis","param","step","computations","largeScenariosNumber","largeParametersNumber","tornado-diagram","defaultValue","low","high","xAxisTitle","probabilistic-sensitivity-analysis","numberOfRuns","formula","help","param-computation","spider-plot","percentageChangeRange","yAxisTitle","league-table","generic","general","fontSize","fontFamily","fontWeight","fontStyle","numberFormatLocale","currencyDisplay","color","strokeWidth","optimal","stroke","negativeColor","decision","fill","chance","terminal","diagramTitle","margin","top","bottom","marginTop","highlightedColor","highlightedDefaultColor","extendedDominatedColor","dominatedColor","defaultColor","other","disableAnimations","forceFullEdgeRedraw","hideLabels","hidePayoffs","hideProbabilities","header","mouse","2","3","keyboard","4","5","6","docs","recalculate","evaluatedVariables","sidebarDefinitions","openDialog","multipleCriteria","defaultMaximizedCriterionName","defaultMinimizedCriterionName","nameOfCriterion1","nameOfCriterion2","defaultCriterion1Weight","weightLowerBound","weightUpperBound","showLeagueTable","flip","layoutOptions","marginHorizontal","marginVertical","nodeSize","edgeSlantWidthMax","gridWidth","gridHeight","diagramDetails","objectProperties","childrenProperties","child","confirm","beforeunload","jsonParse","fileApiNotSupported","inputFilesProperty","notSilverDecisionsFile","incorrectVersionFormat","fileVersionNewerThanApplicationVersion","objectiveComputationFailure","diagramDrawingFailure","malformedData","pngExportNotSupported","pngExportNotSupportedIE","svgExportNotSupported","pdfExportNotSupported","incorrectPayoffNumberFormatOptions","incorrectProbabilityNumberFormatOptions","incorrectNumberFormatOptions","jsPDFisNotIncluded","serverSideExportRequestFailure","en","pl","it","de","language","$instance","_i18next2","createInstance","err","opt","_app","_package","D3Extensions","_jobParameterDefinition","_autocomplete","i18nPrefix","onChange","paramTypeToInputType","paramTypeToInputAttrs","PARAMETER_TYPE","BOOLEAN","DATE","INTEGER","NUMBER","STRING","clean","build","definitions","pristine","customValidators","strictValidation","checkCustomValidators","enabled","jobParameterDefinitions","parentValueObject","parentPath","onInput","paramsEnter","paramSelection","repeating","maxOccurs","vi","minOccurs","getEmptyValue","getParamNameI18n","valuesContainer","addButton","callbacks","onValueRemoved","buildParameterValues","buildParameterSingleValue","paramDefinition","checkCustomValidator","allValid","customValidator","indexToSelection","validateSingleValue","exit","paramValuesEnter","paramValuesMerge","updateDerivedValues","updater","derivedValueUpdaters","COMPOSITE","nestedParameters","derivedValuesConfigs","derivedValueConfig","buildDerivedValue","removeButton","inputId","append","paramValue","getParamHelpI18n","helpContainer","attach","inputType","additionalInputAttrs","concat","getInput","parseInput","_value","parameterType","parseFloat","_pivotTable","JobResultTableConfig","onRowSelected","className","JobResultTable","pivotTable","PivotTable","filters","pivotData","selectedIndexes","selectedRows","forEachMatchingRecord","record","pivotOptions","pivotUtilities","derivers","vals","cols","getAggregatorName","clickCallback","extent","scaleLinear","range","getRendererName","aggregatorName","_show","_jobResultTable","_JobResultTable","payoffNumberFormatter","probabilityNumberFormatter","jobResult","expectedValues","medians","standardDeviations","policyIsBestProbabilities","trace","attributeArray","rowKey","colKey","roundVariables","csvDAta","totalInColNum","_totalInColNum","_lineChart","SpiderPlotConfig","_LineChartConfig","showLegend","guides","y","series","dotRadius","_LineChart","placeholderSelector","variableName","percentageRangeValues","rangeVal","payoffs","baseContainer","_divergingStackedBarChart","TornadoDiagramPlotConfig","_DivergingStackedBarC","forceLegend","categoryNames","colorRange","middleValue","showBarValues","_DivergingStackedBarC2","defaultPayoff","varExtent","variableExtents","extents","extentVariableValues","_leagueTable","_leagueTablePlot","emphasize","LeagueTable","defaultWeight","groupConf","optimalForDefaultWeight","groupKey","LeagueTablePlot","initJobParams","initResultPlot","_scatterplot","LeagueTablePlotConfig","_ScatterPlotConfig","Infinity","gradientArrowLength","gradientArrowOffset","emphasizedDotRadius","dotId","_ScatterPlot","initArrowMarker","checkOrdering","groupOrdering","getOrdering","newData","updateIcerLines","updateDominatedRegion","updateGradientArrows","updateDotLabels","linesContainerSelector","linesContainerClass","prefixClass","linesContainer","svgG","selectOrInsert","dotsContainerClass","clipPathId","line","highlightedPoints","groupValue","highlightedDefaultPoints","dominatedRegionPoints","minPoint","maxPoint","lowPoint","highPoint","xAxisExtent","scale","invert","infLowY","infLowPoint","infHighPoint","_x","defaultPoint","defLowPoint","defHighPoint","_x2","unshift","dominatedRegionContainerSelector","dominatedRegionContainer","worstPoint","prev","curr","area","y0","labelsContainerSelector","labels","coeff","offset","x1","x2","y2","y1","arrowsContainerSelector","arrowsContainer","arrowClass","arrows","arrowsEnter","arrowsMerge","_emphasize","emphasizeDot","transition","dotClass","legendCells","getBBox","getTextData","word","words","reverse","lineNumber","dy","tspan","previousSibling","pop","getComputedTextLength","LeagueTableConfig","onRowHover","onRowHoverOut","resultTableHead","resultTableBody","resultTableFoot","drawHeaders","drawRows","headerData","headersMerge","rowsData","getRowComment","rowsMerge","cells","cellsMerge","rowspan","policy1","policy2","revertAggregators","origAggregator","origAggregators","numberFormat","opts","showZero","args1","res1","res","format_","origX","_toConsumableArray","pivotUI","toLowerCase","_payoffInputValidator","_probabilityInputValidator","_requiredInputValidator","_mcdmWeightValueValidator","dispatch","initLayoutOptions","initDiagramDetails","initDefinitions","initMultipleCriteria","onObjectUpdated","onMultiCriteriaUpdated","layoutOptionsContainer","autoLayoutOptionsGroup","setGridWidth","parseInt","setGridHeight","setNodeSize","setEdgeSlantWidthMax","m","left","right","setMargin","onAutoLayoutChanged","isManualLayout","diagramDetailsContainer","diagramDescription","definitionsContainer","onDefinitionsCodeChanged","definitionsEvaluatedValuesContainer","openDefinitionsDialog","multipleCriteriaContainer","showLeagueTableButton","flipCriteriaButton","weightParser","multipleCriteriaFields","RequiredInputValidator","lowerBoundValueAccessor","upperBoundValueAccessor","weightValueValidator","McdmWeightValueValidator","upper","compare","lower","updateInputs","leagueTableAvailable","isLeagueTableAvailable","getValue","saveStateFromSnapshot","pristineStateSnapshot","setValue","objectProps","headerText","getHeaderTextForObject","fieldList","getFieldListForObject","updateObjectFields","updateObjectChildrenProperties","childObjects","getChildObjectList","objectType","getObjectType","childPropsSelector","childEdges","childNode","location","ObjectInputField","PayoffInputValidator","ChanceNode","ProbabilityInputValidator","fieldsMerge","fieldSelection","sourceId","setSyntaxValidity","isFieldValid","customOnInput","checkFieldStatus","_TdTemplates","templateName","compiled","template","imports","include","about_de","about_en","about_fr","about_it","about_pl","diagramDetailsBox","settingsDialogFormGroup","inputGroup","selectInputGroup","jobParameter","loadingIndicator","fullscreenPopup","warningMessage","_fileLoader","hiddenClass","initDiagramButtons","initExportToolbarGroup","initLayoutButtons","initUndoRedoButtons","initSettingsButton","initAboutButton","initSensitivityAnalysisButton","initRecomputeButton","initViewModeToolbarGroup","initObjectiveRuleToolbarGroup","newDiagramButton","new","openDiagramButton","openFile","saveDiagramButton","saveToFile","onLayoutChanged","layoutButtons","disableAutoLayout","autoLayout","updateLayoutButtons","settingsButton","aboutButton","recomputeButton","sensitivityAnalysisButton","openSensitivityAnalysis","button","undoRedoStateChangedCallback","onUndoRedoChanged","undoButton","redoButton","updateUndoRedoButtons","updateSensitivityAnalysisButton","updateViewModeValue","updateObjectiveRuleOptions","updateObjectiveRuleValue","initExportToPngButton","initExportSvgButton","initExportPdfButton","saveAsPng","exportToPng","saveAsSvg","exportToSvg","saveAsPdf","exportToPdf","objectiveRuleSelect","getCurrentObjectiveRule","viewModeSelect","getViewModes","getCurrentViewMode","NumberInputValidator","isNumber","hasAssignmentExpression","isHash","_index","textD3Obj","textString","textObj","textContent","getSubStringLength","substring","placeTextWithEllipsis","duration","pageX","pageY","createElementNS","setAttributeNS","matrix","consolidate","pathNode","point","distance2","dx","best","bestLength","scan","scanDistance","pathLength","getTotalLength","precision","bestDistance","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","sqrt","position","time","setTimeout","tag","attribs","parent","el","appendChild","createTextNode","div","evt","createEvent","initEvent","fireEvent","CustomEvent","initCustomEvent","exact","offsetParent","sanitizeHeight","sanitizeWidth","availableHeight","availableWidth","ContextMenu","menu","_classCallCheck","openCallback","onClose","elm","preventDefault","stopPropagation","ret","divider","disabled","action","console","_contextMenu","EdgeContextMenu","_possibleConstructorReturn","MainContextMenu","mousePosition","newNode","DecisionNode","addNode","newText","addText","pasteToNewLocation","copiedNodes","selectAllNodes","Point","move","getMainGroupTranslation","NodeContextMenu","copyMenuItem","selectNode","isNodeSelected","cutMenuItem","pasteMenuItem","folded","pasteCloneMenuItem","deleteMenuItem","$TYPE","addNodeConversionOptions","selectSubTree","foldSubtree","operations","op","performOperation","canPerform","conversionOptions","getNodeConversionOptions","allAllowedTypes","$parent","getNodeConversionOption","typeToConvertTo","convertNode","TextContextMenu","selectText","insertSelector","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","empty","contextMenu","paste","cut","convert","selectSubtree","fold","unfold","flipSubtree","validation","incompletePath","probabilityDoNotSumUpTo1","invalidProbability","invalidPayoff","brushDisabled","brushEnabled","named","aggregatedPayoff","probabilityToEnter","resources","translation","fallbackLng","_treeDesigner","_tooltip","_d3Extensions","Layout","nodeTypeToSymbol","symbolSquare","_circle2","_triangle2","clone","symbolStar","nodeTypeOrder","treeMargin","targetSymbolSize","nodeSeparation","nodeSymbolSize","moveNodeToEmptyPlace","MANUAL_LAYOUT_NAME","getNodeMinX","getNodeMinY","$linePoints","redrawIfChanged","nodesSortedByX","nodes","colidingNode","stepX","stepY","changed","newLocation","findCollidingNode","moveTo","_fireOnAutoLayoutChangedCallbacks","nodeSymbol","box","setHangingPosition","getFontSize","items","displayValue","aggregatedPayoffs","dX","slantStartXOffset","slantWidth","point1","point2","point3","point4","datum","len","getMinMarginBetweenNodes","$hidden","onUndo","onRedo","fitNodesInPlottingRegion","newLayout","currentLayout","prevTreeMaxY","root","hierarchy","separation","minY","maxY","limit","limitNodePositioning","backupNodeLocation","minX","maxX","getNodeMaxX","revertX","$location","updateNodePosition","isHidden","NodeDragHandler","drag","subject","getTranslation","dragStarted","onDrag","dragEnded","ignoreDrag","ignoredDrag","prevDragEvent","dragEventCount","draggedNode","moveNodes","redrawEdges","pi","PI","draw","dist","bezierCurveTo","lineTo","closePath","styleProp","clazz","treeDesignerSelector","treeDesignerStyles","styleRule","nodeSelector","edgeSelector","TextDragHandler","draggedText","updateTextPosition","Tooltip","xOffset","yOffset","getContainer","updatePosition","htmlOrFn","_mainContextMenu","_nodeContextMenu","_layout","_nodeDragHandler","_textDragHandler","_textContextMenu","_edgeContextMenu","Hammer","TreeDesignerConfig","onNodeSelected","onEdgeSelected","onTextSelected","initSvg","initLayout","initBrush","initEdgeMarkers","initMainContextMenu","initNodeContextMenu","initEdgeContextMenu","initNodeDragHandler","initTextDragHandler","initTextContextMenu","nodeDragHandler","textDragHandler","redrawDiagramTitle","redrawDiagramDescription","updateMargin","transitionPrev","redrawNodes","redrawFloatingTexts","computeAvailableSpace","mainGroup","mc","Manager","touchAction","Press","pointerType","Pinch","cancel","disableBrush","enableBrush","topMargin","getTitleGroupHeight","_parents","svgWidth","svgHeight","mainGroupBox","newSvgWidth","newSvgHeight","updateBrushExtent","nodesEnter","labelEnter","payoffEnter","indicatorEnter","aggregatedPayoffEnter","probabilityToEnterEnter","nodesMerge","isOptimal","nodesMergeT","drawNodeSymbol","nodeLabelPosition","labelMergeT","updateTextLines","payoffTspans","payoffTspansM","attachPayoffTooltip","payoffT","nodePayoffPosition","aggregatedPayoffTspans","aggregatedPayoffTspansM","aggregatedPayoffT","nodeAggregatedPayoffPosition","probabilityToEnterT","nodeProbabilityToEnterPosition","indicator","nodeIndicatorPosition","nodeContextMenu","nodeElem","cancelDrag","nodeUnfoldButtonPosition","payoffFiledName","lines","tspans","edgesContainer","edges","edgesEnter","probabilityEnter","edgesMerge","edgesMergeT","edgeLineD","selectEdge","edgeLabelPosition","_","displayPayoff","payoffTextT","edgePayoffPosition","displayProbability","probabilityMerge","probabilityMergeT","edgeProbabilityPosition","raise","edgeContextMenu","POINTER_TOUCH","textsEnter","textsMerge","textsMergeT","replaceUrls","escapeHtml","bb","textContextMenu","validationResults","validationResult","objectIdToError","nodeSelection","getNodeD3SelectionById","tooltipHtml","getValidationMessage","brush","brushContainer","hoveredEdge","mainGroupTranslation","mgt","closest","cp","closestPoint","mainContextMenu","getNewChildLocation","injectNode","getInjectedNodeLocation","removeNode","removeNodes","selectedTexts","getSelectedTexts","removeTexts","notClearPrevSelection","cloneSubtree","copyNode","selectedRoots","findSubtreeRoots","copyNodes","originalCopiedNodes","asTrackedClone","nodesToAttach","getTrackedClonesOfCopiedNodes","toAttach","attached","attachSubtree","getAllDescendantNodes","perform","getAllDescendantEdges","getNodeD3Selection","getTextD3Selection","getTextD3SelectionById","visibleOnly","selectedVisible","allSelected","descendants","clearSelectionBeforeSelect","skipCallback","titleValue","titleContainer","descriptionValue","withMargins","h"],"mappings":"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","file":"silver-decisions.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar copy             = require('es5-ext/object/copy')\n  , normalizeOptions = require('es5-ext/object/normalize-options')\n  , ensureCallable   = require('es5-ext/object/valid-callable')\n  , map              = require('es5-ext/object/map')\n  , callable         = require('es5-ext/object/valid-callable')\n  , validValue       = require('es5-ext/object/valid-value')\n\n  , bind = Function.prototype.bind, defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = validValue(desc) && callable(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (options.resolveContext != null) ensureCallable(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Array.from\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && (result !== arr) && (result[1] === \"dwa\"));\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity\nmodule.exports = function (arrayLike /*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array(length = arrayLike.length);\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call(\n\t(function () {\n\t\treturn arguments;\n\t})()\n);\n\nmodule.exports = function (value) {\n\treturn objToString.call(value) === id;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(require(\"./noop\"));\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && objToString.call(value) === id;\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","/* eslint strict: \"off\" */\n\nmodule.exports = (function () {\n\treturn this;\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Math.sign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn (sign(10) === 1) && (sign(-20) === -1);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || (value === 0)) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Number.isNaN\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar numberIsNaN = Number.isNaN;\n\tif (typeof numberIsNaN !== \"function\") return false;\n\treturn !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\t// eslint-disable-next-line no-self-compare\n\treturn value !== value;\n};\n","\"use strict\";\n\nvar sign = require(\"../math/sign\")\n\n  , abs = Math.abs, floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif ((value === 0) || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n\n  , max = Math.max;\n\nmodule.exports = function (value) {\n return max(0, toInteger(value));\n};\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb /*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.assign\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src /*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tvalue: undefined\n\t};\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n}());\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) {\n return typeof obj === \"function\";\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) {\n\treturn (isValue(value) && map[typeof value]) || false;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) {\n return (val !== _undefined) && (val !== null);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.keys\n\t: require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n return false;\n}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(isValue(object) ? Object(object) : object);\n};\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb /*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1 /*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? Object.setPrototypeOf\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject        = require(\"../is-object\")\n  , value           = require(\"../valid-value\")\n  , objIsPrototypOf = Object.prototype.isPrototypeOf\n  , defineProperty  = Object.defineProperty\n  , nullDesc        = {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: undefined\n}\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n}(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n));\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? String.prototype.contains\n\t: require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","'use strict';\n\nif (!require('./is-implemented')()) {\n\tObject.defineProperty(require('es5-ext/global'), 'Set',\n\t\t{ value: require('./polyfill'), configurable: true, enumerable: false,\n\t\t\twritable: true });\n}\n","'use strict';\n\nmodule.exports = function () {\n\tvar set, iterator, result;\n\tif (typeof Set !== 'function') return false;\n\tset = new Set(['raz', 'dwa', 'trzy']);\n\tif (String(set) !== '[object Set]') return false;\n\tif (set.size !== 3) return false;\n\tif (typeof set.add !== 'function') return false;\n\tif (typeof set.clear !== 'function') return false;\n\tif (typeof set.delete !== 'function') return false;\n\tif (typeof set.entries !== 'function') return false;\n\tif (typeof set.forEach !== 'function') return false;\n\tif (typeof set.has !== 'function') return false;\n\tif (typeof set.keys !== 'function') return false;\n\tif (typeof set.values !== 'function') return false;\n\n\titerator = set.values();\n\tresult = iterator.next();\n\tif (result.done !== false) return false;\n\tif (result.value !== 'raz') return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `Set` implementation,\n// whatever that is.\n\n'use strict';\n\nmodule.exports = (function () {\n\tif (typeof Set === 'undefined') return false;\n\treturn (Object.prototype.toString.call(Set.prototype) === '[object Set]');\n}());\n","'use strict';\n\nvar setPrototypeOf    = require('es5-ext/object/set-prototype-of')\n  , contains          = require('es5-ext/string/#/contains')\n  , d                 = require('d')\n  , Iterator          = require('es6-iterator')\n  , toStringTagSymbol = require('es6-symbol').toStringTag\n\n  , defineProperty = Object.defineProperty\n  , SetIterator;\n\nSetIterator = module.exports = function (set, kind) {\n\tif (!(this instanceof SetIterator)) return new SetIterator(set, kind);\n\tIterator.call(this, set.__setData__, set);\n\tif (!kind) kind = 'value';\n\telse if (contains.call(kind, 'key+value')) kind = 'key+value';\n\telse kind = 'value';\n\tdefineProperty(this, '__kind__', d('', kind));\n};\nif (setPrototypeOf) setPrototypeOf(SetIterator, Iterator);\n\nSetIterator.prototype = Object.create(Iterator.prototype, {\n\tconstructor: d(SetIterator),\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === 'value') return this.__list__[i];\n\t\treturn [this.__list__[i], this.__list__[i]];\n\t}),\n\ttoString: d(function () { return '[object Set Iterator]'; })\n});\ndefineProperty(SetIterator.prototype, toStringTagSymbol, d('c', 'Set Iterator'));\n","'use strict';\n\nvar clear          = require('es5-ext/array/#/clear')\n  , eIndexOf       = require('es5-ext/array/#/e-index-of')\n  , setPrototypeOf = require('es5-ext/object/set-prototype-of')\n  , callable       = require('es5-ext/object/valid-callable')\n  , d              = require('d')\n  , ee             = require('event-emitter')\n  , Symbol         = require('es6-symbol')\n  , iterator       = require('es6-iterator/valid-iterable')\n  , forOf          = require('es6-iterator/for-of')\n  , Iterator       = require('./lib/iterator')\n  , isNative       = require('./is-native-implemented')\n\n  , call = Function.prototype.call\n  , defineProperty = Object.defineProperty, getPrototypeOf = Object.getPrototypeOf\n  , SetPoly, getValues, NativeSet;\n\nif (isNative) NativeSet = Set;\n\nmodule.exports = SetPoly = function Set(/*iterable*/) {\n\tvar iterable = arguments[0], self;\n\tif (!(this instanceof SetPoly)) throw new TypeError('Constructor requires \\'new\\'');\n\tif (isNative && setPrototypeOf) self = setPrototypeOf(new NativeSet(), getPrototypeOf(this));\n\telse self = this;\n\tif (iterable != null) iterator(iterable);\n\tdefineProperty(self, '__setData__', d('c', []));\n\tif (!iterable) return self;\n\tforOf(iterable, function (value) {\n\t\tif (eIndexOf.call(this, value) !== -1) return;\n\t\tthis.push(value);\n\t}, self.__setData__);\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(SetPoly, NativeSet);\n\tSetPoly.prototype = Object.create(NativeSet.prototype, { constructor: d(SetPoly) });\n}\n\nee(Object.defineProperties(SetPoly.prototype, {\n\tadd: d(function (value) {\n\t\tif (this.has(value)) return this;\n\t\tthis.emit('_add', this.__setData__.push(value) - 1, value);\n\t\treturn this;\n\t}),\n\tclear: d(function () {\n\t\tif (!this.__setData__.length) return;\n\t\tclear.call(this.__setData__);\n\t\tthis.emit('_clear');\n\t}),\n\tdelete: d(function (value) {\n\t\tvar index = eIndexOf.call(this.__setData__, value);\n\t\tif (index === -1) return false;\n\t\tthis.__setData__.splice(index, 1);\n\t\tthis.emit('_delete', index, value);\n\t\treturn true;\n\t}),\n\tentries: d(function () { return new Iterator(this, 'key+value'); }),\n\tforEach: d(function (cb/*, thisArg*/) {\n\t\tvar thisArg = arguments[1], iterator, result, value;\n\t\tcallable(cb);\n\t\titerator = this.values();\n\t\tresult = iterator._next();\n\t\twhile (result !== undefined) {\n\t\t\tvalue = iterator._resolve(result);\n\t\t\tcall.call(cb, thisArg, value, value, this);\n\t\t\tresult = iterator._next();\n\t\t}\n\t}),\n\thas: d(function (value) {\n\t\treturn (eIndexOf.call(this.__setData__, value) !== -1);\n\t}),\n\tkeys: d(getValues = function () { return this.values(); }),\n\tsize: d.gs(function () { return this.__setData__.length; }),\n\tvalues: d(function () { return new Iterator(this); }),\n\ttoString: d(function () { return '[object Set]'; })\n}));\ndefineProperty(SetPoly.prototype, Symbol.iterator, d(getValues));\ndefineProperty(SetPoly.prototype, Symbol.toStringTag, d('c', 'Set'));\n","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n","module.exports={\n  \"name\": \"silver-decisions\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Software for creating and analyzing decision trees.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/SilverDecisions/SilverDecisions.git\"\n  },\n  \"author\": \"Michał Wasiluk, Bogumił Kamiński, Przemysław Szufel\",\n  \"license\": \"LGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/SilverDecisions/SilverDecisions/issues\"\n  },\n  \"homepage\": \"https://github.com/SilverDecisions/SilverDecisions#readme\",\n  \"browserify\": {\n    \"transform\": [\n      [\n        \"babelify\",\n        {\n          \"presets\": [\n            \"es2015\"\n          ],\n          \"plugins\": [\n            [\"transform-class-properties\", { \"spec\": true }],\n            \"transform-object-assign\",\n            \"transform-es2015-spread\",\n            \"transform-object-rest-spread\",\n            [\n              \"babel-plugin-transform-builtin-extend\",\n              {\n                \"globals\": [\n                  \"Error\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    ]\n  },\n  \"devDependencies\": {\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.11.5\",\n    \"babel-plugin-transform-es2015-spread\": \"^6.22.0\",\n    \"babel-plugin-transform-object-assign\": \"^6.8.0\",\n    \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.14.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browser-sync\": \"^2.13.0\",\n    \"browserify\": \"^14.5.0\",\n    \"browserify-resolutions\": \"^1.1.0\",\n    \"browserify-shim\": \"^3.8.13\",\n    \"chalk\": \"^2.3.0\",\n    \"del\": \"^3.0.0\",\n    \"es6-set\": \"^0.1.5\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-filelist\": \"^1.0.0\",\n    \"gulp-html2js\": \"^0.4.2\",\n    \"gulp-load-plugins\": \"^1.2.4\",\n    \"gulp-minify-css\": \"^1.2.4\",\n    \"gulp-plumber\": \"^1.1.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-replace\": \"^0.6.1\",\n    \"gulp-sass\": \"^3.1.0\",\n    \"gulp-sourcemaps\": \"^2.6.1\",\n    \"gulp-strip-debug\": \"^1.1.0\",\n    \"gulp-template\": \"^4.0.0\",\n    \"gulp-uglify\": \"^3.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jasmine\": \"^2.5.2\",\n    \"jasmine-jquery\": \"^2.1.1\",\n    \"karma\": \"^1.7.0\",\n    \"karma-browserify\": \"^5.1.1\",\n    \"karma-chrome-launcher\": \"^2.0.0\",\n    \"karma-intl-shim\": \"^1.0.3\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"merge-stream\": \"^1.0.0\",\n    \"odc-d3\": \"^1.1.6\",\n    \"run-sequence\": \"^2.0.0\",\n    \"stringify\": \"^5.1.0\",\n    \"svg2pdf.js\": \"^1.1.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"yargs\": \"^10.0.3\"\n  },\n  \"dependencies\": {\n    \"autosize\": \"^4.0.0\",\n    \"blueimp-canvas-to-blob\": \"^3.3.0\",\n    \"d3-array\": \"^1.0.1\",\n    \"d3-dispatch\": \"^1.0.1\",\n    \"d3-drag\": \"^1.0.1\",\n    \"d3-scale\": \"^1.0.3\",\n    \"d3-selection\": \"^1.0.2\",\n    \"d3-time-format\": \"^2.0.2\",\n    \"file-saver\": \"^1.3.2\",\n    \"hammerjs\": \"^2.0.8\",\n    \"i18next\": \"^10.0.3\",\n    \"jquery\": \"^3.1.1\",\n    \"jquery-ui\": \"^1.12.1\",\n    \"pivottable\": \"^2.11.0\",\n    \"sd-computations\": \"0.3.6\",\n    \"sd-model\": \"0.3.0\",\n    \"sd-utils\": \"0.1.11\",\n    \"sd-tree-designer\": \"0.1.8\"\n  }\n}\n","import * as d3 from \"./d3\";\nimport * as autosize from \"autosize\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils as TdUtils} from \"sd-tree-designer\";\n\nexport class AppUtils extends TdUtils{\n\n\n\n    static updateInputClass(selection){\n        var value = selection.node().value;\n        selection.classed('empty', value!==0 && !value);\n        return selection;\n    }\n\n    static autoResizeTextarea(element){\n        setTimeout(function(){\n            element.style.width = \"\";\n            var width = element.getBoundingClientRect().width;\n            if(width){\n                element.style.width = width+'px';\n            }\n            autosize.update(element);\n        }, 10);\n    }\n\n    static elasticTextarea(selection){\n        setTimeout(function(){\n            selection.style('width',undefined);\n            var width = selection.node().getBoundingClientRect().width;\n            if(width){\n                selection.style('width', width+'px')\n            }\n            autosize.default(selection.node());\n        },10)\n    }\n\n    static postByForm(url, data) {\n        var name,\n            form;\n\n        // create the form\n        form = AppUtils.createElement('form', AppUtils.mergeDeep({\n            method: 'post',\n            action: url,\n            enctype: 'multipart/form-data'\n        }), document.body);\n\n        for (name in data) {\n            if(data.hasOwnProperty(name)){\n                AppUtils.createElement('input', {\n                    type: 'hidden',\n                    name: name,\n                    value: data[name]\n                }, form);\n            }\n        }\n\n        form.submit();\n\n        AppUtils.removeElement(form);\n    };\n\n    static showFullScreenPopup(title, html, closeCallback){\n        var popup = d3.select(\"body\").selectOrAppend(\"div.sd-full-screen-popup-container\").html(Templates.get('fullscreenPopup', {title:title,body:html}));\n        popup.select('.sd-close-popup').on('click', ()=>{\n            popup.remove();\n            if(closeCallback) {\n                closeCallback()\n            }\n        })\n\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport * as model from \"sd-model\";\nimport {TreeDesigner} from \"sd-tree-designer\";\nimport {Templates} from \"./templates\";\nimport {Sidebar} from \"./sidebar\";\nimport {Toolbar} from \"./toolbar\";\nimport {SettingsDialog} from \"./dialogs/settings-dialog\";\nimport {AboutDialog} from \"./dialogs/about-dialog\";\nimport {Exporter} from \"./exporter\";\nimport {DefinitionsDialog} from \"./dialogs/definitions-dialog\";\nimport {ComputationsManager} from \"sd-computations\";\nimport {SensitivityAnalysisDialog} from \"./dialogs/sensitivity-analysis-dialog\";\nimport {LoadingIndicator} from \"./loading-indicator\";\nimport {LeagueTableDialog} from \"./league-table/league-table-dialog\";\n\nvar buildConfig = require('../tmp/build-config.js');\n\nexport class AppConfig {\n    readOnly = false;\n    logLevel = 'warn';\n    workerUrl = null;\n    jobRepositoryType = 'idb';\n    clearRepository = false;\n    buttons = {\n        new: true,\n        save: true,\n        open: true,\n        exportToPng: true,\n        exportToSvg: true,\n        exportToPdf: true\n    };\n    exports = {\n        show: true,\n        serverUrl: 'http://export.highcharts.com', //url of the export server\n        pdf: {\n            mode: 'server', // available options: 'client', 'server', 'fallback',\n        },\n        png: {\n            mode: 'fallback', // available options: 'client', 'server', 'fallback',\n        }\n    };\n    showDetails = true;\n    showDefinitions = true;\n    jsonFileDownload = true;\n    width = undefined;\n    height = undefined;\n    rule = \"expected-value-maximization\";\n    lng = 'en';\n    format = {// NumberFormat  options\n        locales: 'en',\n        payoff1: {\n            style: 'currency',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        payoff2: {\n            style: 'decimal',\n            currency: 'USD',\n            currencyDisplay: 'symbol',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2,\n            // minimumSignificantDigits: 1,\n            useGrouping: true\n        },\n        probability: { // NumberFormat  options\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 3,\n            useGrouping: true\n        }\n    };\n    title = '';\n    description = '';\n    treeDesigner = {};\n    leagueTable = {\n        plot: {\n            maxWidth: \"800px\",\n            groups: {\n                'highlighted': {\n                    color: '#008000'\n                },\n                'highlighted-default': {\n                    color: '#00bd00'\n                },\n                'extended-dominated': {\n                    color: '#ffa500'\n                },\n                'dominated': {\n                    color: '#ff0000'\n                },\n                'default': {\n                    color: '#000000'\n                }\n            }\n        }\n    };\n\n    //https://github.com/d3/d3-format/blob/master/README.md#format\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class App {\n    static version = ''; // version is set from package.json\n    static buildTimestamp = buildConfig.buildTimestamp;\n    static utils = Utils;\n    static appUtils = AppUtils;\n    static d3 = d3;\n\n    config;\n    container;\n    dataModel; //Data model manager\n    expressionEngine;\n    computationsManager;\n    treeDesigner;\n    toolbar;\n    sidebar;\n    viewModes = [];\n    currentViewMode;\n\n    payoffsMaximization=[true, false];\n\n    constructor(containerIdOrElem, config, diagramData) {\n        var p = Promise.resolve();\n        this.setConfig(config);\n        this.initI18n();\n        this.initContainer(containerIdOrElem);\n        this.initViewModes();\n        this.initDataModel();\n        p = this.initComputationsManager();\n        this.initProbabilityNumberFormat();\n        this.initPayoffNumberFormat();\n        this.initTreeDesigner();\n        this.initSidebar();\n        this.initSettingsDialog();\n        this.initAboutDialog();\n        this.initDefinitionsDialog();\n        this.initSensitivityAnalysisDialog();\n        this.initLeagueTableDialog();\n        this.initOnBeforeUnload();\n        this.initKeyCodes();\n        p.then(()=> {\n            this.initToolbar();\n            if (diagramData) {\n                this.openDiagram(diagramData);\n            } else {\n                this.updateView();\n            }\n        }).catch(e=> {\n            log.error(e);\n        });\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new AppConfig();\n        } else {\n            this.config = new AppConfig(config);\n        }\n        this.setLogLevel(this.config.logLevel);\n        return this;\n    }\n\n    static growl() {\n        return AppUtils.growl(arguments)\n    }\n\n    setLogLevel(level) {\n        log.setLevel(level)\n    }\n\n    initContainer(containerIdOrElem) {\n\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else {\n            this.container = d3.select(containerIdOrElem);\n        }\n        var self = this;\n\n        let html = Templates.get('main', {\n            version: App.version,\n            buildTimestamp: App.buildTimestamp,\n            'lng': self.config.lng\n        });\n        this.container.html(html);\n\n        this.container.select('#silver-decisions').classed('sd-read-only', this.config.readOnly);\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n    initDataModel() {\n        var self = this;\n        this.dataModel = new model.DataModel();\n        // this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = ()=>self.onNodeAddedOrRemoved();\n        this.dataModel.nodeAddedCallback = this.dataModel.nodeRemovedCallback = (node)=> Utils.waitForFinalEvent(()=>this.onNodeAddedOrRemoved(), 'onNodeAddedOrRemoved', 5);\n\n        this.dataModel.textAddedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextAdded(text), 'onTextAdded');\n        this.dataModel.textRemovedCallback = (text)=> Utils.waitForFinalEvent(()=>this.onTextRemoved(text), 'onTextAdded');\n    }\n\n    initComputationsManager() {\n        this.computationsManager = new ComputationsManager({\n            ruleName: this.config.ruleName,\n            worker: {\n                url: this.config.workerUrl,\n            },\n            jobRepositoryType: this.config.jobRepositoryType,\n            clearRepository: this.config.clearRepository\n        }, this.dataModel);\n        this.expressionEngine = this.computationsManager.expressionEngine;\n        return this.checkValidityAndRecomputeObjective(false, false, false, true);\n\n    }\n\n    initSidebar() {\n        this.sidebar = new Sidebar(this.container.select('#sd-sidebar'), this);\n\n    }\n\n    initSettingsDialog() {\n        this.settingsDialog = new SettingsDialog(this);\n    }\n\n    initAboutDialog() {\n        this.aboutDialog = new AboutDialog(this);\n    }\n\n    initDefinitionsDialog() {\n        this.definitionsDialog = new DefinitionsDialog(this);\n        this.definitionsDialog.onClosed = ()=> this.recompute(true, true);\n\n    }\n\n    initLeagueTableDialog() {\n        this.leagueTableDialog = new LeagueTableDialog(this);\n    }\n\n    isLeagueTableAvailable() {\n        return this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.leagueTableDialog.validateParams();\n    }\n\n    initSensitivityAnalysisDialog() {\n        this.sensitivityAnalysisDialog = new SensitivityAnalysisDialog(this);\n\n    }\n\n    isSensitivityAnalysisAvailable() {\n        return !this.isMultipleCriteria() && this.dataModel.getRoots().length === 1 && this.computationsManager.isValid() && this.dataModel.getGlobalVariableNames(true).length;\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar(this.container.select('#sd-toolbar'), this);\n\n    }\n\n    initPayoffNumberFormat() {\n\n        this.payoffNumberFormat = [\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff1),\n            new Intl.NumberFormat(this.config.format.locales, this.config.format.payoff2)\n        ]\n\n    }\n\n    initProbabilityNumberFormat() {\n        this.probabilityNumberFormat = new Intl.NumberFormat(this.config.format.locales, this.config.format.probability);\n    }\n\n    initTreeDesigner() {\n        var self = this;\n        var config = this.getTreeDesignerInitialConfig();\n        let container2 = this.container.select('#tree-designer-container');\n\n        this.treeDesigner = new TreeDesigner(container2, this.dataModel, config);\n    }\n\n    getTreeDesignerInitialConfig() {\n        var self = this;\n\n        return Utils.deepExtend({\n            lng: self.config.lng,\n            readOnly: self.config.readOnly,\n            onNodeSelected: function (node) {\n                self.onObjectSelected(node);\n            },\n            onEdgeSelected: function (edge) {\n                self.onObjectSelected(edge);\n            },\n            onTextSelected: function (text) {\n                self.onObjectSelected(text);\n            },\n            onSelectionCleared: function () {\n                self.onSelectionCleared();\n            },\n            payoffNumberFormatter: (v, i) => {\n                let prefix = '';\n                if(self.currentViewMode.multiCriteria){\n                    prefix =  self.dataModel.payoffNames[i].charAt(0) + ': ';\n                }\n\n                return prefix + self.payoffNumberFormat[i || self.currentViewMode.payoffIndex || 0].format(v)\n            },\n            probabilityNumberFormatter: (v) => self.probabilityNumberFormat.format(v),\n            operationsForObject: (o) => self.computationsManager.operationsForObject(o)\n        }, self.config.treeDesigner);\n    }\n\n    onObjectSelected(object) {\n        var self = this;\n        if (this.selectedObject === object) {\n            return;\n        }\n        this.selectedObject = object;\n        setTimeout(function () {\n            self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10)\n    }\n\n    onSelectionCleared() {\n        var self = this;\n        this.selectedObject = null;\n        this.sidebar.hideObjectProperties();\n        setTimeout(function () {\n            self.updateVariableDefinitions();\n            self.treeDesigner.updatePlottingRegionSize();\n        }, 10);\n        // console.log();\n    }\n\n    getCurrentVariableDefinitionsSourceObject() {\n        if (this.selectedObject) {\n            if (this.selectedObject instanceof model.domain.Node) {\n                return this.selectedObject;\n            }\n            if (this.selectedObject instanceof model.domain.Edge) {\n                return this.selectedObject.parentNode;\n            }\n        }\n        return this.dataModel;\n    }\n\n    updateVariableDefinitions() {\n        var self = this;\n        var definitionsSourceObject = self.getCurrentVariableDefinitionsSourceObject();\n        var readOnly = (this.selectedObject instanceof model.domain.Edge) || (this.selectedObject instanceof model.domain.TerminalNode);\n        self.sidebar.updateDefinitions(definitionsSourceObject, readOnly, (code)=> {\n            self.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            self.recompute(true, true)\n        });\n\n    }\n\n    openDefinitionsDialog() {\n        var definitionsSourceObject = this.getCurrentVariableDefinitionsSourceObject();\n        this.definitionsDialog.open(definitionsSourceObject, (code)=> {\n            this.dataModel.saveState();\n            definitionsSourceObject.code = code;\n            this.recompute(true, true);\n        });\n    }\n\n    updateView(withTransitions = true) {\n        // console.log('_updateView');\n        this.treeDesigner.redraw(withTransitions);\n        this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        this.updateVariableDefinitions();\n        this.toolbar.update();\n        this.sidebar.updateLayoutOptions();\n        this.sidebar.updateDiagramDetails();\n        this.sidebar.updateMultipleCriteria();\n    }\n\n    undo() {\n        var self = this;\n        self.dataModel.undo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.id);\n        }\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n\n    }\n\n    redo() {\n        var self = this;\n        self.dataModel.redo();\n        if (self.selectedObject) {\n            self.selectedObject = self.dataModel.findById(self.selectedObject.id);\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, false, false).then(()=> {\n            self.updateView();\n        })\n    }\n\n    onNodeAddedOrRemoved() {\n        var self = this;\n        return this.checkValidityAndRecomputeObjective().then(()=> {\n            self.updateView();\n        });\n\n    }\n\n    onTextAdded(text) {\n        return this.onObjectSelected(text);\n    }\n\n    onTextRemoved(text) {\n        this.updateView();\n    }\n\n    onObjectUpdated(object, fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (!(object instanceof model.domain.Text) && fieldName !== 'name') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        // this.sidebar.updateObjectPropertiesView(this.selectedObject);\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n            }, 1);\n        });\n    }\n\n    onMultiCriteriaUpdated(fieldName) {\n        var self = this;\n        var p = Promise.resolve();\n        if (fieldName === 'defaultCriterion1Weight') {\n            p = p.then(()=>this.checkValidityAndRecomputeObjective());\n        }\n        this.sidebar.updateMultipleCriteria();\n\n        return p.then(()=> {\n            setTimeout(function () {\n                self.treeDesigner.redraw(true);\n                self.sidebar.updateObjectPropertiesView(self.selectedObject);\n            }, 1);\n        });\n    }\n\n    setObjectiveRule(ruleName, evalCode = false, evalNumeric = false, updateView = true, recompute = true) {\n        let prevRule = this.computationsManager.getCurrentRule();\n        this.computationsManager.setCurrentRuleByName(ruleName);\n        let currentRule = this.computationsManager.getCurrentRule();\n        let multiCriteria = currentRule.multiCriteria;\n        this.treeDesigner.config.maxPayoffsToDisplay = multiCriteria ? 2 : 1;\n\n        if (multiCriteria) {\n            this.payoffsMaximization = currentRule.payoffCoeffs.map(c=>c>0);\n\n            if (!this.dataModel.payoffNames.length) {\n                this.dataModel.payoffNames.push(null, null);\n                this.dataModel.payoffNames[0] = i18n.t('multipleCriteria.defaultMinimizedCriterionName');\n                this.dataModel.payoffNames[1] = i18n.t('multipleCriteria.defaultMaximizedCriterionName');\n            }\n            this.treeDesigner.config.payoffNames = this.dataModel.payoffNames;\n        } else {\n            this.payoffsMaximization[this.currentViewMode.payoffIndex] = currentRule.maximization;\n            this.treeDesigner.config.payoffNames = [null, null];\n        }\n        if (!recompute) {\n            return Promise.resolve();\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, evalCode, evalNumeric).then(()=> {\n            if (updateView) {\n                this.updateView(false);\n            }\n        });\n\n    }\n\n    isMultipleCriteria() {\n        return this.computationsManager.getCurrentRule().multiCriteria;\n    }\n\n    flipCriteria() {\n        let tmp = this.config.format.payoff1;\n        this.config.format.payoff1 = this.config.format.payoff2;\n        this.config.format.payoff2 = tmp;\n        this.initPayoffNumberFormat();\n\n        this.computationsManager.flipCriteria().then(()=> {\n            this.updateView(false);\n        }).catch(e=> {\n            log.error(e);\n        })\n    }\n\n\n    getCurrentObjectiveRule() {\n        return this.computationsManager.getCurrentRule();\n    }\n\n    getObjectiveRules() {\n        return this.computationsManager.getObjectiveRules().filter(rule=>rule.multiCriteria === this.currentViewMode.multiCriteria);\n    }\n\n\n    initViewModes() {\n        this.viewModes.push({\n            name: \"criterion1\",\n            multiCriteria: false,\n            payoffIndex: 0,\n        });\n\n        this.viewModes.push({\n            name: \"criterion2\",\n            multiCriteria: false,\n            payoffIndex: 1,\n        });\n\n        this.viewModes.push({\n            name: \"twoCriteria\",\n            multiCriteria: true,\n            payoffIndex: null,\n        });\n        this.currentViewMode = this.viewModes[0];\n    }\n\n    getCurrentViewMode() {\n        return this.currentViewMode;\n    }\n\n    setViewModeByName(name, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.name === name), recompute, updateView)\n    }\n\n    setViewMode(mode, recompute = true, updateView = true) {\n        let prevMode = this.currentViewMode;\n        this.currentViewMode = mode;\n\n        this.computationsManager.objectiveRulesManager.setPayoffIndex(this.currentViewMode.payoffIndex);\n\n\n        if (!recompute) {\n            return Promise.resolve();\n        }\n        let rules = this.getObjectiveRules();\n        let prevRule = this.computationsManager.getCurrentRule();\n        let newRule = rules[0];\n\n\n        if(this.currentViewMode.payoffIndex !== null){\n            newRule = Utils.find(rules, r => r.maximization == this.payoffsMaximization[this.currentViewMode.payoffIndex])\n        }else{\n            newRule = Utils.find(rules, r => r.payoffCoeffs.map(c=>c>0).every((max, i)=> this.payoffsMaximization[i] === max))\n        }\n\n        this.setObjectiveRule(newRule.name, false, false, updateView, recompute)\n    }\n\n    setDefaultViewModeForRule(rule, recompute = true, updateView = true) {\n        return this.setViewMode(Utils.find(this.viewModes, mode=>mode.multiCriteria === rule.multiCriteria), recompute, updateView)\n    }\n\n    getViewModes() {\n        return this.viewModes;\n    }\n\n    showLeagueTable() {\n        this.leagueTableDialog.open();\n    }\n\n    openSensitivityAnalysis() {\n        let self = this;\n        setTimeout(function(){\n            if(!self.isSensitivityAnalysisAvailable()){\n                return;\n            }\n            self.sensitivityAnalysisDialog.open();\n        }, 200);\n\n    }\n\n    showTreePreview(dataDTO, closeCallback, autoLayout = true) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.dataModel.loadFromDTO(dataDTO, this.computationsManager.expressionEngine.getJsonReviver());\n        this.computationsManager.updateDisplayValues(this.dataModel);\n        this.updateView(false);\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node());\n                AppUtils.showFullScreenPopup('', svgString, ()=> {\n                    if (closeCallback) {\n                        self.dataModel._setNewState(self.originalDataModelSnapshot);\n                        self.updateView(false);\n\n                        closeCallback();\n                        setTimeout(function () {\n                            self.updateView(false);\n                        }, 1)\n                    }\n                });\n            }, 300);\n        }, 1)\n\n    }\n\n    showPolicyPreview(title, policy, closeCallback) {\n        var self = this;\n        this.originalDataModelSnapshot = this.dataModel.createStateSnapshot();\n        this.computationsManager.displayPolicy(policy);\n        this.updateView(false);\n        AppUtils.showFullScreenPopup(title, '');\n        LoadingIndicator.show();\n        setTimeout(function () {\n            self.updateView(false);\n            setTimeout(function () {\n                var svgString = Exporter.getSVGString(self.treeDesigner.svg.node(), true);\n                LoadingIndicator.hide();\n                AppUtils.showFullScreenPopup(title, svgString, ()=> {\n\n                    self.dataModel._setNewState(self.originalDataModelSnapshot);\n\n                    // self.computationsManager.updateDisplayValues(self.dataModel);\n                    self.updateView(false);\n                    if (closeCallback) {\n                        closeCallback();\n                    }\n                    setTimeout(function () {\n                        self.updateView(false);\n                    }, 1)\n                });\n            }, 500);\n        }, 1)\n    }\n\n\n    recompute(updateView = true, debounce = false, forceWhenAutoIsDisabled=true) {\n        if (debounce) {\n            if (!this.debouncedRecompute) {\n                this.debouncedRecompute = Utils.debounce((updateView)=>this.recompute(updateView, false), 200);\n            }\n            this.debouncedRecompute(updateView);\n            return;\n        }\n\n        return this.checkValidityAndRecomputeObjective(false, true, true, forceWhenAutoIsDisabled).then(()=> {\n            if (updateView) {\n                this.updateView();\n            }\n        });\n\n    }\n\n    onRawOptionChanged(){\n        if(this.isAutoRecalculationEnabled()){\n            return this.checkValidityAndRecomputeObjective(false, false).then(()=> {\n                this.updateView();\n            })\n        }\n    }\n\n    isAutoRecalculationEnabled(){\n        return !this.treeDesigner.config.raw;\n    }\n\n    checkValidityAndRecomputeObjective(allRules, evalCode = false, evalNumeric = true, forceWhenAutoIsDisabled=false) {\n        if(!forceWhenAutoIsDisabled && !this.isAutoRecalculationEnabled()){\n            return Promise.resolve();\n        }\n\n        return this.computationsManager.checkValidityAndRecomputeObjective(allRules, evalCode, evalNumeric).then(()=> {\n            this.updateValidationMessages();\n            AppUtils.dispatchEvent('SilverDecisionsRecomputedEvent', this);\n        }).catch(e=> {\n            log.error(e);\n        });\n\n    }\n\n    updateValidationMessages() {\n        var self = this;\n        setTimeout(function () {\n            self.treeDesigner.updateValidationMessages();\n        }, 1);\n    }\n\n    newDiagram() {\n        this.clear();\n        this.updateView();\n    }\n\n    clear() {\n        this.dataModel.clear();\n        this.currentViewMode = this.viewModes[0];\n        this.computationsManager.setCurrentRuleByName(this.computationsManager.getObjectiveRules()[0].name);\n        this.setDiagramTitle('', true);\n        this.setDiagramDescription('', true);\n        this.treeDesigner.setConfig(Utils.deepExtend(this.getTreeDesignerInitialConfig()));\n        this.onSelectionCleared();\n        this.sensitivityAnalysisDialog.clear(true, true)\n\n    }\n\n    openDiagram(diagramData) {\n\n        var self = this;\n        var errors = [];\n\n        if (Utils.isString(diagramData)) {\n            try {\n                diagramData = JSON.parse(diagramData, self.computationsManager.expressionEngine.getJsonReviver());\n            } catch (e) {\n                errors.push('error.jsonParse');\n                alert(i18n.t('error.jsonParse'));\n                log.error(e);\n                return Promise.resolve(errors);\n            }\n        }\n\n        var dataModelObject = diagramData.data;\n\n        this.clear();\n        if (!diagramData.SilverDecisions) {\n            errors.push('error.notSilverDecisionsFile');\n            alert(i18n.t('error.notSilverDecisionsFile'));\n            return Promise.resolve(errors);\n        }\n\n        if (!Utils.isValidVersionString(diagramData.SilverDecisions)) {\n            errors.push('error.incorrectVersionFormat');\n            alert(i18n.t('error.incorrectVersionFormat'));\n        } else {\n            //Check if version in file is newer than version of application\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, App.version) > 0) {\n                errors.push('error.fileVersionNewerThanApplicationVersion');\n                alert(i18n.t('error.fileVersionNewerThanApplicationVersion'));\n            }\n\n            if (Utils.compareVersionNumbers(diagramData.SilverDecisions, \"0.7.0\") < 0) {\n                dataModelObject = {\n                    code: diagramData.code,\n                    expressionScope: diagramData.expressionScope,\n                    trees: diagramData.trees,\n                    texts: diagramData.texts\n                }\n            }\n        }\n\n        try {\n            if (diagramData.lng) {\n                this.config.lng = diagramData.lng;\n            }\n\n            if (diagramData.rule) {\n                if (this.computationsManager.isRuleName(diagramData.rule)) {\n                    this.config.rule = diagramData.rule;\n                } else {\n                    delete this.config.rule;\n                }\n            }\n\n            if (diagramData.viewMode) {\n                this.setViewModeByName(diagramData.viewMode)\n            } else {\n                this.setDefaultViewModeForRule(this.computationsManager.getObjectiveRuleByName(this.config.rule), false, false);\n            }\n\n            if (diagramData.format) {\n                this.config.format = diagramData.format;\n            }\n\n            this.setConfig(this.config);\n            this.dataModel.load(dataModelObject);\n\n            if (diagramData.treeDesigner) {\n                this.treeDesigner.setConfig(Utils.deepExtend(self.getTreeDesignerInitialConfig(), diagramData.treeDesigner));\n            }\n            this.treeDesigner.updateVisibility();\n\n            this.setDiagramTitle(diagramData.title || '', true);\n            this.setDiagramDescription(diagramData.description || '', true);\n\n            if (diagramData.sensitivityAnalysis) {\n                this.sensitivityAnalysisDialog.loadSavedParamValues(diagramData.sensitivityAnalysis);\n            }\n\n        } catch (e) {\n            errors.push('error.malformedData');\n            alert(i18n.t('error.malformedData'));\n            this.clear();\n            log.error('malformedData', e);\n            return Promise.resolve(errors);\n\n        }\n        try {\n            this.updateNumberFormats(false);\n        } catch (e) {\n            log.error('incorrectNumberFormatOptions', e);\n            errors.push('error.incorrectNumberFormatOptions');\n            alert(i18n.t('error.incorrectNumberFormatOptions'));\n            delete this.config.format;\n            this.setConfig(this.config);\n            this.updateNumberFormats(false);\n        }\n        return this.setObjectiveRule(this.config.rule, false, true, false).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            return errors\n        }).then(()=> {\n            this.updateView(false);\n            return errors;\n        }).catch(e=> {\n            log.error('diagramDrawingFailure', e);\n            errors.push('error.diagramDrawingFailure');\n            alert(i18n.t('error.diagramDrawingFailure'));\n            this.clear();\n            this.updateView(false);\n            return errors\n        });\n    }\n\n    serialize(filterLocation = false, filterComputed = false, filterPrivate = true) {\n        var self = this;\n        return self.checkValidityAndRecomputeObjective(true, false, false, true).then(()=> {\n            var obj = {\n                SilverDecisions: App.version,\n                buildTimestamp: App.buildTimestamp,\n                savetime: d3.isoFormat(new Date()),\n                lng: self.config.lng,\n                viewMode: self.currentViewMode.name,\n                rule: self.computationsManager.getCurrentRule().name,\n                title: self.config.title,\n                description: self.config.description,\n                format: self.config.format,\n                treeDesigner: self.treeDesigner.config,\n                data: self.dataModel.serialize(false),\n                sensitivityAnalysis: this.sensitivityAnalysisDialog.jobNameToParamValues\n            };\n\n            return Utils.stringify(obj, self.dataModel.getJsonReplacer(filterLocation, filterComputed, self.computationsManager.expressionEngine.getJsonReplacer(), filterPrivate), filterPrivate ? ['$'] : []);\n        });\n    }\n\n    saveToFile(filterLocation = false, filterComputed = false, filterPrivate = true){\n        this.serialize(filterLocation, filterComputed, filterPrivate).then((json)=>{\n            AppUtils.dispatchEvent('SilverDecisionsSaveEvent', json);\n            if(this.config.jsonFileDownload){\n                var blob = new Blob([json], {type: \"application/json\"});\n                Exporter.saveAs(blob, Exporter.getExportFileName('json'));\n            }\n        });\n    }\n\n    updateNumberFormats(updateView = true) {\n        this.initPayoffNumberFormat();\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    updatePayoffNumberFormat(updateView = true) {\n        this.initPayoffNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n\n    }\n\n    updateProbabilityNumberFormat(updateView = true) {\n        this.initProbabilityNumberFormat();\n        if (updateView) {\n            this.updateView();\n        }\n    }\n\n    initOnBeforeUnload() {\n        var self = this;\n        window.addEventListener(\"beforeunload\", function (e) {\n            if (!(self.dataModel.isUndoAvailable() || self.dataModel.isRedoAvailable())) {\n                return;\n            }\n\n            var dialogText = i18n.t('confirm.beforeunload');\n            e.returnValue = dialogText;\n            return dialogText;\n        });\n    }\n\n    setConfigParam(path, value, withoutStateSaving, callback) {\n        var self = this;\n        var prevValue = Utils.get(this.config, path);\n\n        if (prevValue == value) {\n            return;\n        }\n        if (!withoutStateSaving) {\n            this.dataModel.saveState({\n                data: {\n                    prevValue: prevValue\n                },\n                onUndo: (data)=> {\n                    self.setConfigParam(path, data.prevValue, true, callback);\n                },\n                onRedo: (data)=> {\n                    self.setConfigParam(path, value, true, callback);\n                }\n            });\n        }\n        Utils.set(this.config, path, value);\n        if (callback) {\n            callback(value);\n        }\n    }\n\n\n    setDiagramTitle(title, withoutStateSaving) {\n        this.setConfigParam('title', title, withoutStateSaving, (v) => this.treeDesigner.updateDiagramTitle(v));\n    }\n\n    setDiagramDescription(description, withoutStateSaving) {\n        this.setConfigParam('description', description, withoutStateSaving, (v) => this.treeDesigner.updateDiagramDescription(v));\n    }\n\n    initKeyCodes() {\n\n        this.container.on(\"keyup\", (d)=> {\n            let srcElement = d3.event.target || d3.event.srcElement;\n\n            if (srcElement && ['INPUT', 'TEXTAREA'].indexOf(srcElement.nodeName.toUpperCase()) > -1) { //ignore events from input and textarea elements\n                return;\n            }\n\n            var key = d3.event.keyCode;\n            if (key == 46) {//delete\n                this.treeDesigner.removeSelectedNodes();\n                this.treeDesigner.removeSelectedTexts();\n                return;\n            }\n            if (!d3.event.ctrlKey) {\n                return;\n            }\n\n\n            if (d3.event.altKey) {\n                if (this.selectedObject instanceof model.domain.Node) {\n                    let selectedNode = this.selectedObject;\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.addDecisionNode(selectedNode);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.addChanceNode(selectedNode);\n                    } else if (key == 84) { // ctrl + alt + t\n                        this.treeDesigner.addTerminalNode(selectedNode);\n                    }\n                    return;\n                } else if (this.selectedObject instanceof model.domain.Edge) {\n                    if (key == 68) { // ctrl + alt + d\n                        this.treeDesigner.injectDecisionNode(this.selectedObject);\n                    } else if (key == 67) { // ctrl + alt + c\n                        this.treeDesigner.injectChanceNode(this.selectedObject);\n                    }\n                }\n\n            }\n\n\n            if (key == 90) {//ctrl + z\n                this.undo();\n                return;\n            }\n            if (key == 89) {//ctrl + y\n                this.redo();\n                return;\n            }\n\n            /*if(key==65){//ctrl + a\n             if(selectedNodes.length==1){\n             this.treeDesigner.selectSubTree(selectedNodes[0])\n             }else{\n             this.treeDesigner.selectAllNodes();\n             }\n             // d3.event.preventDefault()\n             return;\n             }*/\n            var selectedNodes = this.treeDesigner.getSelectedNodes();\n            if (key == 86) {//ctrl + v\n                if (selectedNodes.length == 1) {\n                    let selectedNode = selectedNodes[0];\n                    if (selectedNode instanceof model.domain.TerminalNode) {\n                        return;\n                    }\n                    this.treeDesigner.pasteToNode(selectedNode)\n                } else if (selectedNodes.length == 0) {\n\n                }\n                return;\n            }\n\n            if (!selectedNodes.length) {\n                return;\n            }\n\n            if (key == 88) {//ctrl + x\n                this.treeDesigner.cutSelectedNodes();\n\n            } else if (key == 67) {//ctrl + c\n                this.treeDesigner.copySelectedNodes();\n\n            }\n\n        });\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nvar $ = require('jquery');\nUtils.getGlobalObject().jQuery = $; //FIXME\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/widgets/autocomplete');\nimport * as d3 from './d3'\n\n$( function() {\n    $.widget( \"sd.combobox\", {\n        _create: function() {\n            this.wrapper = $( \"<span>\" )\n                .addClass( \"sd-combobox\" )\n                .insertAfter( this.element );\n\n            this.element.hide();\n            this._createAutocomplete();\n            this._createShowAllButton();\n        },\n\n        _createAutocomplete: function() {\n            var selected = this.element.children( \":selected\" ),\n                value = selected.val() ? selected.text() : \"\";\n\n            this.input = $( \"<input>\" )\n                .appendTo( this.wrapper )\n                .val( value )\n                .attr( \"title\", \"\" )\n                .attr( \"type\", \"text\" )\n                .addClass( \"sd-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\n                .autocomplete({\n                    delay: 0,\n                    minLength: 0,\n                    source: $.proxy( this, \"_source\" ),\n                    classes: {\n                        \"ui-autocomplete\": \"sd-combobox-autocomplete\"\n                    }\n                });\n            $( \"<span class='bar'>\" ).appendTo( this.wrapper )\n\n            var input = this.input;\n            this._on( this.input, {\n                autocompleteselect: function( event, ui ) {\n                    ui.item.option.selected = true;\n                    this._trigger( \"select\", event, {\n                        item: ui.item.option\n                    });\n\n                },\n\n                autocompletechange: function(){\n                    let inputD3 = d3.select($(input).get(0));\n                    AppUtils.dispatchHtmlEvent(inputD3.node(), \"change\");\n                }\n            });\n        },\n\n        _createShowAllButton: function() {\n            var input = this.input,\n                wasOpen = false;\n\n            $( \"<button>\" )\n                .attr( \"tabIndex\", -1 )\n                .attr( \"type\", \"button\" )\n                .html('<i class=\"material-icons\">arrow_drop_down</i>')\n                .appendTo( this.wrapper )\n                .addClass( \"sd-combobox-toggle ui-corner-right\" )\n                .on( \"mousedown\", function() {\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\n                })\n                .on( \"click\", function() {\n                    input.trigger( \"focus\" );\n                    // Close if already visible\n                    if ( wasOpen ) {\n                        return;\n                    }\n\n                    // Pass empty string as value to search for, displaying all results\n                    input.autocomplete( \"search\", \"\" );\n                });\n        },\n\n        _source: function( request, response ) {\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n            response( this.element.children( \"option\" ).map(function() {\n                var text = $( this ).text();\n                if ( this.value && ( !request.term || matcher.test(text) ) )\n                    return {\n                        label: text,\n                        value: text,\n                        option: this\n                    };\n            }) );\n        },\n\n        _destroy: function() {\n            this.wrapper.remove();\n            this.element.show();\n        },\n\n        input_element: function(){\n            return this.input;\n        }\n    });\n} );\n\nexport class Autocomplete{\n\n\n    constructor(container){\n        this.container= container;\n        this.combobox = $( this.container.node() ).combobox();\n    }\n\n    getInput(){\n        return d3.select($(this.combobox).combobox('input_element').get(0))\n    }\n\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","import {Dialog} from './dialog'\n\nexport class AboutDialog extends Dialog{\n\n    constructor(app){\n        super(app.container.select('#sd-about-dialog'), app);\n    }\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {Templates} from \"../templates\";\nimport {domain as model} from \"sd-model\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class DefinitionsDialog extends Dialog {\n    changeCallback;\n\n    constructor(app) {\n        super(app.container.select('#sd-definitions-dialog'), app);\n        var self = this;\n\n        this.definitionsScopeLabel = this.container.select(\".sd-definitions-dialog-scope-label\");\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('input', function () {\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.definitionsCode = this.container.select('textarea#sd-definitions-dialog-definitions-code').on('change', function () {\n            if (self.changeCallback) {\n                self.changeCallback(this.value)\n            }\n        });\n\n        this.recalculateButton = this.container.select('button#sd-definitions-dialog-recalculate-button').on('click', function () {\n            self.app.recompute();\n        });\n\n        this.variableValuesContainer = this.container.select(\"#sd-definitions-dialog-variable-values\");\n        AppUtils.elasticTextarea(this.definitionsCode);\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.update();\n            }\n        });\n    }\n\n\n    open(definitionsSourceObject, changeCallback) {\n        super.open();\n        this.changeCallback = changeCallback;\n        this.definitionsSourceObject = definitionsSourceObject;\n        this.update();\n    }\n\n    update(force = false) {\n        if (!force && !this.isVisible()) {\n            return;\n        }\n\n        let scopeType = 'global';\n        let labelSuffix=\"\";\n        if (this.definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node';\n            let name =  this.definitionsSourceObject.name;\n            if(name){\n                labelSuffix += \" (\"+name+\")\"\n            }\n        }\n        this.definitionsScopeLabel.text(i18n.t(\"definitionsDialog.scope.\"+scopeType)+labelSuffix);\n\n        this.definitionsCode.node().value = this.definitionsSourceObject.code;\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node());\n        this.definitionsCode.classed('invalid', !!this.definitionsSourceObject.$codeError);\n        if(this.definitionsSourceObject.$codeError){\n            this.printError(this.definitionsSourceObject.$codeError);\n        }else{\n            this.printVariables(this.definitionsSourceObject.expressionScope);\n        }\n\n    }\n\n    printError(error) {\n        var html = error;\n        this.variableValuesContainer.html(html);\n    }\n\n    printVariables(scope) {\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(scope)});\n        this.variableValuesContainer.html(html);\n    }\n\n\n}\n","\nexport class Dialog{\n\n    app;\n\n    container;\n\n    constructor(container,app){\n        this.app = app;\n        this.container=container;\n        this.container.select('.sd-close-modal').on('click', ()=>this.close());\n        this.container.select('.sd-extend-modal').on('click', ()=>this.extend());\n        this.container.select('.sd-shrink-modal').on('click', ()=>this.shrink());\n    }\n\n    open(){\n        this.onOpen();\n        this.container.classed('open', true);\n    }\n    close(){\n        this.container.classed('open', false);\n        this.onClosed();\n    }\n\n    setFullScreen(fullScreen=true){\n        let self = this;\n        this.container.classed('sd-full-screen', fullScreen);\n        setTimeout(function(){ self.onResized() }, 10)\n    }\n\n    extend(){\n        this.setFullScreen();\n    }\n\n    shrink(){\n        this.setFullScreen(false);\n    }\n\n    isVisible(){\n        return this.container.classed('open');\n    }\n\n    onClosed(){\n\n    }\n\n    onOpen(){\n\n    }\n\n    onResized(){\n\n    }\n}\n","import {Dialog} from \"./dialog\";\nimport {JobParametersBuilder} from \"../jobs/job-parameters-builder\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {SensitivityAnalysisJobResultTable} from \"../jobs/sensitivity-analysis-result-table\";\nimport {ProbabilisticSensitivityAnalysisJobResultTable} from \"../jobs/probabilistic-sensitivity-analysis-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {TornadoDiagramPlot} from \"../jobs/tornado-diagram-plot\";\nimport {SpiderPlot} from \"../jobs/spider-plot\";\n\nexport class SensitivityAnalysisDialog extends Dialog {\n    computationsManager;\n    jobConfigurationContainer;\n\n    jobConfigurations = [];\n    jobInstanceManager;\n    jobNameToParamValues = {};\n\n    constructor(app) {\n        super(app.container.select('.sd-sensitivity-analysis-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        // this.initJobConfigurations();\n\n        this.jobConfigurationContainer = this.container.select(\".sd-sensitivity-analysis-job-configuration\");\n        this.parameterBuilderContainer = this.jobConfigurationContainer.select(\".sd-job-parameters-builder\");\n        this.jobParametersBuilder = new JobParametersBuilder(this.parameterBuilderContainer, 'job', () => this.onJobParametersChanged());\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-sensitivity-analysis-job-results\");\n        this.jobResultPlotContainer = this.jobResultsContainer.select(\".sd-job-result-plot-container\");\n\n        this.debouncedCheckWarnings = Utils.debounce(()=>this.checkWarnings(), 200);\n\n        this.initButtons();\n        let self = this;\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app && self.isVisible()) {\n                self.onOpen();\n            }\n        });\n    }\n\n    onOpen() {\n\n        this.initJobConfigurations();\n        if (!this.jobSelect) {\n            this.initJobSelect();\n        }\n\n        let payoffConf = Utils.cloneDeep(this.app.config.format.payoff1);\n        payoffConf.style = 'decimal';\n        payoffConf.useGrouping = false;\n        this.payoffNumberFormat = new Intl.NumberFormat('en', payoffConf);\n        // this.payoffNumberFormat = {\n        //     format: v => this.app.computationsManager.expressionEngine.constructor.toFloat(v, payoffConf.maximumFractionDigits)\n        // }\n\n        this.clear();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n\n\n    onJobSelected(jobConfig) {\n\n        this.clearWarnings();\n        this.selectedJobConfig = jobConfig;\n        if (!jobConfig) {\n            return;\n        }\n        this.jobSelect.node().value = jobConfig.jobName;\n        let jobName = this.selectedJobConfig.jobName;\n        this.job = this.computationsManager.getJobByName(jobName);\n\n        var jobParamsValues = this.jobNameToParamValues[jobName] || {};\n\n        this.setJobParamsValues(jobParamsValues)\n    }\n\n    refreshSelectedJobConfig() {\n        if (this.selectedJobConfig) {\n            this.selectedJobConfig = Utils.find(this.jobConfigurations, (c)=>c.jobName === this.selectedJobConfig.jobName);\n        }\n    }\n\n    setJobParamsValues(jobParamsValues, deleteId = true) {\n        if(!this.job){\n            return;\n        }\n        this.refreshSelectedJobConfig();\n\n        if(deleteId){\n            delete jobParamsValues.id;\n        }\n        this.jobParameters = this.job.createJobParameters(jobParamsValues);\n\n        this.jobNameToParamValues[this.job.name] = this.jobParameters.values;\n\n        this.jobParametersBuilder.setJobParameters(this.job.name, this.jobParameters, this.selectedJobConfig.customParamsConfig);\n    }\n\n    onJobParametersChanged() {\n        this.debouncedCheckWarnings();\n\n    }\n\n    getGlobalVariableNames() {\n        return this.app.dataModel.getGlobalVariableNames(true);\n    }\n\n    initJobConfigurations() {\n        let self = this;\n        this.jobConfigurations.length = 0;\n        let ExpressionEngine = this.app.expressionEngine.constructor;\n        let customVariablesValidator = values => {\n            var isValidArray = [];\n\n            var names = [];\n            values.forEach((v, i)=>{\n                let isVariableInGlobalScope = self.app.dataModel.expressionScope.hasOwnProperty(v.name);\n                var valid = names.indexOf(v.name)<0 && isVariableInGlobalScope;\n                names.push(v.name);\n                isValidArray.push(valid);\n            });\n\n            return isValidArray;\n        };\n\n        let largeScenariosNumberWarning = {\n            name: 'largeScenariosNumber',\n            data: {\n                number: 10000,\n                numberFormatted: \"10,000\"\n            },\n            check: function (jobParameters) { // called with this set to warning config object\n                let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a * (b || 1), 1);\n                return combinations > this.data.number\n            }\n        };\n        this.jobConfigurations.push({\n            jobName: 'sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try {\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n\n                }\n            },\n            warnings: [\n                largeScenariosNumberWarning,\n                {\n                    name: 'largeParametersNumber',\n                    data: {\n                        number: 2,\n                    },\n                    check: function (jobParameters) { // called with this set to warning config object\n                        return jobParameters.values.variables.length > this.data.number\n                    }\n                }\n            ]\n        });\n\n\n        this.jobConfigurations.push({\n            jobName: 'tornado-diagram',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        },\n                        {\n                            name: \"step\",\n                            value: (variable) => {\n                                if (variable.max === undefined || variable.max === null) {\n                                    return \"\";\n                                }\n                                if (variable.min === undefined || variable.min === null) {\n                                    return \"\";\n                                }\n                                if (variable.length === undefined || variable.length === null || variable.length < 2) {\n                                    return \"\";\n                                }\n                                if (variable.min > variable.max) {\n                                    return \"\"\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(ExpressionEngine.divide(ExpressionEngine.subtract(variable.max, variable.min), variable.length-1))\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: (values)=>{\n                        let isValidNameArray = customVariablesValidator(values);\n\n                        return values.map((v, i)=>{\n                            if(!isValidNameArray[i]){\n                                return false;\n                            }\n\n                            if (!v.name || v.min === undefined || v.min === null || v.max === undefined || v.max === null) {\n                                return false;\n                            }\n\n                            let defVal = self.app.dataModel.expressionScope[v.name];\n                            return v.min < defVal && v.max >  defVal;\n                        });\n                    }\n\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.variables.map(v => v.length).reduce((a, b) => a + b, 0);\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'probabilistic-sensitivity-analysis',\n            customParamsConfig: {\n                'id': {\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    formula:{\n                        options: ExpressionEngine.randomMenuList,\n                        optionsAutocomplete: true\n                    },\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [largeScenariosNumberWarning]\n        });\n\n        this.jobConfigurations.push({\n            jobName: 'spider-plot',\n            customParamsConfig: {\n                'id': {\n                    // value: undefined, //leave default,\n                    hidden: true\n                },\n                'failOnInvalidTree': {\n                    value: true,\n                    hidden: true\n                },\n                'ruleName': {\n                    value: this.computationsManager.getCurrentRule().name,\n                    hidden: true\n                },\n                variables: {\n                    name: {\n                        options: this.getGlobalVariableNames()\n                    },\n                    _derivedValues:[\n                        {\n                            name: \"defaultValue\",\n                            value: (variable)=>{\n                                if(!variable.name) {\n                                    return \"\";\n                                }\n\n                                try{\n                                    return ExpressionEngine.toFloat(this.app.dataModel.expressionScope[variable.name])\n                                }catch(e){\n                                    return \"\";\n                                }\n                            }\n                        }\n\n                    ],\n                    customValidator: customVariablesValidator\n                }\n            },\n            warnings: [{\n                name: 'largeScenariosNumber',\n                data: {\n                    number: 10000,\n                    numberFormatted: \"10,000\"\n                },\n                check: function (jobParameters) { // called with this set to warning config object\n                    let combinations = jobParameters.values.length * jobParameters.values.variables.length;\n                    return combinations > this.data.number\n                }\n            }]\n        });\n\n    }\n\n\n    checkWarnings() {\n        this.clearWarnings();\n        if (!this.selectedJobConfig.warnings) {\n            return;\n        }\n\n        this.selectedJobConfig.warnings.forEach(warnConf=> {\n            if (warnConf.check.call(warnConf, this.jobParameters)) {\n                this.addWarning(warnConf);\n            }\n        })\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-sensitivity-analysis-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-sensitivity-analysis-warnings\").appendSelector(\"div.sd-sensitivity-analysis-warning\").html(msgHTML);\n    }\n\n    initJobSelect() {\n        var self = this;\n        this.jobSelect = this.container.select(\".sd-job-select-input-group\").html(Templates.get(\"selectInputGroup\", {\n            id: Utils.guid(),\n            label: null,\n            name: \"sd-job-select\",\n            options: this.jobConfigurations.map(c=>({\n                label: i18n.t(\"job.\" + c.jobName + \".name\"),\n                value: c.jobName\n            }))\n        })).select(\"select\").on('change input', function (d) {\n            self.onJobSelected(Utils.find(self.jobConfigurations, c=>c.jobName === this.value))\n        });\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (rows, indexes, e)=> this.onResultRowSelected(rows, indexes, e),\n            className: \"sd-\" + this.job.name\n        };\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.setClassName(\"sd-\" + this.job.name);\n            this.resultTable.hide();\n        }\n\n        if (this.job.name == \"sensitivity-analysis\") {\n            this.resultTable = new SensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n        } else if (this.job.name == \"probabilistic-sensitivity-analysis\") {\n            this.resultTable = new ProbabilisticSensitivityAnalysisJobResultTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config, (v) => this.payoffNumberFormat.format(v), (v) => this.app.probabilityNumberFormat.format(v));\n            this.resultTable.setData(result, this.jobParameters, this.job);\n            this.resultTable.show();\n\n        }\n\n\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-sensitivity-analysis-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n    initButtons() {\n        this.runJobButton = this.container.select(\".sd-run-job-button\").on('click', ()=> {\n            if (!this.jobParametersBuilder.validate()) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.checkWarnings();\n\n            this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n                onJobStarted: this.onJobStarted,\n                onJobCompleted: this.onJobCompleted,\n                onJobFailed: this.onJobFailed,\n                onJobStopped: this.onJobStopped,\n                onJobTerminated: this.onJobTerminated,\n                onProgress: this.onProgress,\n                callbacksThisArg: this\n            }).then(jobInstanceManager=> {\n                this.jobInstanceManager = jobInstanceManager;\n            }).catch(e=> {\n                log.error(e);\n            }).then(()=> {\n                this.disableActionButtonsAndShowLoadingIndicator(false);\n            })\n\n        });\n\n        this.resumeJobButton = this.container.select(\".sd-resume-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.resume();\n        });\n\n        this.stopJobButton = this.container.select(\".sd-stop-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.disableActionButtonsAndShowLoadingIndicator();\n            this.jobInstanceManager.stop();\n        });\n\n        this.terminateJobButton = this.container.select(\".sd-terminate-job-button\").on('click', ()=> {\n            if (!this.jobInstanceManager) {\n                return;\n            }\n            this.terminateJob();\n        });\n\n        this.backButton = this.container.select(\".sd-back-button \").on('click', ()=> {\n            if (this.jobInstanceManager) {\n                this.jobInstanceManager.terminate();\n            }\n\n        });\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    loadSavedParamValues(jobNameToParamValues){\n        this.jobNameToParamValues = jobNameToParamValues;\n        this.selectedJobConfig = null;\n        this.jobParameters = null;\n    }\n\n\n    clear(clearParams = false, clearAllParams = false) {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        if (!this.selectedJobConfig) {\n            this.onJobSelected(this.jobConfigurations[0]);\n        }\n\n        if(clearAllParams){\n            Utils.forOwn(this.jobNameToParamValues, (value, key)=> this.jobNameToParamValues[key] = {})\n        }\n\n        let globalVariableNames = this.getGlobalVariableNames();\n        Utils.forOwn(this.jobNameToParamValues, (value, key)=> {\n            let paramValues = value;\n            if(clearAllParams){\n                paramValues = {}\n            }else if(paramValues.variables){\n                paramValues.variables = paramValues.variables.filter(v=>globalVariableNames.indexOf(v.name)!==-1);\n                if(!paramValues.variables.length){\n                    paramValues.variables.push({})\n                }\n            }\n\n            this.jobNameToParamValues[key] = paramValues;\n        });\n\n        if (this.job) {\n            if (clearParams) {\n                this.jobNameToParamValues[this.job.name] = {};\n                this.setJobParamsValues({});\n            } else {\n                this.jobParameters.values.ruleName = this.computationsManager.getCurrentRule().name;\n                this.setJobParamsValues(this.jobParameters.values);\n            }\n        }\n\n\n        AppUtils.show(this.jobConfigurationContainer);\n        AppUtils.show(this.runJobButton);\n        AppUtils.show(this.clearButton);\n\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.jobResultsContainer);\n        AppUtils.hide(this.backButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n        if(this.resultPlots){\n            this.resultPlots.forEach(p=>p.destroy())\n            this.jobResultPlotContainer.selectAll(\"*\").remove();\n        }\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.jobConfigurationContainer);\n        AppUtils.hide(this.runJobButton);\n        AppUtils.hide(this.resumeJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.clearButton);\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n        AppUtils.show(this.stopJobButton);\n        AppUtils.show(this.terminateJobButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.backButton);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.terminateJobButton);\n        AppUtils.hide(this.clearButton);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlots(result);\n\n\n\n    }\n\n    initResultPlots(result) {\n\n\n        if (this.job.name === \"tornado-diagram\") {\n            this.initTornadoResultPlots(result);\n        } else if (this.job.name === \"spider-plot\") {\n            this.initSpiderResultPlots(result);\n        }\n\n\n\n    }\n\n    initTornadoResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new TornadoDiagramPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    initSpiderResultPlots(result) {\n        let self = this;\n        this.resultPlots = [];\n\n        result.policies.forEach((policy, index) => {\n\n            let container = this.jobResultPlotContainer.selectOrAppend(\"div.sd-result-plot-container-\"+index);\n            let config = {\n                policyIndex: index,\n                maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            };\n\n            let resultPlot = new SpiderPlot(container.node(), result, config);\n            this.resultPlots.push(resultPlot);\n\n            setTimeout(function () {\n                resultPlot.init()\n            }, 100)\n        });\n\n    }\n\n    onResized() {\n        if (this.resultPlots) {\n            this.resultPlots.forEach(p=>p.init());\n\n        }\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.hide(this.backButton);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.clearButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(rows, indexes, event) {\n\n        if (!rows.length) {\n            return;\n        }\n\n        let policyIndexes = rows.map(r=>r.policyIndex).filter((value, index, self)=>self.indexOf(value) === index);\n\n        if (policyIndexes.length > 1) {\n            Tooltip.show(i18n.t('jobResultTable.tooltip.multiplePoliciesInCell', {number: policyIndexes.length}), 5, 28, event, 2000);\n            return;\n        }\n\n\n        let policy = this.result.policies[policyIndexes[0]];\n        let title = Policy.toPolicyString(policy, false);\n\n        if(rows.length==1){\n\n            let row = rows[0];\n            if(row.variables){\n                title = '';\n                this.result.variableNames.forEach((v, i)=>{\n                    if(i){\n                        title += \"; \"\n                    }\n                    title += v + \" = \" + row.variables[i];\n                });\n            }\n        }\n\n        this.app.showPolicyPreview(title, policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows())\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import * as d3 from '../d3'\nimport {Dialog} from './dialog'\nimport {i18n} from \"../i18n/i18n\";\nimport {Templates} from \"../templates\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"../app-utils\";\nimport {InputField} from \"../form/input-field\";\nimport {PathValueAccessor} from \"../form/path-value-accessor\";\n\nexport class SettingsDialog extends Dialog{\n\n    formGroups=[];\n\n    static fontWeightOptions = ['normal', 'bold', 'lighter', 'bolder'];\n    static fontStyleOptions = ['normal', 'italic', 'oblique'];\n\n    constructor(app){\n        super(app.container.select('#sd-settings-dialog'), app);\n\n        var group = new FormGroup('general', ()=> {\n            app.treeDesigner.updateCustomStyles();\n            app.updateNumberFormats();\n        });\n        group\n            .addField('fontFamily', 'text', app.treeDesigner, 'config.fontFamily')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('numberFormatLocale', 'text', app, 'config.format.locales', {validate: (v)=>{try{new Intl.NumberFormat(v); return true;}catch (e){return false}}});\n        this.formGroups.push(group);\n\n\n        var payoffGroup = new FormGroup('payoff1', ()=>app.updatePayoffNumberFormat());\n        payoffGroup\n            .addSelectField('style', app, 'config.format.payoff1.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff1.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff1.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff1.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff1.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff1.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff1.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff1.useGrouping')\n\n        this.formGroups.push(payoffGroup);\n\n        var payoff2Group = new FormGroup('payoff2', ()=>app.updatePayoffNumberFormat());\n        payoff2Group\n            .addSelectField('style', app, 'config.format.payoff2.style', ['currency', 'decimal'])\n            .addSelectField('currencyDisplay', app, 'config.format.payoff2.currencyDisplay', ['symbol', 'code', 'name'])\n            .addField('currency', 'text', app, 'config.format.payoff2.currency', {validate: (v)=>{try{new Intl.NumberFormat([], {currency:v}); return true;}catch (e){return false}}})\n            .addField('minimumFractionDigits', 'number', app, 'config.format.payoff2.minimumFractionDigits' , {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.payoff2.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.payoff2.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.payoff2.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('useGrouping', 'checkbox', app, 'config.format.payoff2.useGrouping')\n\n        this.formGroups.push(payoff2Group);\n\n\n        group = new FormGroup('probability', ()=>{\n            app.updateProbabilityNumberFormat();\n            app.treeDesigner.updateCustomStyles().redraw();\n        });\n        group\n            .addSelectField('style', app, 'config.format.probability.style', ['decimal', 'percent'])\n            .addField('minimumFractionDigits', 'number', app, 'config.format.probability.minimumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:v, maximumFractionDigits:app.config.format.probability.maximumFractionDigits}); return true;}catch (e){return false}}})\n            .addField('maximumFractionDigits', 'number', app, 'config.format.probability.maximumFractionDigits', {validate: (v)=>{try{new Intl.NumberFormat([], {minimumFractionDigits:app.config.format.probability.minimumFractionDigits, maximumFractionDigits:v}); return true;}catch (e){return false}}})\n            .addField('fontSize', 'text', app.treeDesigner, 'config.probability.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.probability.color');\n        this.formGroups.push(group);\n\n\n        var nodeGroup = new FormGroup('node', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        nodeGroup\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.strokeWidth');\n\n        nodeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.node.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.optimal.stroke');\n\n        nodeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.label.color');\n\n        nodeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.node.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.node.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.node.payoff.negativeColor');\n\n        this.formGroups.push(nodeGroup);\n\n        nodeGroup.addGroup('decision')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.decision.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.decision.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.decision.selected.fill');\n\n\n        nodeGroup.addGroup('chance')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.chance.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.chance.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.chance.selected.fill');\n\n        nodeGroup.addGroup('terminal')\n            .addField('fill', 'color', app.treeDesigner, 'config.node.terminal.fill')\n            .addField('stroke', 'color', app.treeDesigner, 'config.node.terminal.stroke')\n            .addField('selected.fill', 'color', app.treeDesigner, 'config.node.terminal.selected.fill')\n            .addGroup('payoff')\n                .addField('fontSize', 'text', app.treeDesigner, 'config.node.terminal.payoff.fontSize')\n                .addField('color', 'color', app.treeDesigner, 'config.node.terminal.payoff.color')\n                .addField('negativeColor', 'color', app.treeDesigner, 'config.node.terminal.payoff.negativeColor');\n\n\n\n        var edgeGroup = new FormGroup('edge', ()=>app.treeDesigner.updateCustomStyles().redraw())\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.stroke')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.strokeWidth');\n\n        edgeGroup.addGroup('optimal')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.optimal.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.optimal.stroke');\n\n        edgeGroup.addGroup('selected')\n            .addField('strokeWidth', 'text', app.treeDesigner, 'config.edge.selected.strokeWidth')\n            .addField('stroke', 'color', app.treeDesigner, 'config.edge.selected.stroke');\n\n        edgeGroup.addGroup('label')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.label.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.label.color');\n\n        edgeGroup.addGroup('payoff')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.edge.payoff.fontSize')\n            .addField('color', 'color', app.treeDesigner, 'config.edge.payoff.color')\n            .addField('negativeColor', 'color', app.treeDesigner, 'config.edge.payoff.negativeColor');\n        this.formGroups.push(edgeGroup);\n\n\n        var titleGroup = new FormGroup('diagramTitle', ()=>app.treeDesigner.updateCustomStyles().redraw());\n        titleGroup\n            .addField('fontSize', 'text', app.treeDesigner, 'config.title.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.title.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.title.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.title.color')\n\n        .addGroup('margin')\n            .addField('top', 'number', app.treeDesigner, 'config.title.margin.top')\n            .addField('bottom', 'number', app.treeDesigner, 'config.title.margin.bottom');\n\n        titleGroup\n            .addGroup('description')\n            .addField('show', 'checkbox', app.treeDesigner, 'config.description.show')\n            .addField('fontSize', 'text', app.treeDesigner, 'config.description.fontSize')\n            .addSelectField('fontWeight', app.treeDesigner, 'config.description.fontWeight', SettingsDialog.fontWeightOptions)\n            .addSelectField('fontStyle', app.treeDesigner, 'config.description.fontStyle', SettingsDialog.fontStyleOptions)\n            .addField('color', 'color', app.treeDesigner, 'config.description.color')\n            .addField('marginTop', 'number', app.treeDesigner, 'config.description.margin.top');\n\n        this.formGroups.push(titleGroup);\n\n\n\n        var leagueTableGroup = new FormGroup('leagueTable');\n        leagueTableGroup\n            .addGroup('plot')\n            .addField('maxWidth', 'text', app, 'config.leagueTable.plot.maxWidth')\n            .addField('highlightedColor', 'color', app, 'config.leagueTable.plot.groups.highlighted.color')\n            .addField('highlightedDefaultColor', 'color', app, 'config.leagueTable.plot.groups.highlighted-default.color')\n            .addField('extendedDominatedColor', 'color', app, 'config.leagueTable.plot.groups.extended-dominated.color')\n            .addField('dominatedColor', 'color', app, 'config.leagueTable.plot.groups.dominated.color')\n            .addField('defaultColor', 'color', app, 'config.leagueTable.plot.groups.default.color');\n\n        this.formGroups.push(leagueTableGroup);\n\n\n\n        var otherGroup = new FormGroup('other', ()=>app.treeDesigner.redraw());\n        otherGroup\n            .addField('disableAnimations', 'checkbox', app.treeDesigner, 'config.disableAnimations')\n            .addField('forceFullEdgeRedraw', 'checkbox', app.treeDesigner, 'config.forceFullEdgeRedraw')\n            .addField('hideLabels', 'checkbox', app.treeDesigner, 'config.hideLabels')\n            .addField('hidePayoffs', 'checkbox', app.treeDesigner, 'config.hidePayoffs')\n            .addField('hideProbabilities', 'checkbox', app.treeDesigner, 'config.hideProbabilities')\n            .addField({\n                name: 'raw',\n                type: 'checkbox',\n                config: app.treeDesigner,\n                path: 'config.raw',\n                valueUpdateCallback: ()=>app.onRawOptionChanged()\n            });\n\n        this.formGroups.push(otherGroup);\n\n        this.initView();\n\n    }\n\n    initFormGroups(container, data){\n        var self = this;\n        var temp = {};\n        var formGroups = container.selectAll('div.sd-form-group').filter(function(d) { return this.parentNode==container.node(); }).data(data);\n        var formGroupsEnter = formGroups.enter().appendSelector('div.sd-form-group').attr('id', d=>d.id).html(d=>Templates.get('settingsDialogFormGroup', d));\n        formGroupsEnter.select('.toggle-button').on('click', (d) => {\n            var g = container.select('#'+d.id);\n            g.classed('sd-extended', !g.classed('sd-extended'));\n        });\n\n        var formGroupsMerge = formGroupsEnter.merge(formGroups);\n        var inputGroups = formGroupsMerge.select('  .sd-form-group-content > .sd-form-group-inputs').selectAll('div.input-group').data(d=>d.fields);\n\n\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n\n\n        inputGroupsEnter.merge(inputGroups).select('input, select').on('change input', function(d,i){\n            var value = this.value;\n            if(d.type=='checkbox'){\n                value = this.checked\n            }\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n                if(d3.event.type=='change'){\n                    this.value = d.valueAccessor.get();\n                }\n                return;\n            }\n            d3.select(this).classed('invalid', false);\n\n            d.valueAccessor.set(value);\n            if(d.valueUpdateCallback){\n                d.valueUpdateCallback();\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n\n        }).each(function(d, i){\n            var value = d.valueAccessor.get();\n            if(d.type=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            if(d.validator && !d.validator.validate(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n            AppUtils.updateInputClass(d3.select(this));\n\n        });\n\n        formGroupsMerge.each(function(d){\n            self.initFormGroups(d3.select(this).select('.sd-form-group-content > .sd-form-group-child-groups'), d.groups);\n        });\n    }\n\n    initView() {\n        var temp = {};\n        this.initFormGroups(this.container.select('form#sd-settings-form'), this.formGroups);\n\n    }\n\n    onOpen(){\n        this.initView();\n    }\n\n}\n\nexport class FormGroup{\n    id;\n    name;\n    fields=[];\n    groups=[];\n    valueUpdateCallback;\n\n    constructor(name, valueUpdateCallback){\n        this.id = 'sd-form-group-'+name.replace(/\\./g, '-');\n        this.name = name;\n        this.valueUpdateCallback = valueUpdateCallback;\n    }\n\n    addSelectField(name, config, path, options) {\n        this.addField(name, 'select', config, path, null, options);\n        return this;\n    }\n\n    addField(fieldConfig){\n        if(arguments.length>1){\n            return this._addField(...arguments);\n        }\n\n        return this._addField(fieldConfig['name'], fieldConfig['type'], fieldConfig['config'], fieldConfig['path'], fieldConfig['validator'],\n                                fieldConfig['options'], fieldConfig['valueUpdateCallback'])\n    }\n\n    _addField(name, type, config, path, validator, options, valueUpdateCallback){\n        var fieldId = this.name+\"-\"+name;\n        var label = i18n.t(\"settingsDialog.\"+this.name+\".\"+name);\n        var configInputField = new ConfigInputField(fieldId,fieldId, type,label, config, path, validator, options);\n        if(valueUpdateCallback){\n            configInputField.valueUpdateCallback =  ()=>{\n                this.valueUpdateCallback();\n                valueUpdateCallback();\n            };\n        }else{\n            configInputField.valueUpdateCallback =  this.valueUpdateCallback;\n        }\n\n        this.fields.push(configInputField);\n        return this;\n    }\n\n    addGroup(name){\n        var groupName = this.name+'.'+name;\n        var group = new FormGroup(groupName, this.valueUpdateCallback);\n        this.groups.push(group);\n        return group;\n    }\n}\n\n\nclass ConfigInputField extends InputField{\n    constructor(id, name, type, label, sourceObject, path, validator, options){\n        super(id, name, type, label, new PathValueAccessor(sourceObject, path), validator, options);\n    }\n}\n\n","import {dataURLtoBlob} from \"blueimp-canvas-to-blob\";\nimport {saveAs} from \"file-saver\";\nimport * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils, log} from \"sd-utils\";\nimport {LoadingIndicator} from \"./loading-indicator\";\n\nexport class Exporter {\n    static saveAs = saveAs;\n    static dataURLtoBlob = dataURLtoBlob;\n    static exportedStyles = [/^font/, /^color/, /^opacity$/];\n    static svgProperties = [/^stroke/, /^fill/, /^text/];\n\n// Below are the function that handle actual exporting:\n// getSVGString (svgNode ) and svgString2Image( svgString, width, height, format, callback )\n    static getSvgCloneWithInlineStyles(svgNode) {\n        var svgClone = svgNode.cloneNode(true);\n        appendInlineStyles(svgNode, svgClone);\n\n        function appendInlineStyles(source, target, parentCs) {\n            if (!source) {\n                log.error('Exporter.appendInlineStyles - undefined source!');\n                return false;\n            }\n            var children = source.children;\n            var targetChildren = target.children;\n            if (!source.children) {\n                children = source.childNodes;\n                targetChildren = target.childNodes;\n            }\n\n            if (source.tagName === 'text') {\n                /*\n                 var bBox = source.getBBox();\n                 console.log(source, bBox);\n                 target.setAttribute('y', bBox.y)*/\n            }\n\n\n            var cssStyleText = '';\n            var cs = getComputedStyle(source);\n            if (!cs) {\n                return true;\n            }\n            if (cs.display === 'none') {\n                return false;\n            }\n\n\n            for (let i = 0; i < cs.length; i++) {\n                var styleName = cs.item(i);\n                if (Utils.startsWith(styleName, '-')) {\n                    continue;\n                }\n\n                var propertyValue = cs.getPropertyValue(styleName);\n                if (parentCs) {\n                    if (propertyValue === parentCs.getPropertyValue(styleName)) {\n                        continue;\n                    }\n                }\n\n                if (Exporter.exportedStyles.some(s=>s.test(styleName))) {\n                    cssStyleText += '; ' + styleName + ': ' + propertyValue;\n                } else if (Exporter.svgProperties.some(s=>s.test(styleName))) {\n                    target.setAttribute(styleName, propertyValue);\n                }\n\n            }\n            if (cssStyleText.length) {\n                target.setAttribute(\"style\", cssStyleText);\n            } else {\n                target.removeAttribute(\"style\")\n            }\n\n\n            var toRemove = [];\n            for (let i = 0; i < children.length; i++) {\n                var node = children[i];\n                if (!appendInlineStyles(node, targetChildren[i], cs)) {\n                    toRemove.push(targetChildren[i]);\n                }\n            }\n            toRemove.forEach(n=> {\n                target.removeChild(n)\n            });\n            return true;\n        }\n\n        /*var textElements = svgNode.getElementsByTagName('text')\n         _.each(textElements, function (el) {\n\n\n         var textBBox = el.getBBox();\n         console.log(el,textBBox, el.getBoundingClientRect());\n         _.each(el.getElementsByTagName('tspan'), tspan=>{\n         var tspanBBox = tspan.getBBox();\n         console.log(tspan,tspanBBox, tspan.getBoundingClientRect());\n         })\n\n         // el.style['font-family'] = el.style['font-family'] && el.style['font-family'].split(' ').splice(-1);\n         });*/\n\n\n        svgClone.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        return svgClone;\n    }\n\n\n    static getSVGString(svgNode, removeIds=false) {\n        // svgNode = svgNode.cloneNode(true);\n        var svgClone = Exporter.getSvgCloneWithInlineStyles(svgNode);\n\n        var svgString = Exporter.serializeSvgNode(svgClone);\n        // svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=') // Fix root xlink without namespace\n        // svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href') // Safari NS namespace fix\n        svgString = Exporter.sanitizeSVG(svgString, removeIds);\n\n        return svgString;\n    }\n\n    static serializeSvgNode(svgNode) {\n        var serializer = new XMLSerializer();\n        return serializer.serializeToString(svgNode);\n    }\n\n    static validateSvgNode(svgNode) {\n        var svgString = Exporter.serializeSvgNode(svgNode);\n        var oParser = new DOMParser();\n        var doc = oParser.parseFromString(svgString, 'image/svg+xml');\n        return doc.documentElement.nodeName.indexOf('parsererror') === -1;\n    }\n\n    static svgString2Image(svgString, width, height, format, callback) {\n        var format = format ? format : 'png';\n        var imgsrc = 'data:image/svg+xml,' + (encodeURIComponent(svgString)); // Convert SVG string to dataurl\n\n        // var canvas = document.createElement(\"canvas\");\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n\n        var image = new Image;\n        image.width = width;\n        image.height = height;\n        var target = new Image;\n        target.width = width;\n        target.height = height;\n\n\n        image.onload = function () {\n            // context.clearRect(0, 0, width, height);\n            context.drawImage(image, 0, 0, width, height);\n            canvas.toBlob(function (blob) {\n                var filesize = Math.round(blob.length / 1024) + ' KB';\n                if (callback) callback(blob, filesize);\n            });\n\n        };\n\n        image.src = imgsrc;\n    }\n\n    //decisiontree@yyyy.mm.dd_hh.mm.ss\n    static getExportFileName(ext, name='decisiontree') {\n        var format = d3.timeFormat(\"%Y.%m.%d_%H.%M.%S\");\n        var date = new Date();\n        name += '@' + format(date);\n        if (ext) {\n            name += '.' + ext\n        }\n        return name;\n    }\n\n    static saveAsPng(svg, options) {\n\n        var clientSide = options.png.mode === 'client';\n        var fallback = options.png.mode === 'fallback';\n        var serverSide = options.png.mode === 'server';\n        if (Utils.detectIE()) {\n            if (clientSide) {\n                alert(i18n.t('error.pngExportNotSupportedIE'));\n                return;\n            }\n\n            if (fallback) {\n                fallback = false;\n                serverSide = true;\n            }\n        }\n        LoadingIndicator.show();\n\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n            var svgWidth = svg.attr('width');\n            var svgHeight = svg.attr('height');\n\n            var pngWidth = 4 * svgWidth;\n            var pngHeight = 4 * svgHeight;\n            if (clientSide || fallback) {\n                Exporter.svgString2Image(svgString, pngWidth, pngHeight, 'png', save); // passes Blob and filesize String to the callback\n\n                function save(dataBlob, filesize) {\n                    try {\n                        Exporter.saveAs(dataBlob, Exporter.getExportFileName('png'));\n                        LoadingIndicator.hide();\n                    } catch (e) {\n                        log.warn('client side png rendering failed!');\n                        if (fallback) {\n                            log.info('performing server side fallback.');\n                            Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n                        } else {\n                            throw e;\n                        }\n                    }\n\n                }\n            } else if (serverSide) {\n                Exporter.exportPngServerSide(svgString, options.serverUrl, pngWidth, pngHeight);\n            }\n\n\n        } catch (e) {\n            alert(i18n.t('error.pngExportNotSupported'));\n            LoadingIndicator.hide();\n            log.error('pngExportNotSupported', e);\n        }\n    }\n\n\n    static saveAsSvg(svg) {\n        try {\n            var svgString = Exporter.getSVGString(svg.node());\n\n            var blob = new Blob([svgString], {type: \"image/svg+xml\"});\n            Exporter.saveAs(blob, Exporter.getExportFileName('svg'));\n        } catch (e) {\n            alert(i18n.t('error.svgExportNotSupported'));\n            log.error('svgExportNotSupported', e);\n        }\n    }\n\n    static exportPdfClientSide(svgString, width, height) {\n        var doc = new jsPDF('l', 'pt', [width, height]);\n        var dummy = document.createElement('svg');\n        dummy.innerHTML = svgString;\n        svg2pdf(dummy.firstChild, doc, {\n            xOffset: 0,\n            yOffset: 0,\n            scale: 1\n        });\n        doc.save(Exporter.getExportFileName('pdf'));\n        LoadingIndicator.hide();\n\n    }\n\n    static postAndSave(url, data, filename, successCallback, failCallback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            var status = xhr.status;\n            log.debug(status);\n            var type = xhr.getResponseHeader('Content-Type');\n            if (status == 200) {\n                var blob = new Blob([this.response], {type: type});\n                Exporter.saveAs(blob, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            } else {\n                if (failCallback) {\n                    failCallback();\n                }\n            }\n        };\n        xhr.onreadystatechange = function (oEvent) {\n            if (xhr.readyState === 4) {\n                if (xhr.status !== 200) {\n                    failCallback();\n                }\n            }\n        };\n\n\n        xhr.send(JSON.stringify(data));\n    }\n\n    static exportPdfServerSide(svgString, url) {\n        var filename = Exporter.getExportFileName('pdf');\n        var data = {svg: svgString, type: 'pdf', noDownload: true};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        // Utils.postByForm(url, {\n        //     filename: filename,\n        //     type: 'pdf',\n        //     // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n        //     // scale: options.scale,\n        //     svg: svgString\n        // });\n\n    }\n\n    static exportPngServerSide(svgString, url, pngWidth, pngHeight) {\n        var filename = Exporter.getExportFileName('png');\n        var data = {svg: svgString, type: 'png', noDownload: true, width: pngWidth};\n        Exporter.postAndSave(url, data, filename, LoadingIndicator.hide, ()=> {\n            LoadingIndicator.hide();\n            alert(i18n.t('error.serverSideExportRequestFailure'));\n            throw new Error('Server side export failure');\n        });\n\n        /*Utils.postByForm(url, {\n         filename: filename,\n         type: 'pdf',\n         // width: options.width || 0, // IE8 fails to post undefined correctly, so use 0\n         // scale: options.scale,\n         svg: svgString\n         });*/\n\n    }\n\n    static saveAsPdf(svg, options) {\n        var clientSidePdfExportAvailable = Exporter.isClientSidePdfExportAvailable();\n        if (options.pdf.mode === 'client') {\n            if (!clientSidePdfExportAvailable) {\n                alert(i18n.t('error.jsPDFisNotIncluded'));\n                return;\n            }\n        }\n        LoadingIndicator.show();\n        var margin = 20;\n        var svgElement = svg.node();\n        var width = svgElement.width.baseVal.value + 2 * margin,\n            height = svgElement.height.baseVal.value + 2 * margin;\n        try {\n            var svgString = Exporter.getSVGString(svgElement);\n\n            var fallback = options.pdf.mode === 'fallback';\n            if (options.pdf.mode === 'client' || fallback) {\n                try {\n                    Exporter.exportPdfClientSide(svgString, width, height);\n                } catch (e) {\n                    log.error('client side pdf rendering failed!');\n                    if (fallback) {\n                        log.info('performing server side fallback.');\n                        Exporter.exportPdfServerSide(svgString, options.serverUrl);\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (options.pdf.mode === 'server') {\n                Exporter.exportPdfServerSide(svgString, options.serverUrl);\n            }\n        } catch (e) {\n            log.error('pdfExportNotSupported', e);\n            LoadingIndicator.hide();\n            alert(i18n.t('error.pdfExportNotSupported'));\n\n        }\n\n    }\n\n    static isClientSidePdfExportAvailable() {\n        return typeof jsPDF !== 'undefined' && typeof svg2pdf !== 'undefined'\n    }\n\n\n    static sanitizeSVG(svg, removeIds=false) {\n        let sanitized = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/isShadow=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery[0-9]+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(\\S+)(\"|&quot;)\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS[0-9]+\\:)?href=/g, ' xlink:href=')\n            .replace(/\\n/, ' ')\n            .replace(/<\\/svg>.*?$/, '</svg>')\n            .replace(/(fill|stroke)=\"rgba\\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\\.]+)\\)\"/g, '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            .replace(/&nbsp;/g, '\\u00A0')\n            .replace(/&shy;/g, '\\u00AD');\n\n        if(removeIds){\n            return sanitized.replace(/id=\"[^\"]+\"/g, '')\n        }\n\n        return sanitized;\n\n    }\n\n    static saveAsCSV(rows, name='decisiontree') {\n        var csvRows = [];\n        rows.forEach(row => {\n            csvRows.push(row.map(r=>Exporter.escapeCsvField(r)).join(','))\n        });\n        var csvString = csvRows.join(\"\\r\\n\");\n\n        var blob = new Blob([csvString], {type: \"text/csv\"});\n        Exporter.saveAs(blob, Exporter.getExportFileName('csv', name));\n\n    }\n\n    static escapeCsvField(field){\n        if(Utils.isString(field)){\n            return '\"'+field.replace(/\"/g, '\"\"')+'\"'\n        }\n        return field;\n    }\n}\n","import {i18n} from './i18n/i18n'\n\nexport class FileLoader{\n\n    static openFile(callback){\n        var input =  document.getElementById('sd-file-input');\n        input.onchange = loadFile;\n\n        input.click();\n\n        function loadFile() {\n\n             var file, fr;\n\n\n            if (typeof window.FileReader !== 'function') {\n                alert(i18n.t('error.fileApiNotSupported'));\n                return;\n            }\n            input =  document.getElementById('sd-file-input');\n            if (!input.files) {\n                alert(i18n.t('error.inputFilesProperty'));\n                return;\n            }\n\n            if (!input.files[0]) {\n                return;\n            }\n\n            file = input.files[0];\n            fr = new FileReader();\n            fr.onload = receivedText;\n            fr.readAsText(file);\n\n\n            function receivedText(e) {\n                callback(e.target.result);\n                input.value = null;\n            }\n        }\n    }\n\n}\n","export class InputField{\n    name;\n    type;\n    validator;\n    valueAccessor;\n\n    id;\n    label;\n    valueUpdateCallback;\n\n    constructor(id, name, type, label, valueAccessor, validator, options, parser, styleClass){\n        this.name = name;\n        this.type = type;\n        this.valueAccessor = valueAccessor;\n        this.validator = validator;\n        this.id=id;\n        this.label = label;\n        this.options = options;\n        this.parser = parser;\n        this.styleClass = styleClass;\n    }\n\n    getValue(){\n        return this.valueAccessor.get();\n    }\n\n    setValue(val){\n        return this.valueAccessor.set(val);\n    }\n\n    parse(val){\n        if(this.parser){\n            return this.parser(val)\n        }\n        return val;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PathValueAccessor {\n    sourceObject;\n    path;\n    constructor(sourceObject, path){\n        this.sourceObject=sourceObject;\n        this.path = path;\n    }\n\n    get(){\n        return Utils.get(this.sourceObject, this.path);\n    }\n\n    set(v){\n        return Utils.set(this.sourceObject, this.path, v);\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Neues Diagramm\",\n        \"openDiagram\": \"Diagramm öffnen\",\n        \"saveDiagram\": \"Aktuelles Diagramm speichern\",\n        \"export\":{\n            \"label\": \"Exportieren nach\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Baum\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"Aussicht\",\n            \"options\": {\n                \"criterion1\":\"Kriterium 1\",\n                \"criterion2\":\"Kriterium 2\",\n                \"twoCriteria\":\"Zwei Kriterien\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regel\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Rückgängig machen\",\n        \"redo\": \"Wiederholen\",\n        \"settings\": \"Einstellungen\",\n        \"about\": \"Über\",\n        \"sensitivityAnalysis\": \"Sensitivitätsanalyse\",\n        \"recompute\": \"Neu Berechnen\"\n    },\n    \"node\":{\n        \"name\": \"Beschreibung\"\n    },\n    \"edge\":{\n        \"name\": \"Beschreibung\",\n        \"payoff\": \"Auszahlung\",\n        \"probability\": \"Wahrscheinlichkeit\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Rangliste\",\n        \"buttons\": {\n            \"downloadCsv\": \"CSV Herunterladen\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regel #\",\n            \"policy\": \"Regel\",\n            \"comment\": \"Kommentar\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominiert (durch#{{policy}})\",\n            \"extendedDominatedBy\": \"Erweitert-dominiert (durch #{{policy1}} und #{{policy2}})\",\n            \"incratio\": \"Inkrementelles Verhältnis={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Markiert\",\n                \"highlighted-default\": \"Empfohlen (für Standard-WTP)\",\n                \"extended-dominated\" : \"Erweitert-dominiert\",\n                \"dominated\": \"Dominiert\",\n                \"default\": \"Andere\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Richtung von{{name}} Optimierung\",\n                \"gradientArrow2\": \"Richtung von {{name}} Optimierung\",\n                \"dominatedRegion\": \"Dominierte Region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Graumarkiert Bereich stellt dominierte Region dar\",\n                \"gradientArrows\": \"Pfeile zeigen Verbesserungsrichtung an\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivitätsanalyse\",\n        \"buttons\": {\n            \"runJob\": \"Lauf\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Beenden\",\n            \"resumeJob\": \"Fortsetzen\",\n            \"downloadCsv\": \"CSV Herunterladen\",\n            \"back\": \"Zurück\",\n            \"clear\": \"Löschen\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Entfernen\",\n            \"addParameterValue\": \"Hinzufügen\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} Grundregeln\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Wärmekarte\"\n            }\n        },\n        \"policyPreview\": \"Grundregel Vorschau\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-Wege-Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado-diagramm\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregeln Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Länge\"\n                    },\n                    \"step\": {\n                        \"label\": \"Schritt\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Fehler bei der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\",\n                \"largeParametersNumber\": \"Anzahl der Parameter größer als {{number}}. Die Anzeige der Resultate der Sensitivitätsanalyse könnte fehlschlagen oder sehr langsam sein.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Verringerung\",\n                    \"high\": \"Erhöhung\"\n                },\n                \"xAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistische Sensitivitätsanalyse\",\n            \"param\":{\n                \"ruleName\": \"Regelname\",\n                \"numberOfRuns\": {\n                    \"label\": \"Anzahl der Läufe\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formel\",\n                        \"help\": \"Wählen Sie die Formelvorlage aus dem Menü aus oder schreiben Sie benutzerdefinierten Code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\",\n                \"param-computation\": \"Fehler beim Berechnen von Parameterwerten:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Netzdiagramm\",\n            \"param\": {\n                \"ruleName\": \"Regelname\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Erweiterte Grundregel Beschreibung\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- prozentuale Veränderung zum Berücksichtigen\"\n                },\n                \"length\": {\n                    \"label\": \"Anzahl der zu testenden Werte\",\n                    \"help\": \"Anzahl der zu testenden Werte (an einer Seite des Bereichs)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variablen\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Standardwert\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Berechnungsfehler der Sensitivitätsanalyse für folgende Parameter:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Anzahl der definierten Szenarien größer als {{numberFormatted}}. Sensitivitätsanalyse könnte nicht dürchgefuhrt werden oder wird sehr langsam.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Prozentuale Veränderung\",\n                \"yAxisTitle\": \"Auszahlen\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Rangliste\"\n        },\n        \"errors\":{\n            \"generic\": \"Fehler bei der Sensitivitätsanalyse: {{message}}\",\n            \"params\": \"Inkorrekte {{jobName}} Parametern\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Einstellungen\",\n        \"general\":{\n            \"title\": \"Allgemein\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontFamily\": \"Schriftfamilie\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"numberFormatLocale\": \"Zahlenformat Gebietsschema\"\n        },\n        \"payoff1\":{\n            \"title\": \"Auszahlung 1 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"payoff2\":{\n            \"title\": \"Auszahlung 2 Zahlenformat\",\n            \"currency\": \"Währung\",\n            \"currencyDisplay\": \"Währungsanzeige\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"useGrouping\": \"Gruppierung Separatoren verwenden\"\n        },\n        \"probability\":{\n            \"title\": \"Wahrscheinlichkeit Zahlenformat\",\n            \"style\": \"Stil\",\n            \"minimumFractionDigits\": \"Minimale Bruchzahlen\",\n            \"maximumFractionDigits\": \"Maximale Bruchzahlen\",\n            \"fontSize\": \"Schriftgröße\",\n            \"color\": \"Farbe\"\n        },\n        \"node\":{\n            \"title\": \"Knoten\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Beschreibung Schriftgröße\",\n                \"color\": \"Beschreibungsfarbe\"\n            },\n            \"payoff\": {\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            },\n            \"decision\": {\n                \"title\": \"Entscheidungsknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Zufall Knoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Endknoten\",\n                \"fill\": \"Füllfarbe\",\n                \"stroke\": \"Strichfarbe\",\n                \"selected\": {\n                    \"fill\": \"Ausgewählte Füllfarbe\"\n                },\n                \"payoff\": {\n                    \"title\": \"Auszahlung\",\n                    \"fontSize\": \"Schriftgröße\",\n                    \"color\": \"Farbe\",\n                    \"negativeColor\": \"Negative Farbe\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \" Zweig\",\n            \"stroke\": \"Farbe\",\n            \"strokeWidth\": \"Strichbreite\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"selected\":{\n                \"title\": \"Ausgewählt\",\n                \"stroke\": \"Farbe\",\n                \"strokeWidth\": \"Strichbreite\"\n            },\n            \"label\": {\n                \"title\": \"Beschreibung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\"\n            },\n            \"payoff\":{\n                \"title\": \"Auszahlung\",\n                \"fontSize\": \"Schriftgröße\",\n                \"color\": \"Farbe\",\n                \"negativeColor\": \"Negative Farbe\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagrammtitel\",\n            \"fontSize\": \"Schriftgröße\",\n            \"fontWeight\": \"Schriftgewicht\",\n            \"fontStyle\": \"Schriftstil\",\n            \"color\": \"Farbe\",\n            \"margin\":{\n                \"title\": \"Rand\",\n                \"top\": \"Oben\",\n                \"bottom\": \"Unten\"\n            },\n            \"description\":{\n                \"title\": \"Untertitel (Diagrammbeschreibung)\",\n                \"show\": \"Anzeigen\",\n                \"fontSize\": \"Schriftgröße\",\n                \"fontWeight\": \"Schriftgewicht\",\n                \"fontStyle\": \"Schriftstil\",\n                \"color\": \"Farbe\",\n                \"marginTop\": \"Rand Oben\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Rangliste\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max Breite\",\n                \"highlightedColor\": \"Farbe der markierten Regel\",\n                \"highlightedDefaultColor\": \"Empfohlene Regel(für Standard-WTP) Farbe\",\n                \"extendedDominatedColor\": \"Farbe der erweitert-dominierten Regel\",\n                \"dominatedColor\": \"Farbe der dominierten Regel\",\n                \"defaultColor\": \"Farbe der anderen Regeln\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Weitere\",\n            \"disableAnimations\": \"Animationen Deaktivieren\",\n            \"forceFullEdgeRedraw\": \"Erzwingt vollständige Neuzeichnung der Zweige\",\n            \"hideLabels\": \"Verstecke Beschreibung\",\n            \"hidePayoffs\": \"Verstecke Auszahlungen\",\n            \"hideProbabilities\": \"Verstecke Wahrscheinlichkeiten\",\n            \"raw\": \"Rau\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Über\"\n    },\n    \"help\":{\n        \"header\": \"Hilfe\",\n        \"mouse\": {\n            \"header\":\"Mausaktionen:\",\n            \"list\":{\n                \"1\": \"Linke Maustaste: Knoten/Zweig Auswahl\",\n                \"2\": \"Rechte Maustaste: Kontextmenü (Hinzufügen / Manipulieren von Knoten)\",\n                \"3\": \"Linke Maus Doppelklick: Kontextmenü\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Tastatur:\",\n            \"list\":{\n                \"1\": \"Del: ausgewählte Knoten Löschen\",\n                \"2\": \"Ctrl-C/X: ausgewählte Knoten Kopieren/Ausschneiden\",\n                \"3\": \"Ctrl-V: kopierte Knoten als Teilbaum ausgewähltes Knotens einfügen\",\n                \"4\": \"Ctrl-Y/Z: Rückgängig/Wiederholen\",\n                \"5\": \"Ctrl-Alt-D/C/T: Neue Entscheidungs/Zufall/Endsknoten als Unterknoten von <strong>ausgewähltem Knoten</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Neue Entscheidungs/Zufall Knoten in <strong>ausgewählten Zweig </strong> Injizieren\"\n            }\n        },\n        \"docs\": \"Die Dokumentation von SilverDecisions ist unter <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a> verfügbar\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variablendefinitionen\",\n        \"scope\": {\n            \"global\": \"Globaler Anwendungsbereich\",\n            \"node\": \"Gewählten Knoten und Teilbaum Anwendungsbereich\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variabel Anwendungsbereich:\",\n            \"global\": \"Globaler\",\n            \"node\": \"Gewählten Knoten und Teilbaum\"\n        },\n        \"header\": \"Variablen\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Dialog Öffnen\",\n            \"recalculate\": \"Neu berechnen\"\n        },\n        \"evaluatedVariables\": \"Ausgewertete Variablen\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Mehrere Kriterien\",\n        \"defaultMaximizedCriterionName\": \"Effekt\",\n        \"defaultMinimizedCriterionName\": \"Kosten\",\n        \"nameOfCriterion1\": \"Name des Kriteriums 1\",\n        \"nameOfCriterion2\": \"Name des Kriteriums 2\",\n        \"defaultCriterion1Weight\": \"Default 1. Kriterium Gewicht\",\n        \"weightLowerBound\": \"Gewicht untere Grenze\",\n        \"weightUpperBound\": \"Gewicht obere Grenze\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Rangliste anzeigen\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontaler Rand\",\n        \"marginVertical\": \"Vertikaler Rand\",\n        \"nodeSize\": \"Knotengröße\",\n        \"edgeSlantWidthMax\": \"Kantenschräge (max)\",\n        \"gridWidth\": \"Breite\",\n        \"gridHeight\": \"Höhe\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Einzelheiten\",\n        \"title\" : \"Titel\",\n        \"description\" : \"Beschreibung\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Entscheidungsknoten\",\n                \"chance\":\"Zufall Knoten\",\n                \"terminal\":\"Endknoten\"\n            },\n            \"edge\": \"Zweig\",\n            \"text\": \"Schwimmender Text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Verbindungen\",\n                \"child\": {\n                    \"header\": \"Zweig #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Möchten Sie das aktuelle Diagramm wirklich löschen? Alle nicht gespeicherten Daten werden verloren.\",\n        \"openDiagram\": \"Sind Sie sicher? Alle nicht gespeicherten Diagrammdaten werden verloren.\",\n        \"beforeunload\": \"Sind Sie sicher, dass Sie SilverDecisions schließen möchten? Alle nicht gespeicherten Diagrammdaten werden verloren.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Fehler beim Analysieren der Datei!\",\n        \"fileApiNotSupported\":\"Die Datei-API wird in diesem Browser noch nicht unterstützt.\",\n        \"inputFilesProperty\":\"Ihr Browser scheint die `files`-Eigenschaft der Dateieingaben nicht zu unterstützen.\",\n        \"notSilverDecisionsFile\":\"Keine SilverDecisions-Datei!\",\n        \"incorrectVersionFormat\": \"Falsches Format der Versionszeichenfolge!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version der Datei ist neuer als Version des Softwares. Einige Funktionen möglicherweise fehlen.\",\n        \"objectiveComputationFailure\": \"Fehler beim Berechnen von Objektiven!\",\n        \"diagramDrawingFailure\": \"Fehler beim Zeichnen des Diagramms!\",\n        \"malformedData\":\"Fehler beim Lesen der Baumdaten!\",\n        \"pngExportNotSupported\": \"Der Export nach PNG wird in Ihrem Browser nicht unterstützt.\",\n        \"pngExportNotSupportedIE\": \"Der Export nach PNG wird in Internet Explorer nicht unterstützt.\",\n        \"svgExportNotSupported\": \"Der Export nach SVG wird in Ihrem Browser nicht unterstützt.\",\n        \"pdfExportNotSupported\": \"Der Export nach PDF wird in Ihrem Browser nicht unterstützt.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Falsche Auszahlungsformat Optionen\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Falsche Wahrscheinlichkeitsformat Optionen\",\n        \"incorrectNumberFormatOptions\": \"Falsche Zahlenformat, die Standardeinstellungen angewendet.\",\n        \"jsPDFisNotIncluded\": \"jsPDF ist nicht enthalten!\",\n        \"serverSideExportRequestFailure\": \"Export Server Anfrage fehlgeschlagen!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"New diagram\",\n        \"openDiagram\": \"Open existing diagram\",\n        \"saveDiagram\": \"Save current diagram\",\n        \"export\":{\n            \"label\": \"Export to\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Layout\",\n            \"manual\": \"Manual\",\n            \"tree\": \"Tree\",\n            \"cluster\": \"Cluster\"\n        },\n        \"viewMode\": {\n            \"label\": \"View\",\n            \"options\": {\n                \"criterion1\":\"Criterion 1\",\n                \"criterion2\":\"Criterion 2\",\n                \"twoCriteria\":\"Two criteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Rule\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Undo\",\n        \"redo\": \"Redo\",\n        \"settings\": \"Settings\",\n        \"about\": \"About\",\n        \"sensitivityAnalysis\": \"Sensitivity analysis\",\n        \"recompute\": \"Recompute\"\n    },\n    \"node\":{\n        \"name\": \"Label\"\n    },\n    \"edge\":{\n        \"name\": \"Label\",\n        \"payoff\": \"Payoff\",\n        \"probability\": \"Probability\"\n    },\n    \"text\":{\n        \"value\": \"Text\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"League table\",\n        \"buttons\": {\n            \"downloadCsv\": \"Download CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Policy #\",\n            \"policy\": \"Policy\",\n            \"comment\": \"Comment\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominated (by #{{policy}})\",\n            \"extendedDominatedBy\": \"extended-dominated (by #{{policy1}} and #{{policy2}})\",\n            \"incratio\": \"incremental ratio={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Recommended (for some WTP in range)\",\n                \"highlighted-default\": \"Recommended (for default WTP)\",\n                \"extended-dominated\" : \"Extended-dominated\",\n                \"dominated\": \"Dominated\",\n                \"default\": \"Other\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direction of {{name}} optimization\",\n                \"gradientArrow2\": \"Direction of {{name}} optimization\",\n                \"dominatedRegion\": \"Not recommended region\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Grey area highlights not recommended region\",\n                \"gradientArrows\": \"Arrows indicate improvement direction\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Sensitivity analysis\",\n        \"buttons\": {\n            \"runJob\": \"Run\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Terminate\",\n            \"resumeJob\": \"Resume\",\n            \"downloadCsv\": \"Download CSV\",\n            \"back\": \"Back\",\n            \"clear\": \"Clear\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Remove\",\n            \"addParameterValue\": \"Add\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} policies\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Heatmap\"\n            }\n        },\n        \"policyPreview\": \"policy preview\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"N-way sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Tornado diagram\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Length\"\n                    },\n                    \"step\": {\n                        \"label\": \"Step\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\",\n                \"largeParametersNumber\": \"Number of parameters larger than {{number}}. Sensitivity analysis display might fail or be very slow.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decrease\",\n                    \"high\": \"Increase\"\n                },\n                \"xAxisTitle\": \"Payoff\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistic sensitivity analysis\",\n            \"param\":{\n                \"ruleName\": \"Rule name\",\n                \"numberOfRuns\": {\n                    \"label\": \"Number of runs\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Select formula template from the menu or write custom code\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\",\n                \"param-computation\": \"Error computing parameter values:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Spider plot\",\n            \"param\": {\n                \"ruleName\": \"Rule name\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Extended policy description\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- percentage change to consider\"\n                },\n                \"length\": {\n                    \"label\": \"Number of values to test\",\n                    \"help\": \"Number of values to test (in one side of range)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Name\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Default value\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Error in sensitivity analysis computations for the following parameters:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Number of defined scenarios larger than {{numberFormatted}}. Sensitivity analysis might fail to compute or be very slow.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Percentage change\",\n                \"yAxisTitle\": \"Payoff\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"League table\"\n        },\n        \"errors\":{\n            \"generic\": \"Error in {{jobName}} computations: {{message}}\",\n            \"params\": \"Incorrect {{jobName}} parameters\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Settings\",\n        \"general\":{\n            \"title\": \"General\",\n            \"fontSize\": \"Font size\",\n            \"fontFamily\": \"Font family\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"numberFormatLocale\": \"Number format locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Payoff 1 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"payoff2\":{\n            \"title\": \"Payoff 2 number format\",\n            \"currency\": \"Currency\",\n            \"currencyDisplay\": \"Currency display\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"useGrouping\": \"Use grouping separators\"\n        },\n        \"probability\":{\n            \"title\": \"Probability number format\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Minimum fraction digits\",\n            \"maximumFractionDigits\": \"Maximum fraction digits\",\n            \"fontSize\": \"Font size\",\n            \"color\": \"Color\"\n        },\n        \"node\":{\n            \"title\": \"Node\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Label font size\",\n                \"color\": \"Label color\"\n            },\n            \"payoff\": {\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            },\n            \"decision\": {\n                \"title\": \"Decision Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Chance Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Terminal Node\",\n                \"fill\": \"Fill color\",\n                \"stroke\": \"Stroke color\",\n                \"selected\": {\n                    \"fill\": \"Selected fill color\"\n                },\n                \"payoff\": {\n                    \"title\": \"Payoff\",\n                    \"fontSize\": \"Font size\",\n                    \"color\": \"Color\",\n                    \"negativeColor\": \"Negative color\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Edge\",\n            \"stroke\": \"Color\",\n            \"strokeWidth\": \"Stroke width\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"selected\":{\n                \"title\": \"Selected\",\n                \"stroke\": \"Color\",\n                \"strokeWidth\": \"Stroke width\"\n            },\n            \"label\": {\n                \"title\": \"Label\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\"\n            },\n            \"payoff\":{\n                \"title\": \"Payoff\",\n                \"fontSize\": \"Font size\",\n                \"color\": \"Color\",\n                \"negativeColor\": \"Negative color\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Diagram title\",\n            \"fontSize\": \"Font size\",\n            \"fontWeight\": \"Font weight\",\n            \"fontStyle\": \"Font style\",\n            \"color\": \"Color\",\n            \"margin\":{\n                \"title\": \"Margin\",\n                \"top\": \"Top\",\n                \"bottom\": \"Bottom\"\n            },\n            \"description\":{\n                \"title\": \"Subtitle (diagram description)\",\n                \"show\": \"Show\",\n                \"fontSize\": \"Font size\",\n                \"fontWeight\": \"Font weight\",\n                \"fontStyle\": \"Font style\",\n                \"color\": \"Color\",\n                \"marginTop\": \"Margin top\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"League Table\",\n            \"plot\": {\n                \"title\": \"Plot\",\n                \"maxWidth\": \"Max width\",\n                \"highlightedColor\": \"Recommended (for some WTP in range) policy color\",\n                \"highlightedDefaultColor\": \"Recommended (for default WTP) policy color\",\n                \"extendedDominatedColor\": \"Extended dominated policy color\",\n                \"dominatedColor\": \"Dominated policy color\",\n                \"defaultColor\": \"Other policies color\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Other\",\n            \"disableAnimations\": \"Disable animations\",\n            \"forceFullEdgeRedraw\": \"Force full redraw of edges\",\n            \"hideLabels\": \"Hide labels\",\n            \"hidePayoffs\": \"Hide payoffs\",\n            \"hideProbabilities\": \"Hide probabilities\",\n            \"raw\": \"Raw\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"About\"\n    },\n    \"help\":{\n        \"header\": \"Help\",\n        \"mouse\": {\n            \"header\":\"Mouse actions:\",\n            \"list\":{\n                \"1\": \"left mouse button: node/edge selection\",\n                \"2\": \"right mouse button: context menu (adding/manipulating nodes)\",\n                \"3\": \"left mouse dbclick: context menu\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Keyboard:\",\n            \"list\":{\n                \"1\": \"Del: delete selected nodes\",\n                \"2\": \"Ctrl-C/X: copy/cut selected nodes\",\n                \"3\": \"Ctrl-V: paste copied nodes as a subtree of a selected node\",\n                \"4\": \"Ctrl-Y/Z: undo/redo\",\n                \"5\": \"Ctrl-Alt-D/C/T: add new Decision/Chance/Terminal subnode of a <strong>selected node</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inject new Decision/Chance node into a <strong>selected edge</strong>\"\n            }\n        },\n        \"docs\": \"Documentation of SilverDecisions is available <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">here</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Variable definitions\",\n        \"scope\": {\n            \"global\": \"global scope\",\n            \"node\": \"selected node and subtree scope\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Variable scope:\",\n            \"global\": \"global\",\n            \"node\": \"selected node and subtree\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Open dialog\",\n            \"recalculate\": \"Recalculate\"\n        },\n        \"evaluatedVariables\": \"Evaluated variables\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Multiple criteria\",\n        \"defaultMaximizedCriterionName\": \"Effect\",\n        \"defaultMinimizedCriterionName\": \"Cost\",\n        \"nameOfCriterion1\": \"Name for criterion 1\",\n        \"nameOfCriterion2\": \"Name for criterion 2\",\n        \"defaultCriterion1Weight\": \"Default 1st criterion weight\",\n        \"weightLowerBound\": \"Weight lower bound\",\n        \"weightUpperBound\": \"Weight upper bound\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Show league table\",\n            \"flip\": \"Flip\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Layout\",\n        \"marginHorizontal\": \"Horizontal Margin\",\n        \"marginVertical\": \"Vertical Margin\",\n        \"nodeSize\": \"Node size\",\n        \"edgeSlantWidthMax\": \"Edge slant (max)\",\n        \"gridWidth\": \"Width\",\n        \"gridHeight\": \"Height\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Details\",\n        \"title\" : \"Title\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Decision Node\",\n                \"chance\":\"Chance Node\",\n                \"terminal\":\"Terminal Node\"\n            },\n            \"edge\": \"Edge\",\n            \"text\": \"Floating text\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connections\",\n                \"child\": {\n                    \"header\": \"Edge #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Do you really want to clear current diagram? All unsaved data will be lost.\",\n        \"openDiagram\": \"Are you sure? All unsaved diagram data will be lost.\",\n        \"beforeunload\": \"Are you sure you want to close SilverDecisions? All unsaved diagram data will be lost.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Error parsing file!\",\n        \"fileApiNotSupported\":\"The file API isn't supported on this browser yet.\",\n        \"inputFilesProperty\":\"Your browser doesn't seem to support the `files` property of file inputs.\",\n        \"notSilverDecisionsFile\":\"Not a SilverDecisions file!\",\n        \"incorrectVersionFormat\": \"Incorrect format of version string!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Version in file is newer than version of the application. Some features may be missing.\",\n        \"objectiveComputationFailure\": \"Error while computing objective!\",\n        \"diagramDrawingFailure\": \"Error while drawing diagram!\",\n        \"malformedData\":\"Error reading tree data!\",\n        \"pngExportNotSupported\": \"Export to PNG is not supported in your browser.\",\n        \"pngExportNotSupportedIE\": \"Export to PNG not supported in Internet Explorer.\",\n        \"svgExportNotSupported\": \"Export to SVG is not supported in your browser.\",\n        \"pdfExportNotSupported\": \"Export to PDF is not supported in your browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Incorrect payoff number format options\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Incorrect probability number format options\",\n        \"incorrectNumberFormatOptions\": \"Incorrect number format options, using default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF is not included!\",\n        \"serverSideExportRequestFailure\": \"Export Server request failed!\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nouveau diagramme\",\n        \"openDiagram\": \"Ouvrir le diagramme existant\",\n        \"saveDiagram\": \"Enregistrer le diagramme actuel\",\n        \"export\":{\n            \"label\": \"Exporter vers\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposition\",\n            \"manual\": \"Manuel\",\n            \"tree\": \"Arbre\",\n            \"cluster\": \"Grappe\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vue\",\n            \"options\": {\n                \"criterion1\":\"Critère 1\",\n                \"criterion2\":\"Critère 2\",\n                \"twoCriteria\":\"Deux critères\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regle\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Annuler\",\n        \"redo\": \"Refaire\",\n        \"settings\": \"Parametres\",\n        \"about\": \"A propos\",\n        \"sensitivityAnalysis\": \"Analyse de sensibilité\",\n        \"recompute\": \"Recalculer\"\n    },\n    \"node\":{\n        \"name\": \"Étiquette\"\n    },\n    \"edge\":{\n        \"name\": \"Étiquette\",\n        \"payoff\": \"Avantage\",\n        \"probability\": \"Probabilité\"\n    },\n    \"text\":{\n        \"value\": \"Texte\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classement\",\n        \"buttons\": {\n            \"downloadCsv\": \"Télécharger CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Règle #\",\n            \"policy\": \"Règle\",\n            \"comment\": \"Commentaire\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"Dominé (par #{{policy}})\",\n            \"extendedDominatedBy\": \"Étendu-dominé (par #{{policy1}} et #{{policy2}})\",\n            \"incratio\": \"Ratio incrémental={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Surligné\",\n                \"highlighted-default\": \"Recommandée (pour WTP par défaut)\",\n                \"extended-dominated\" : \"Étendu-dominé\",\n                \"dominated\": \"Dominé\",\n                \"default\": \"Autre\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"La direction de {{name}} optimisation\",\n                \"gradientArrow2\": \"La direction de {{name}} optimisation\",\n                \"dominatedRegion\": \"Région dominée\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"La région grise surligne la région dominée\",\n                \"gradientArrows\": \"Les flèches indiquent une direction d'amélioration\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analyse de sensibilité\",\n        \"buttons\": {\n            \"runJob\": \"Exécuter\",\n            \"stopJob\": \"Arrêter\",\n            \"terminateJob\": \"Terminer\",\n            \"resumeJob\": \"Reprendre\",\n            \"downloadCsv\": \"Télécharger CSV\",\n            \"back\": \"Retourner\",\n            \"clear\": \"Effacer\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Effacer\",\n            \"addParameterValue\": \"Ajouter\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} règles\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maximum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Carte de chaleur\"\n            }\n        },\n        \"policyPreview\": \"Aperçu de la règle\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité multivariée\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Graphique en tornade\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Longueur\"\n                    },\n                    \"step\": {\n                        \"label\": \"Étape\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\",\n                \"largeParametersNumber\": \"Nombre de paramètres est plus grand que {{number}}. Affichage de l'analyse de sensibilité pouvait échouer ou être très lente.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Diminuer\",\n                    \"high\": \"Augmenter\"\n                },\n                \"xAxisTitle\": \"Avantage\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analyse de sensibilité probabiliste\",\n            \"param\":{\n                \"ruleName\": \"Nom de la règle\",\n                \"numberOfRuns\": {\n                    \"label\": \"Nombre d'essais\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Étiquette\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formule\",\n                        \"help\": \"Sélectionner le modèle de la formule dans le menu ou écrire un code personnalisé.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\",\n                \"param-computation\": \"Erreur de calcul des valeurs de paramètres:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            }\n        },\n        \"spider-plot\": {\n            \"name\": \"Graphique en radar\",\n            \"param\": {\n                \"ruleName\": \"Nom de la règle\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Description détaillée de la règle\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- changement de pourcentage à considérer\"\n                },\n                \"length\": {\n                    \"label\": \"Nombre de valeurs à tester\",\n                    \"help\": \"Nombre de valeurs à tester (dans une partie de gamme)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variables\",\n                    \"name\": {\n                        \"label\": \"Nom\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valeur par défaut\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Erreur de calcul d'analyse de sensibilité pour les paramètres suivants:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Nombre de scénarios définis est plus grand que {{numberFormatted}}. Analyse de sensibilité pouvait ne pas calculer ou être très lente.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Changement de pourcentage\",\n                \"yAxisTitle\": \"Avantage\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classement\"\n        },\n        \"errors\":{\n            \"generic\": \"Erreur de calcul d'analyse de sensibilité: {{message}}\",\n            \"params\": \"Paramètres du {{jobName}} sont incorrect\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Parametres\",\n        \"general\":{\n            \"title\": \"Général\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontFamily\": \"Famille de police\",\n            \"fontWeight\": \"Poid de la police\",\n            \"fontStyle\": \"Style de police\",\n            \"numberFormatLocale\": \"format local de numérotation\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format de la numérotation des avantages 1\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format de la numérotation des avantages 2\",\n            \"currency\": \"Devise\",\n            \"currencyDisplay\": \"Affichage de la devise\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"useGrouping\": \"Utiliser des séparateurs de regroupement\"\n        },\n        \"probability\":{\n            \"title\": \"Format de la numérotatio des probabilités\",\n            \"style\": \"Style\",\n            \"minimumFractionDigits\": \"Nombre minimum de fractions\",\n            \"maximumFractionDigits\": \"Nombre maximum de fractions\",\n            \"fontSize\": \"Taille de police\",\n            \"color\": \"Couleur\"\n        },\n        \"node\":{\n            \"title\": \"Noud\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police de l'étiquette\",\n                \"color\": \"Couleur de l'étiquette\"\n            },\n            \"payoff\": {\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            },\n            \"decision\": {\n                \"title\": \"Noeud décisionnel\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de trait\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionnée\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Noud aléatoire\",\n                \"fill\": \"La couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Noeud terminal\",\n                \"fill\": \"Couleur de remplissage\",\n                \"stroke\": \"Couleur de course\",\n                \"selected\": {\n                    \"fill\": \"Couleur de remplissage sélectionné\"\n                },\n                \"payoff\": {\n                    \"title\": \"Avantage\",\n                    \"fontSize\": \"Taille de la police\",\n                    \"color\": \"Couleur\",\n                    \"negativeColor\": \"Négatif couleur\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Bord\",\n            \"stroke\": \"Couleur\",\n            \"strokeWidth\": \"Largeur de trait\",\n            \"optimal\":{\n                \"title\": \"Optimal\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"selected\":{\n                \"title\": \"Choisi\",\n                \"stroke\": \"Couleur\",\n                \"strokeWidth\": \"Largeur de trait\"\n            },\n            \"label\": {\n                \"title\": \"Étiquette\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\"\n            },\n            \"payoff\":{\n                \"title\": \"Avantage\",\n                \"fontSize\": \"Taille de la police\",\n                \"color\": \"Couleur\",\n                \"negativeColor\": \"Négatif couleur\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titre du diagramme\",\n            \"fontSize\": \"Taille de la police\",\n            \"fontWeight\": \"Poids de la police\",\n            \"fontStyle\": \"Style de la police\",\n            \"color\": \"Couleur\",\n            \"margin\":{\n                \"title\": \"Marge\",\n                \"top\": \"Haut du diagramme\",\n                \"bottom\": \"Bas du diagramme\"\n            },\n            \"description\":{\n                \"title\": \"Sous-titre (description du diagramme)\",\n                \"show\": \"Afficher\",\n                \"fontSize\": \"Taille de la police\",\n                \"fontWeight\": \"Poids de la police\",\n                \"fontStyle\": \"Style de police\",\n                \"color\": \"Couleur\",\n                \"marginTop\": \"Haut du marge\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classement\",\n            \"plot\": {\n                \"title\": \"Le graphe\",\n                \"maxWidth\": \"Largeur maximale\",\n                \"highlightedColor\": \"Couleur de la règle soulignée\",\n                \"highlightedDefaultColor\": \"Couleur recommandée pour la règle (pour WTP par défaut)\",\n                \"extendedDominatedColor\": \"Couleur de la règle étendu-dominée\",\n                \"dominatedColor\": \"Couleur de la règle dominée\",\n                \"defaultColor\": \"Couleur des autres règles\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Autre\",\n            \"disableAnimations\": \"Désactiver les animations\",\n            \"forceFullEdgeRedraw\": \"Forcer le redessinage complet des bords\",\n            \"hideLabels\": \"Masquer les étiquettes\",\n            \"hidePayoffs\": \"Masquer les paiements\",\n            \"hideProbabilities\": \"Masquer les probabilités\",\n            \"raw\": \"Brut\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"A propos\"\n    },\n    \"help\":{\n        \"header\": \"Aide\",\n        \"mouse\": {\n            \"header\":\"Actions de la souris:\",\n            \"list\":{\n                \"1\": \"Bouton gauche de la souris: sélection du noud/bord\",\n                \"2\": \"Bouton droit de la souris: menu contextuel (ajout/manipulation des nouds)\",\n                \"3\": \"Double clic gauche de la souris: menu contextuel\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Raccourcis clavier:\",\n            \"list\":{\n                \"1\": \"Del: effacer les nouds sélectionnés\",\n                \"2\": \"Ctrl-C/X: copier/couper les nouds sélectionnés\",\n                \"3\": \"Ctrl-V: coller les nouds copiés comme un sous-arbre d'un noud sélectionné\",\n                \"4\": \"Ctrl-Y/Z: annuler/refaire\",\n                \"5\": \"Ctrl-Alt-D/C/T: ajouter un nouveau sous-noud de décision/aléatoire/terminal d'un <strong>noud sélectionné</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: injecter un nouveau noeud de décision/aléatoire dans un <strong>bord sélectionné</strong>\"\n            }\n        },\n        \"docs\": \"La documentation de SilverDecisions est disponible  <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">ici</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Définitions des variables\",\n        \"scope\": {\n            \"global\": \"portée mondiale\",\n            \"node\": \"la portée des nœud et sous-arborescence sélectionné\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Portée de la variable:\",\n            \"global\": \"mondial\",\n            \"node\": \"nœud et sous-arborescence sélectionné\"\n        },\n        \"header\": \"Variables\",\n        \"code\": \"Code\",\n        \"buttons\":{\n            \"openDialog\" : \"Ouvrir la boîte de dialogue\",\n            \"recalculate\": \"Recalculer\"\n        },\n        \"evaluatedVariables\": \"Variables évaluées\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Critères multiples\",\n        \"defaultMaximizedCriterionName\": \"Effet\",\n        \"defaultMinimizedCriterionName\": \"Coût\",\n        \"nameOfCriterion1\": \"Le nome de critère 1\",\n        \"nameOfCriterion2\": \"Le nome de critère 2\",\n        \"defaultCriterion1Weight\": \"Par défaut poid du 1er critère\",\n        \"weightLowerBound\": \"Poid de la limite inférieure\",\n        \"weightUpperBound\": \"Poid de la limite supérieure\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Montrer classement\",\n            \"flip\": \"Basculer\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposition\",\n        \"marginHorizontal\": \"Marge horizontale\",\n        \"marginVertical\": \"Marge verticale\",\n        \"nodeSize\": \"Taille du noeud\",\n        \"edgeSlantWidthMax\": \"Inclinaison du bord (max.)\",\n        \"gridWidth\": \"Largeur\",\n        \"gridHeight\": \"Taille\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Détails\",\n        \"title\" : \"Titre\",\n        \"description\" : \"Description\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Noeud de décision\",\n                \"chance\":\"Noud aléatoire\",\n                \"terminal\":\"Noeud terminal\"\n            },\n            \"edge\": \"Bord\",\n            \"text\": \"Texte flottant\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Les connexions\",\n                \"child\": {\n                    \"header\": \"Bord #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Voulez-vous vraiment effacer le diagramme actuel? Toutes les données non enregistrées seront perdues.\",\n        \"openDiagram\": \"Etes-vous sur? Toutes les données de diagramme non enregistrées seront perdues.\",\n        \"beforeunload\": \"Voulez-vous vraiment fermer SilverDecisions? Toutes les données de diagramme non enregistrées seront perdues.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Erreur lors de l'analyse du fichier!\",\n        \"fileApiNotSupported\":\"L'API du fichier n'est pas encore prise en charge sur ce navigateur.\",\n        \"inputFilesProperty\":\"Votre navigateur ne semble pas prendre en charge la propriété `fichiers`.\",\n        \"notSilverDecisionsFile\":\"Pas de fichiers SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Format incorrect de la chaîne de version!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La version dans le fichier est plus récente que la version de l'application. Certaines fonctionnalités peuvent être manquantes.\",\n        \"objectiveComputationFailure\": \"Erreur en calculant l'objectif!\",\n        \"diagramDrawingFailure\": \"Erreur lors du dessin diagramme!\",\n        \"malformedData\":\"Erreur lors de la lecture des données arborescentes!\",\n        \"pngExportNotSupported\": \"L'exportation vers PNG n'est pas prise en charge dans votre navigateur.\",\n        \"pngExportNotSupportedIE\": \"Exporter vers PNG n'est pas pris en charge dans Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'exportation vers SVG n'est pas prise en charge par votre navigateur.\",\n        \"pdfExportNotSupported\": \"L'exportation au format PDF n'est pas prise en charge par votre navigateur.\",\n        \"incorrectPayoffNumberFormatOptions\": \"L'option de format de numérotation des avantages chiosie est incorrecte.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"L'option de format de numérotation des probabilités chiosie est incorrecte.\",\n        \"incorrectNumberFormatOptions\": \"L'option de format de numérotation choisie est incorrecte.\",\n        \"jsPDFisNotIncluded\": \"JsPDF n'est pas inclus!\",\n        \"serverSideExportRequestFailure\": \"La demande de téléchargement au serveur a échoué!\"\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: {\n                en: {\n                    translation: en\n                },\n                pl: {\n                    translation: pl\n                },\n                it: {\n                    translation: it\n                },\n                de: {\n                    translation: de\n                },\n                fr: {\n                    translation: fr\n                }\n            }\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nuovo diagramma\",\n        \"openDiagram\": \"Apri diagramma esistnte\",\n        \"saveDiagram\": \"Salva il diagramma corente\",\n        \"export\":{\n            \"label\": \"Esporta in\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Disposizione\",\n            \"manual\": \"Manuale\",\n            \"tree\": \"Albero\",\n            \"cluster\": \"Grappolo\"\n        },\n        \"viewMode\": {\n            \"label\": \"Vista\",\n            \"options\": {\n                \"criterion1\":\"Criterio 1\",\n                \"criterion2\":\"Criterio 2\",\n                \"twoCriteria\":\"Due criteri\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Regola\",\n            \"options\": {\n                \"expected-value-maximization\":\"max\",\n                \"expected-value-minimization\":\"min\",\n                \"maxi-min\":\"max-min\",\n                \"maxi-max\":\"max-max\",\n                \"mini-min\":\"min-min\",\n                \"mini-max\":\"min-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Ripristina\",\n        \"redo\": \"Ripeti\",\n        \"settings\": \"Settaggi\",\n        \"about\": \"Di\",\n        \"sensitivityAnalysis\": \"Analisi di sensibilità\",\n        \"recompute\": \"Ricalcola\"\n    },\n    \"node\":{\n        \"name\": \"Etichetta\"\n    },\n    \"edge\":{\n        \"name\": \"Eticehtta\",\n        \"payoff\": \"Saldo\",\n        \"probability\": \"Probabilità\"\n    },\n    \"text\":{\n        \"value\": \"Testo\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Classifica\",\n        \"buttons\": {\n            \"downloadCsv\": \"Scarica CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Regola #\",\n            \"policy\": \"Regola\",\n            \"comment\": \"Commento\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"dominata (da #{{policy}})\",\n            \"extendedDominatedBy\": \"estesa-dominata (da #{{policy1}} e #{{policy2}})\",\n            \"incratio\": \"rapporto incrementale={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Evidenziato\",\n                \"highlighted-default\": \"Raccomandato (per default WTP)\",\n                \"extended-dominated\" : \"Estesa-dominata\",\n                \"dominated\": \"Dominata\",\n                \"default\": \"Altro\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Direzione di {{name}} ottimizzazione\",\n                \"gradientArrow2\": \"Direzione di {{name}} ottimizzazione\",\n                \"dominatedRegion\": \"Regione dominata\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"L'area grigia evidenzia la regione dominata\",\n                \"gradientArrows\": \"Le frecce indicano la direzione di miglioramento\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analisi di sensibilità\",\n        \"buttons\": {\n            \"runJob\": \"Esegui\",\n            \"stopJob\": \"Stop\",\n            \"terminateJob\": \"Esci\",\n            \"resumeJob\": \"Riprendi\",\n            \"downloadCsv\": \"Scaricare CSV\",\n            \"back\": \"Indietro\",\n            \"clear\": \"Cancella\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Cancella\",\n            \"addParameterValue\": \"Aggiungi\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} politiche\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Massimo\",\n                \"minimum\": \"Minimo\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mappa di calore\"\n            }\n        },\n        \"policyPreview\": \"Anteprima della politica\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità multivariata\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagramma a tornado\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"min\": {\n                        \"label\": \"Min\"\n                    },\n                    \"max\": {\n                        \"label\": \"Max\"\n                    },\n                    \"length\": {\n                        \"label\": \"Lunghezza\"\n                    },\n                    \"step\": {\n                        \"label\": \"Passo\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non essere calcolata o essere molto lenta.\",\n                \"largeParametersNumber\": \"Numero di parametri maggiori di {{number}}. La visualizzazione dell'analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Decresce\",\n                    \"high\": \"Cresce\"\n                },\n                \"xAxisTitle\": \"Saldo\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Analisi di sensibilità probabilistica\",\n            \"param\":{\n                \"ruleName\": \"Nome alla regola\",\n                \"numberOfRuns\": {\n                    \"label\": \"Numero di operazioni\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formula\",\n                        \"help\": \"Seleziona modello di formula dal menu o scrivi un codice personalizzato.\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\",\n                \"param-computation\": \"Errore di calcolo dei valori dei parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            }\n        },\n                \"spider-plot\": {\n            \"name\": \"Diagramma di Kiviat\",\n            \"param\": {\n                \"ruleName\": \"Nome alla regola\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Descrizione estesa della politica\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- variazione percentuale da considerare\"\n                },\n                \"length\": {\n                    \"label\": \"Numero di valpri da testare\",\n                    \"help\": \"Numero di valpri da testare (in una parte della gamma)\"\n                },\n                \"variables\": {\n                    \"label\": \"Variabili\",\n                    \"name\": {\n                        \"label\": \"Nome\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Valore predefinito\"\n                    }\n                }\n            },\n            \"errors\": {\n                \"computations\": \"Errore nei calcoli di analisi di sensibilità per i seguenti parametri:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Numero di scenari definiti più grandi di {{numberFormatted}}. Analisi di sensibilità potrebbe non riuscire o essere molto lenta.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Variazione percentuale\",\n                \"yAxisTitle\": \"Saldo\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Classifica\"\n        },\n        \"errors\":{\n            \"generic\": \"Errore nei calcoli di analisi di sensibilità: {{message}}\",\n            \"params\": \"{{jobName}} parameteri errati\"\n        }\n    },\n\n    \"settingsDialog\":{\n        \"title\": \"Settaggi\",\n        \"general\":{\n            \"title\": \"Generale\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontFamily\": \"Famiglia font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"numberFormatLocale\": \"Formato numero locale\"\n        },\n        \"payoff1\":{\n            \"title\": \"Formato saldo 1\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"payoff2\":{\n            \"title\": \"Formato saldo 2\",\n            \"currency\": \"Valuta\",\n            \"currencyDisplay\": \"Visualizzazione valuta\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"useGrouping\": \"Usa separatori di gruppo\"\n        },\n        \"probability\":{\n            \"title\": \"Formato probabilità\",\n            \"style\": \"Stile\",\n            \"minimumFractionDigits\": \"Numero minimo cifre frazione\",\n            \"maximumFractionDigits\": \"Numero massimo cifre frazione\",\n            \"fontSize\": \"Dimensione font\",\n            \"color\": \"Colore\"\n        },\n        \"node\":{\n            \"title\": \"Nodo\",\n            \"strokeWidth\": \"Spessore linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Spessore linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font etichetta\",\n                \"color\": \"Colore etichetta\"\n            },\n            \"payoff\": {\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            },\n            \"decision\": {\n                \"title\": \"Nodo dicisione\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Nodo opportunità\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Nodo terminale\",\n                \"fill\": \"Colore riempimento\",\n                \"stroke\": \"Colore linea\",\n                \"selected\": {\n                    \"fill\": \"Colore riempimento selezionato\"\n                },\n                \"payoff\": {\n                    \"title\": \"Saldo\",\n                    \"fontSize\": \"Dimensione font\",\n                    \"color\": \"Colore\",\n                    \"negativeColor\": \"Colore negativo\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Ramo\",\n            \"stroke\": \"Colore\",\n            \"strokeWidth\": \"Larghezza linea\",\n            \"optimal\":{\n                \"title\": \"Ottimale\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"selected\":{\n                \"title\": \"Selezionato\",\n                \"stroke\": \"Colore\",\n                \"strokeWidth\": \"Larghezza linea\"\n            },\n            \"label\": {\n                \"title\": \"Etichetta\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\"\n            },\n            \"payoff\":{\n                \"title\": \"Saldo\",\n                \"fontSize\": \"Dimensione font\",\n                \"color\": \"Colore\",\n                \"negativeColor\": \"Colore negativo\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Titolo diagramma\",\n            \"fontSize\": \"Dimensione font\",\n            \"fontWeight\": \"Peso del font\",\n            \"fontStyle\": \"Stile font\",\n            \"color\": \"Colore\",\n            \"margin\":{\n                \"title\": \"Margine\",\n                \"top\": \"Superiore\",\n                \"bottom\": \"Inferiore\"\n            },\n            \"description\":{\n                \"title\": \"Sotto-titolo (descrizione diagramma)\",\n                \"show\": \"Mostra\",\n                \"fontSize\": \"Dimensione font\",\n                \"fontWeight\": \"Peso del font\",\n                \"fontStyle\": \"Stile font\",\n                \"color\": \"Colore\",\n                \"marginTop\": \"Margine superiore\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Classifica\",\n            \"plot\": {\n                \"title\": \"Grafico\",\n                \"maxWidth\": \"Larghezza massima\",\n                \"highlightedColor\": \"Colore evidenziato della regola\",\n                \"highlightedDefaultColor\": \"Colore polizza raccomandata (per default WTP)\",\n                \"extendedDominatedColor\": \"Colori della regola dominata estesa\",\n                \"dominatedColor\": \"Colore della denominata regola\",\n                \"defaultColor\": \"Altri criteri colore\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Altro\",\n            \"disableAnimations\": \"Disabilita animazione\",\n            \"forceFullEdgeRedraw\": \"Forza ridisegno dei rami\",\n            \"hideLabels\": \"Nascondi le etichette\",\n            \"hidePayoffs\": \"Nascondi saldo\",\n            \"hideProbabilities\": \"Nascondi le probabilità\",\n            \"raw\": \"Non elaborato\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informazioni\"\n    },\n    \"help\":{\n        \"header\": \"Aiuto\",\n        \"mouse\": {\n            \"header\":\"Azioni mouse:\",\n            \"list\":{\n                \"1\": \"Bottone sinistro: selezione nodo/ramo\",\n                \"2\": \"Bottone destro: menu di contesto (aggiunta/manipolazione nodi)\",\n                \"3\": \"Doppio click bottone sinistro: menu di contesto\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Scorciatoie tastiera:\",\n            \"list\":{\n                \"1\": \"Del: cancella nodi selezionati\",\n                \"2\": \"Ctrl-C/X: copia/taglia nodi selezionati\",\n                \"3\": \"Ctrl-V: incolla nodi copiati come sotto-albero di un nodo selezionato\",\n                \"4\": \"Ctrl-Y/Z: ripristina/ripeti\",\n                \"5\": \"Ctrl-Alt-D/C/T: aggiungi nuovo sottonodo Decisione/Opportunità/Terminale di un <strong>nodo selezionato</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: inietta un nuovo nodo Decisione/Opportunità in un <strong>ramo selezionato</strong>\"\n            }\n        },\n        \"docs\": \"La documentazione di SilverDecisions e disponibile <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">qui</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definizioni delle variabili\",\n        \"scope\": {\n            \"global\": \"raggio globale\",\n            \"node\": \"raggio di nodo e sotto-albero selezionati\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Raggio variabile:\",\n            \"global\": \"globale\",\n            \"node\": \"nodo e sotto-albero selezionati\"\n        },\n        \"header\": \"Variabili\",\n        \"code\": \"Codice\",\n        \"buttons\":{\n            \"openDialog\" : \"Apri il dialogo\",\n            \"recalculate\": \"Ricalcolare\"\n        },\n        \"evaluatedVariables\": \"Variabili valutate\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Criteri multipli\",\n        \"defaultMaximizedCriterionName\": \"Effetto\",\n        \"defaultMinimizedCriterionName\": \"Costo\",\n        \"nameOfCriterion1\": \"Nome del criterio 1\",\n        \"nameOfCriterion2\": \"Nome del criterio 2\",\n        \"defaultCriterion1Weight\": \"Predefinito 1° peso criterio\",\n        \"weightLowerBound\": \"Peso inferiore limitato\",\n        \"weightUpperBound\": \"Peso superiore del limite\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Mostra la classifica\",\n            \"flip\": \"Ribalta\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Disposizione\",\n        \"marginHorizontal\": \"Margine orizzontale\",\n        \"marginVertical\": \"Margine verticale\",\n        \"nodeSize\": \"Dimensione nodo\",\n        \"edgeSlantWidthMax\": \"Inclinazione nodo\",\n        \"gridWidth\": \"Larghezza\",\n        \"gridHeight\": \"Altezza\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Dettagli\",\n        \"title\" : \"Titolo\",\n        \"description\" : \"Descrizione\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Nodo decisione\",\n                \"chance\":\"Nodo opportunità\",\n                \"terminal\":\"Nodo terminale\"\n            },\n            \"edge\": \"Ramo\",\n            \"text\": \"Testo mobile\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Connessioni\",\n                \"child\": {\n                    \"header\": \"Ramo #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Vuoi davvero cancellare ildiagramma corrente ? Tutti i dati non salvati saranno persi.\",\n        \"openDiagram\": \"Sei sicuro? Tutti i dati non salvati saranno persi.\",\n        \"beforeunload\": \"Sei sicuro di voler uscire da SilverDecisions ?Tutti i dati non salvati saranno persi.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Errore analizzando il file !\",\n        \"fileApiNotSupported\":\"l'API di questo file non è ancora supportata in questo browser.  \",\n        \"inputFilesProperty\":\"Il tuo browser non sembra supportare la proprieta del file di input.\",\n        \"notSilverDecisionsFile\":\"Non è un file SilverDecisions !\",\n        \"incorrectVersionFormat\": \"Formato non corretto della serie di versione!\",\n        \"fileVersionNewerThanApplicationVersion\": \"La versione in file è più recente rispetto alla versione dell'applicazione. Alcune funzionalità possono essere indisponibili.\",\n        \"objectiveComputationFailure\": \"Errore durante il calcolo obiettivo!\",\n        \"diagramDrawingFailure\": \"Errore durante il disegno della diagramma!\",\n        \"malformedData\":\"Errore durante la lettura dei dati dell'albero !\",\n        \"pngExportNotSupported\": \"L'esport in formato PNG non è supportata nel tuo browser.\",\n        \"pngExportNotSupportedIE\": \"L'esport in formato PNG non è supportata in Internet Explorer.\",\n        \"svgExportNotSupported\": \"L'esport in formato SVG non è supportata nel tuo browser.\",\n        \"pdfExportNotSupported\": \"L'esport in formato PDF non è supportata nel tuo browser.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Opzioni per il formato dei saldi non corrette.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Opzioni per il formato delle probabilità non corrette.\",\n        \"incorrectNumberFormatOptions\": \"Opzioni per il formato dei numeri non corrette, utilizzo del default.\",\n        \"jsPDFisNotIncluded\": \"jsPDF non incluso !\",\n        \"serverSideExportRequestFailure\": \"Richiesta di export fallita lato server !\"\n    }\n}\n","module.exports={\n    \"toolbar\": {\n        \"newDiagram\": \"Nowy diagram\",\n        \"openDiagram\": \"Otwórz diagram\",\n        \"saveDiagram\": \"Zapisz diagram\",\n        \"export\":{\n            \"label\": \"Eksport\",\n            \"png\": \"Png\",\n            \"svg\": \"Svg\",\n            \"pdf\": \"Pdf\"\n        },\n        \"layout\":{\n            \"label\": \"Układ\",\n            \"manual\": \"Ręczny\",\n            \"tree\": \"Drzewo\",\n            \"cluster\": \"Zgrupowany\"\n        },\n        \"viewMode\": {\n            \"label\": \"Widok\",\n            \"options\": {\n                \"criterion1\":\"Kryterium 1\",\n                \"criterion2\":\"Kryterium 2\",\n                \"twoCriteria\":\"Dwa kryteria\"\n            }\n        },\n        \"objectiveRule\":{\n            \"label\": \"Reguła\",\n            \"options\": {\n                \"expected-value-maximization\":\"maksimum\",\n                \"expected-value-minimization\":\"minimum\",\n                \"maxi-min\":\"maxi-min\",\n                \"maxi-max\":\"maxi-max\",\n                \"mini-min\":\"mini-min\",\n                \"mini-max\":\"mini-max\",\n                \"min-max\":\"min-max\",\n                \"max-min\":\"max-min\",\n                \"min-min\": \"min-min\",\n                \"max-max\": \"max-max\"\n            }\n        },\n        \"undo\": \"Cofnij\",\n        \"redo\": \"Ponów\",\n        \"settings\": \"Ustawienia\",\n        \"about\": \"Informacje\",\n        \"sensitivityAnalysis\": \"Analiza wrażliwości\",\n        \"recompute\": \"Przelicz\"\n    },\n    \"node\":{\n        \"name\": \"Etykieta\"\n    },\n    \"edge\":{\n        \"name\": \"Etykieta\",\n        \"payoff\": \"Wypłata\",\n        \"probability\": \"Prawdopodobieństwo\"\n    },\n    \"text\":{\n        \"value\": \"Tekst\"\n    },\n    \"leagueTableDialog\":{\n        \"title\": \"Tabela ligowa\",\n        \"buttons\": {\n            \"downloadCsv\": \"Pobierz CSV\"\n        }\n    },\n    \"leagueTable\": {\n        \"headers\":{\n            \"policyNo\": \"Nr polityki\",\n            \"policy\": \"Polityka\",\n            \"comment\": \"Komentarz\"\n        },\n        \"comment\":{\n            \"dominatedBy\": \"zdominowana (przez #{{policy}})\",\n            \"extendedDominatedBy\": \"zdominowana rozszerzenie (przez #{{policy1}} i #{{policy2}})\",\n            \"incratio\": \"inkrementalny iloraz={{incratio}}\"\n        },\n        \"plot\":{\n            \"groups\":{\n                \"highlighted\": \"Rekomendowany (dla pewnej wartości WTP w zakresie)\",\n                \"highlighted-default\": \"Rekomendowany (dla domyślnej wartości WTP)\",\n                \"extended-dominated\" : \"Zdominowana rozszerzenie\",\n                \"dominated\": \"Zdominowana\",\n                \"default\": \"Inne\"\n            },\n            \"tooltip\":{\n                \"gradientArrow1\": \"Kierunek optymalizacji {{name}}\",\n                \"gradientArrow2\": \"Kierunek optymalizacji {{name}}\",\n                \"dominatedRegion\": \"Obszar zdominowany\"\n            },\n            \"legend\":{\n                \"dominatedRegion\": \"Szary region oznacza obszar zdominowany\",\n                \"gradientArrows\": \"Strzałki wskazują kierunek poprawy\"\n            }\n        }\n    },\n    \"sensitivityAnalysisDialog\":{\n        \"title\": \"Analiza wrażliwości\",\n        \"buttons\": {\n            \"runJob\": \"Uruchom\",\n            \"stopJob\": \"Zatrzymaj\",\n            \"terminateJob\": \"Zakończ\",\n            \"resumeJob\": \"Wznów\",\n            \"downloadCsv\": \"Pobierz CSV\",\n            \"back\": \"Wstecz\",\n            \"clear\": \"Wyczyść\"\n        }\n    },\n    \"jobParametersBuilder\": {\n        \"buttons\": {\n            \"removeParameterValue\": \"Usuń\",\n            \"addParameterValue\": \"Dodaj\"\n        }\n    },\n    \"jobResultTable\":{\n        \"tooltip\": {\n            \"multiplePoliciesInCell\": \"{{number}} polityk\"\n        },\n        \"pivot\": {\n            \"aggregators\":{\n                \"maximum\": \"Maksimum\",\n                \"minimum\": \"Minimum\"\n            },\n            \"renderers\":{\n                \"heatmap\": \"Mapa cieplna\"\n            }\n        },\n        \"policyPreview\": \"podgląd polityki\"\n    },\n    \"job\":{\n        \"sensitivity-analysis\":{\n            \"name\": \"Analiza wrażliwości N-czynnikowa\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maksimum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"tornado-diagram\":{\n            \"name\": \"Diagram tornado\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"min\": {\n                        \"label\": \"Minimum\"\n                    },\n                    \"max\": {\n                        \"label\": \"Maximum\"\n                    },\n                    \"length\": {\n                        \"label\": \"Długość\"\n                    },\n                    \"step\": {\n                        \"label\": \"Krok\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniach analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\",\n                \"largeParametersNumber\": \"Liczba parametrów większa niż {{number}}. Wyświetlenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\":{\n                \"legend\":{\n                    \"low\": \"Zmniejszenie\",\n                    \"high\": \"Zwiększenie\"\n                },\n                \"xAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"probabilistic-sensitivity-analysis\":{\n            \"name\": \"Probabilistyczna analiza wrażliwości\",\n            \"param\":{\n                \"ruleName\": \"Nazwa reguły\",\n                \"numberOfRuns\": {\n                    \"label\": \"Liczba powtórzeń\"\n                },\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis reguły\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"formula\": {\n                        \"label\": \"Formuła\",\n                        \"help\": \"Wybierz wzór formuły z menu lub wpisz własny kod\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\",\n                \"param-computation\": \"Błąd w wyliczaniu wartości parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            }\n        },\n        \"league-table\":{\n            \"name\": \"Tabela ligowa\"\n        },\n        \"spider-plot\": {\n            \"name\": \"Wykres pajęczynowy\",\n            \"param\": {\n                \"ruleName\": \"Nazwa reguły\",\n                \"extendedPolicyDescription\": {\n                    \"label\": \"Rozszerzony opis polityki\"\n                },\n                \"percentageChangeRange\": {\n                    \"label\": \"+/- zmiana procentowa do analizy\"\n                },\n                \"length\": {\n                    \"label\": \"Liczba wartości do przetestowa\",\n                    \"help\": \"Liczba wartości do przetestowa (po jednej stronie zakresu)\"\n                },\n                \"variables\": {\n                    \"label\": \"Zmienne\",\n                    \"name\": {\n                        \"label\": \"Nazwa\"\n                    },\n                    \"defaultValue\": {\n                        \"label\": \"Wartość domyślna\"\n                    }\n                }\n            },\n            \"errors\":{\n                \"computations\": \"Błąd w obliczeniu analizy wrażliwości dla następujących parametrów:\"\n            },\n            \"warnings\": {\n                \"largeScenariosNumber\": \"Liczba zdefiniowanych scenariuszy większa niż {{numberFormatted}}. Wyliczenie analizy wrażliwości może się nie powieść lub być bardzo powolne.\"\n            },\n            \"plot\": {\n                \"legend\": {},\n                \"xAxisTitle\": \"Zmiana procentowa\",\n                \"yAxisTitle\": \"Wypłata\"\n            }\n        },\n        \"errors\":{\n            \"generic\": \"Błąd w obliczeniach analizy wrażliwości: {{message}}\",\n            \"params\": \"Błędne parametry w {{jobName}}\"\n        }\n    },\n    \"settingsDialog\":{\n        \"title\": \"Ustawienia\",\n        \"general\":{\n            \"title\": \"Ogólne\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontFamily\": \"Rodzina czcionek\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"numberFormatLocale\": \"Kod lokalizacji językowej liczb\"\n        },\n        \"payoff1\":{\n            \"title\": \"Format wypłaty 1\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"payoff2\":{\n            \"title\": \"Format wypłaty 2\",\n            \"currency\": \"Waluta\",\n            \"currencyDisplay\": \"Wyświetlanie waluty\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"useGrouping\": \"Separatory grupowania\"\n        },\n        \"probability\":{\n            \"title\": \"Format prawdopodobieństwa\",\n            \"style\": \"Styl\",\n            \"minimumFractionDigits\": \"Minimalna liczba miejsc po przecinku\",\n            \"maximumFractionDigits\": \"Maksymalna liczba miejsc po przecinku\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"color\": \"Kolor\"\n        },\n        \"node\":{\n            \"title\": \"Węzeł\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalny\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki etykiety\",\n                \"color\": \"Kolor etykiety\"\n            },\n            \"payoff\": {\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            },\n            \"decision\": {\n                \"title\": \"Węzeł Decyzyjny\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"chance\": {\n                \"title\": \"Węzeł Losowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                }\n            },\n            \"terminal\":{\n                \"title\": \"Węzeł Końcowy\",\n                \"fill\": \"Kolor wypełnienia\",\n                \"stroke\": \"Kolor krawędzi\",\n                \"selected\": {\n                    \"fill\": \"Kolor wypełnienia po zaznaczeniu\"\n                },\n                \"payoff\": {\n                    \"title\": \"Wypłata\",\n                    \"fontSize\": \"Rozmiar czcionki\",\n                    \"color\": \"Kolor\",\n                    \"negativeColor\": \"Kolor wartości ujemnej\"\n                }\n            }\n        },\n        \"edge\":{\n            \"title\": \"Krawędź\",\n            \"stroke\": \"Kolor\",\n            \"strokeWidth\": \"Szerokość krawędzi\",\n            \"optimal\":{\n                \"title\": \"Optymalna\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"selected\":{\n                \"title\": \"Zaznaczona\",\n                \"stroke\": \"Kolor\",\n                \"strokeWidth\": \"Szerokość krawędzi\"\n            },\n            \"label\": {\n                \"title\": \"Etykieta\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\"\n            },\n            \"payoff\":{\n                \"title\": \"Wypłata\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"color\": \"Kolor\",\n                \"negativeColor\": \"Kolor wartości ujemnej\"\n            }\n        },\n        \"diagramTitle\":{\n            \"title\": \"Tytuł diagramu\",\n            \"fontSize\": \"Rozmiar czcionki\",\n            \"fontWeight\": \"Waga czcionki\",\n            \"fontStyle\": \"Styl czcionki\",\n            \"color\": \"Kolor\",\n            \"margin\":{\n                \"title\": \"Margines\",\n                \"top\": \"Górny\",\n                \"bottom\": \"Dolny\"\n            },\n            \"description\":{\n                \"title\": \"Podtytuł (opis diagramu)\",\n                \"show\": \"Wyświetl\",\n                \"fontSize\": \"Rozmiar czcionki\",\n                \"fontWeight\": \"Waga czcionki\",\n                \"fontStyle\": \"Styl czcionki\",\n                \"color\": \"Kolor\",\n                \"marginTop\": \"Margines górny\"\n            }\n        },\n        \"leagueTable\": {\n            \"title\": \"Tabela ligowa\",\n            \"plot\": {\n                \"title\": \"Wykres\",\n                \"maxWidth\": \"Maksymalna szerokość\",\n                \"highlightedColor\": \"Kolor polityki rekomendowanej (dla pewnego WTP w zakresie)\",\n                \"highlightedDefaultColor\": \"Kolor polityki rekomendowanej (dla domyślnego WTP)\",\n                \"extendedDominatedColor\": \"Kolog polityki zdominowanej rozszerzenie\",\n                \"dominatedColor\": \"Kolor polityki zdominowanej\",\n                \"defaultColor\": \"Kolor innych polityk\"\n            }\n        },\n        \"other\":{\n            \"title\": \"Inne\",\n            \"disableAnimations\": \"Wyłącz animacje\",\n            \"forceFullEdgeRedraw\": \"Wymuś pełne przerysowywanie krawędzi\",\n            \"hideLabels\": \"Ukryj etykiety\",\n            \"hidePayoffs\": \"Ukryj wypłaty\",\n            \"hideProbabilities\": \"Ukryj prawdopodobieństwa\",\n            \"raw\": \"Surowy\"\n        }\n    },\n    \"aboutDialog\":{\n        \"title\": \"Informacje\"\n    },\n    \"help\":{\n        \"header\": \"Pomoc\",\n        \"mouse\": {\n            \"header\":\"Akcje myszy:\",\n            \"list\":{\n                \"1\": \"lewy klawisz myszy: wybór węzła/krawędzi\",\n                \"2\": \"prawy klawisz myszy: menu kontekstowe (dodawanie/manipulowanie węzłami)\",\n                \"3\": \"podwójne kliknięcie lewym przyciskiem myszy: menu kontekstowe\"\n            }\n        },\n        \"keyboard\": {\n            \"header\":\"Skróty klawiszowe:\",\n            \"list\":{\n                \"1\": \"Del: usuwanie wybranych węzłów\",\n                \"2\": \"Ctrl-C/X: kopiowanie/wycinanie wybranych węzłów\",\n                \"3\": \"Ctrl-V: wklej skopiowane węzły jako poddrzewo wybranego węzła\",\n                \"4\": \"Ctrl-Y/Z: cofnij/ponów\",\n                \"5\": \"Ctrl-Alt-D/C/T: dodaj nowy węzeł Decyzyjny/Losowy/Końcowy jako dziecko <strong>wybranego węzła</strong>\",\n                \"6\": \"Ctrl-Alt-D/C: Wstrzyknij nowy węzeł Decyzyjny/Losowy do <strong>wybranej krawędzi</strong>\"\n            }\n        },\n        \"docs\": \"Dokumentacja SilverDecisions jest dostępna <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/Documentation\\\" target=\\\"_blank\\\">tutaj</a>\"\n    },\n    \"definitionsDialog\":{\n        \"title\": \"Definicje zmiennych\",\n        \"scope\": {\n            \"global\": \"zasięg globalny\",\n            \"node\": \"zasięg wybranego węzła i poddrzewa\"\n        },\n        \"buttons\":{\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"sidebarDefinitions\":{\n        \"scope\":{\n            \"label\": \"Zasięg zmiennej:\",\n            \"global\": \"globalny\",\n            \"node\": \"wybrany węzeł i poddrzewo\"\n        },\n        \"header\": \"Zmienne\",\n        \"code\": \"Kod\",\n        \"buttons\":{\n            \"openDialog\" : \"Otwórz okno dialogowe\",\n            \"recalculate\": \"Przelicz\"\n        },\n        \"evaluatedVariables\": \"Wartości zmiennych\"\n    },\n    \"multipleCriteria\":{\n        \"header\": \"Wiele kryteriów\",\n        \"defaultMaximizedCriterionName\": \"Efekt\",\n        \"defaultMinimizedCriterionName\": \"Koszt\",\n        \"nameOfCriterion1\": \"Nazwa kryterium 1\",\n        \"nameOfCriterion2\": \"Nazwa kryterium 2\",\n        \"defaultCriterion1Weight\": \"Domyślna waga kryerium 1\",\n        \"weightLowerBound\": \"Dolna granica wagi\",\n        \"weightUpperBound\": \"Górna granica wagi\",\n        \"buttons\":{\n            \"showLeagueTable\" : \"Pokaż tabelę ligową\",\n            \"flip\": \"Zamień\"\n        }\n    },\n    \"layoutOptions\":{\n        \"header\": \"Układ\",\n        \"marginHorizontal\": \"Margines w poziomie\",\n        \"marginVertical\": \"Margines w pionie\",\n        \"nodeSize\": \"Rozmiar węzła\",\n        \"edgeSlantWidthMax\": \"Skos krawędzi (maksymalny)\",\n        \"gridWidth\": \"Szerokość\",\n        \"gridHeight\": \"Wysokość\"\n    },\n    \"diagramDetails\":{\n        \"header\": \"Szczegóły\",\n        \"title\" : \"Tytuł\",\n        \"description\" : \"Opis\"\n    },\n    \"objectProperties\":{\n        \"header\":{\n            \"node\":{\n                \"decision\":\"Węzeł Decyzyjny\",\n                \"chance\":\"Węzeł Losowy\",\n                \"terminal\":\"Węzeł Końcowy\"\n            },\n            \"edge\": \"Krawędź\",\n            \"text\": \"Pływający tekst\"\n        },\n        \"childrenProperties\":{\n            \"node\":{\n                \"header\": \"Połączenia\",\n                \"child\": {\n                    \"header\": \"Krawędź #{{number}}\"\n                }\n            }\n        }\n    },\n    \"confirm\":{\n        \"newDiagram\": \"Czy jesteś pewien, że chcesz porzucić obecny diagram? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"openDiagram\": \"Czy jesteś pewien? Wszystkie niezapisane zmiany zostaną utracone.\",\n        \"beforeunload\": \"Czy jesteś pewien, że chcesz zamknąć SilverDecisions? Wszystkie niezapisane zmiany zostaną utracone.\"\n    },\n    \"error\":{\n        \"jsonParse\": \"Błąd przetwarzania danych z pliku!\",\n        \"fileApiNotSupported\":\"Funckja 'file API' nie jest wspierana w tej przeglądarce internetowej.\",\n        \"inputFilesProperty\":\"Twoje przeglądarka nie wspiera opcji `pliki` przy otwieraniu pliku.\",\n        \"notSilverDecisionsFile\":\"Plik niezgodny z formatem SilverDecisions!\",\n        \"incorrectVersionFormat\": \"Niepoprawny format ciągu z numerem wersji!\",\n        \"fileVersionNewerThanApplicationVersion\": \"Wersja pliku jest nowasza niż wersja aplikacji. Niektóre funkcjonalności mogą być niedostępne.\",\n        \"objectiveComputationFailure\": \"Błąd podczas wyliczania celu!\",\n        \"diagramDrawingFailure\": \"Błąd podczas rysowania diagramu!\",\n        \"malformedData\":\"Błąd odczytu danych drzewa!\",\n        \"pngExportNotSupported\": \"Eksport do obrazu PNG nie jest wspierany w Twojej przeglądarce.\",\n        \"pngExportNotSupportedIE\": \"Eksport do obrazu PNG nie jest wspierany w przeglądarce Internet Explorer.\",\n        \"svgExportNotSupported\": \"Eksport do obrazu SVG nie jest wspierany w Twojej przeglądarce.\",\n        \"pdfExportNotSupported\": \"Eksport do PDF nie jest wspierany w Twojej przeglądarce.\",\n        \"incorrectPayoffNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu wypłaty.\",\n        \"incorrectProbabilityNumberFormatOptions\": \"Niewłaściwe ustawienia dla formatu prawdopodobieństw.\",\n        \"incorrectNumberFormatOptions\": \"Niewłaściwe ustawiono formatowanie liczb. Przyjęto ustawienia domyślne.\",\n        \"jsPDFisNotIncluded\": \"Nie włączono jsPDF!\",\n        \"serverSideExportRequestFailure\": \"Nieudane zapytanie do serwera exportu!\"\n    }\n}\n","require('es6-set/implement');\nimport {D3Extensions} from 'sd-tree-designer'\nimport {App} from './app'\nimport {version} from '../package.json';\nD3Extensions.extend();\n\nApp.version = version;\nmodule.exports = App;\n\n\n\n\n\n\n","import {Templates} from \"../templates\";\nimport {PARAMETER_TYPE} from \"sd-computations/src/jobs/engine/job-parameter-definition\";\nimport {log} from 'sd-utils'\nimport * as d3 from \"../d3\";\nimport {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {Autocomplete} from \"../autocomplete\"\n\nexport class JobParametersBuilder{\n\n\n    jobParameters;\n    hiddenParams;\n    constructor(container, i18nPrefix='', onChange=()=>{}){\n        this.container=container;\n        this.i18nPrefix = i18nPrefix;\n        this.paramTypeToInputType ={};\n        this.paramTypeToInputAttrs = {};\n\n        this.paramTypeToInputType[PARAMETER_TYPE.BOOLEAN] = 'checkbox';\n        this.paramTypeToInputType[PARAMETER_TYPE.DATE] = 'date';\n        this.paramTypeToInputType[PARAMETER_TYPE.INTEGER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.INTEGER] = [{\n            name: \"step\",\n            value: \"1\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.NUMBER] = 'number';\n        this.paramTypeToInputAttrs[PARAMETER_TYPE.NUMBER] = [{\n            name: \"step\",\n            value: \"any\"\n        }];\n        this.paramTypeToInputType[PARAMETER_TYPE.STRING] = 'text';\n\n        this.onChange = onChange;\n    }\n\n\n    setJobParameters(jobName, jobParameters, customParamsConfig={}){\n        this.jobName=jobName;\n        this.jobParameters = jobParameters;\n        this.customParamsConfig = customParamsConfig;\n        this.clean();\n        this.build(this.container, this.jobParameters.definitions, this.jobParameters.values, '', this.onChange);\n    }\n\n    clean() {\n        this.container.html('');\n        this.pristine = {};\n        this.customValidators = {};\n        this.strictValidation(false);\n    }\n\n    validate(strictValidation = true){\n        this.strictValidation(strictValidation);\n        this.pristine = {};\n        this.container.selectAll('.sd-pristine').classed('sd-pristine', false);\n        return this.checkCustomValidators() && this.jobParameters.validate();\n    }\n\n    checkCustomValidators(){\n        let valid = true;\n        Utils.forOwn(this.customValidators, (val, key)=>{\n            valid = valid && val();\n        });\n        return valid;\n    }\n\n    strictValidation(enabled=true){\n        this.container.classed('sd-strict-validation', enabled);\n    }\n\n\n    build(container, jobParameterDefinitions, parentValueObject,  parentPath='', onChange=()=>{}, onInput=()=>{}){\n        container.html('');\n        var self = this;\n        var params = container.selectAll(\".sd-job-parameter\").data(jobParameterDefinitions);\n        var paramsEnter = params.enter().appendSelector('div.sd-job-parameter');\n\n        paramsEnter.html(d=>Templates.get('jobParameter', d));\n\n        var paramsMerge = paramsEnter.merge(params);\n        paramsMerge.each(function(d,i){\n            var paramSelection = d3.select(this);\n            var path = parentPath;\n\n            if(path){\n                path+='.';\n\n            }\n            path += d.name;\n            paramSelection.classed('sd-hidden', Utils.get(self.customParamsConfig, path+'.hidden'));\n\n            var value = parentValueObject[d.name];\n            var repeating = d.maxOccurs>1;\n            if(value==undefined){\n                if(repeating){\n                    value = [];\n                    for(var vi=0; vi<d.minOccurs; vi++){\n                        value.push(self.getEmptyValue(d.type))\n                    }\n\n                }else{\n                    value=Utils.get(self.customParamsConfig, path+'.value', self.getEmptyValue(d.type))\n                }\n\n                parentValueObject[d.name]=value;\n            }\n\n            if(!repeating) {\n                self.buildParameterSingleValue(paramSelection, d, {\n                    get: ()=> parentValueObject[d.name],\n                    set: (v)=> parentValueObject[d.name]=v\n                }, path,onChange, onInput)\n            }else{\n                paramSelection.appendSelector(\"div.sd-job-parameter-name\").html(self.getParamNameI18n(path));\n\n                var valuesContainer = paramSelection.appendSelector(\"div.sd-job-parameter-values\");\n                var actionButtons = paramSelection.appendSelector(\"div.sd-action-buttons\");\n                var addButton = actionButtons.appendSelector('button.sd-add-job-parameter-value-button.icon-button');\n                addButton.appendSelector(\"i.material-icons\").html('add');\n\n\n                paramSelection.classed('invalid', !d.validate(value));\n                var callbacks = {};\n                callbacks.onValueRemoved = function(v,i){\n                    value.splice(i, 1);\n                    self.buildParameterValues(valuesContainer, d, value, path,callbacks)\n                    addButton.classed('sd-hidden', value.length>=d.maxOccurs)\n                    callbacks.onChange();\n                };\n                callbacks.onChange = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onChange();\n                };\n                callbacks.onInput = () =>{\n                    paramSelection.classed('invalid', !d.validate(value));\n                    onInput();\n                };\n\n                addButton\n                    .attr('title', i18n.t('jobParametersBuilder.buttons.addParameterValue'))\n                    .classed('sd-hidden', value.length>=d.maxOccurs)\n                    .on('click', ()=>{\n                        value.push(self.getEmptyValue(d.type));\n                        Utils.set(self.pristine, path+\"[\"+(value.length-1)+\"]\", true);\n                        self.buildParameterValues(valuesContainer, d, value, path, callbacks);\n                        addButton.classed('sd-hidden', value.length>=d.maxOccurs);\n                        callbacks.onChange();\n                    });\n\n\n\n\n                self.buildParameterValues(valuesContainer, d, value, path,callbacks);\n            }\n\n        });\n\n    }\n\n    buildParameterValues(container, paramDefinition, values, path, callbacks){\n        var self = this;\n        container.html(\"\");\n\n        var paramValues = container.selectAll(\".sd-job-parameter-value\").data(values);\n\n        paramValues.exit().remove();\n        var paramValuesEnter = paramValues.enter().appendSelector('div.sd-job-parameter-value');\n\n        var paramValuesMerge = paramValuesEnter.merge(paramValues);\n\n        var indexToSelection = {};\n\n        var customValidator = Utils.get(self.customParamsConfig, path+'.customValidator');\n\n        function checkCustomValidator(){\n            let allValid = true;\n            if(customValidator){\n                customValidator(values).forEach((isValid, i)=>{\n                    var selection = indexToSelection[i];\n                    let valid = paramDefinition.validateSingleValue(values[i]) && isValid;\n                    selection.classed('invalid', !valid);\n                    allValid = allValid && valid;\n                })\n            }\n\n            return allValid;\n        }\n\n        self.customValidators[path] = checkCustomValidator;\n\n        paramValuesEnter.each(function (value, i) {\n            var derivedValueUpdaters = [];\n\n            function updateDerivedValues(){\n                derivedValueUpdaters.forEach(updater=>updater(values[i]))\n            }\n\n            var selection = d3.select(this);\n            indexToSelection[i] = selection;\n\n\n            if (PARAMETER_TYPE.COMPOSITE == paramDefinition.type) {\n                var nestedParameters = selection.selectOrAppend(\"div.sd-nested-parameters\");\n                var onChange = ()=>{\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    updateDerivedValues();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                };\n                var onInput = ()=>{\n                    updateDerivedValues();\n                    selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                };\n\n                self.build(nestedParameters, paramDefinition.nestedParameters, value, path, onChange, onInput);\n                selection.classed('invalid', !paramDefinition.validateSingleValue(value));\n                selection.classed('sd-pristine', Utils.get(self.pristine, path+\"[\"+i+\"]\", false));\n            }else{\n                self.buildParameterSingleValue(selection, paramDefinition, {\n                    get: ()=> values[i],\n                    set: (v)=> values[i]=v\n                }, path, ()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onChange){\n                        callbacks.onChange();\n                    }\n                },()=>{\n                    updateDerivedValues();\n                    checkCustomValidator();\n                    if(callbacks.onInput){\n                        callbacks.onInput();\n                    }\n                })\n\n            }\n\n\n            var derivedValuesConfigs = Utils.get(self.customParamsConfig, path+'._derivedValues');\n            if(derivedValuesConfigs){\n                derivedValuesConfigs.forEach(derivedValueConfig =>{\n                    let updater = self.buildDerivedValue(selection, derivedValueConfig, path);\n                    updater(value);\n                    derivedValueUpdaters.push(updater);\n                });\n            }\n\n\n            var actionButtons = selection.appendSelector(\"div.sd-action-buttons\");\n            var removeButton = actionButtons.appendSelector('button.sd-remove-job-parameter-value-button.icon-button');\n            removeButton.appendSelector(\"i.material-icons\").html('remove')\n            removeButton\n                .attr('title', i18n.t('jobParametersBuilder.buttons.removeParameterValue'))\n                .classed('sd-hidden', values.length<=paramDefinition.minOccurs)\n                .on('click', (d)=>callbacks.onValueRemoved(d,i))\n\n        });\n\n        checkCustomValidator();\n\n        paramValuesMerge.each(function (value, i) {\n\n        });\n\n\n    }\n\n    buildDerivedValue(container, derivedValueConfig, path){\n        var self = this;\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group.sd-derived-value');\n        var name = this.getParamNameI18n(path+'.'+derivedValueConfig.name);\n        var input = selection.append('input').attr('type', 'text').attr(\"disabled\", \"disabled\");\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(name);\n\n        return (paramValue) => {\n            input.node().value = derivedValueConfig.value(paramValue);\n            AppUtils.updateInputClass(input);\n        }\n\n    }\n\n    buildParameterSingleValue(container, paramDefinition, valueAccessor, path, onChange, onInput){\n        var self = this;\n        var temp = {};\n\n        var inputId = Utils.guid();\n        var selection = container.appendSelector('div.input-group');\n        selection.classed('sd-parameter-'+paramDefinition.name, true);\n        var help = this.getParamHelpI18n(path);\n        if(help) {\n            let helpContainer = container.appendSelector('div.sd-help-icon');\n            helpContainer.html('<i class=\"material-icons\">info_outline</i>');\n            Tooltip.attach(helpContainer, (d)=>{\n                return help;\n            }, 5, 15);\n        }\n\n        var options = Utils.get(self.customParamsConfig, path+'.options', null);\n\n        var inputType = this.paramTypeToInputType[paramDefinition.type];\n        var additionalInputAttrs = this.paramTypeToInputAttrs[paramDefinition.type];\n        var input;\n        if(options && options.length){\n            inputType = 'select';\n            input = selection.append('select');\n            var optionsSel = input.selectAll(\"option\").data([null].concat(options));\n            optionsSel.enter().append(\"option\").attr(\"value\", d=>d).text(d=>d);\n\n            if(Utils.get(self.customParamsConfig, path+'.optionsAutocomplete', null)){\n                let autocomplete = new Autocomplete(input);\n                input = autocomplete.getInput();\n            }\n        }else{\n            input = selection.append('input').attr('type', inputType);\n\n            if(additionalInputAttrs){\n                additionalInputAttrs.forEach(attr=>input.attr(attr.name, attr.value))\n\n            }\n        }\n\n        input.attr('id', inputId);\n\n        input.classed('sd-input', true);\n        input.on('input change', function(d, i){\n            var value = self.parseInput(this.value, paramDefinition.type);\n            if(inputType=='checkbox'){\n                value = this.checked\n            }\n            if(!paramDefinition.validateSingleValue(value)){\n                d3.select(this).classed('invalid', true);\n            }else{\n                d3.select(this).classed('invalid', false);\n            }\n\n            valueAccessor.set(value);\n            if (d3.event.type == 'change') {\n                if (onChange) {\n                    onChange();\n                }\n            }\n\n            if (d3.event.type == 'input') {\n                if (onInput) {\n                    onInput();\n                }\n            }\n\n            AppUtils.updateInputClass(d3.select(this));\n        }).each(function(d, i){\n            var value = valueAccessor.get();\n            if(inputType=='checkbox'){\n                this.checked = value\n            }else{\n                this.value = value;\n            }\n            temp[i]={};\n            temp[i].pristineVal = value;\n            d3.select(this).classed('invalid', !paramDefinition.validateSingleValue(value));\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        selection.appendSelector('span.bar');\n        var label = selection.append('label')\n            .attr('for', inputId)\n            .html(d=>{\n                let label = this.getParamNameI18n(path);\n                return label;\n            });\n        input.node().value = valueAccessor.get();\n    }\n\n    value(path, value){\n        return this.jobParameters.value(path, value);\n    }\n\n    parseInput(value, parameterType){\n        if(parameterType===PARAMETER_TYPE.DATE){\n            return new Date(value)\n        }\n        if(parameterType===PARAMETER_TYPE.NUMBER || parameterType===PARAMETER_TYPE.INTEGER){\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    getEmptyValue(parameterType){\n        if(parameterType===PARAMETER_TYPE.COMPOSITE){\n            return {}\n        }\n\n        return null;\n    }\n\n    getParamNameI18n(path){\n        return i18n.t(this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.label')\n    }\n\n    getParamHelpI18n(path){\n        let key = this.i18nPrefix+'.'+this.jobName+'.param.'+path+'.help';\n        let help = i18n.t(key);\n        return help === key ? null : help;\n    }\n}\n","import {Utils} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nimport * as d3 from \"../d3\";\nimport {PivotTable} from \"../pivot-table\";\nvar jQuery = require('jquery');\n\nexport class JobResultTableConfig {\n    onRowSelected = (rows, indexes, event) => {};\n    className = '';\n\n    pivotTable;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class JobResultTable {\n\n    constructor(container, config) {\n        this.container = container;\n        this.config = new JobResultTableConfig(config);\n        this.init();\n    }\n\n    init() {\n        this.pivotTable = new PivotTable(this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true));\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = []\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(data.data[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n\n    setClassName(className){\n        if(this.config.className){\n            this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, false);\n            this.config.className = className;\n        }\n        this.container.selectOrAppend(\"div.sd-job-result-table\").classed(this.config.className, true)\n    }\n\n    setData(data, jobParameters, job, config) {\n        var self = this;\n        var derivers = jQuery.pivotUtilities.derivers;\n        var pivotOptions = {\n            rows: data.rows,\n            vals: data.vals,\n            cols: data.cols,\n            hiddenAttributes: ['$rowIndex'],\n            aggregatorName: this.pivotTable.getAggregatorName(\"maximum\"),\n            rendererOptions: {\n                table: {\n                    clickCallback: function (e, value, filters, pivotData) {\n                        self.clickCallback(e, value, filters, pivotData);\n                    }\n                },\n                heatmap: {\n                    colorScaleGenerator: function (values) {\n                        let extent = d3.extent(values);\n\n                    return d3.scaleLinear()\n                        .domain([extent[0], (extent[0]+extent[1])/2,extent[1]])\n                        .range([\"#4b53ff\", \"#FFF\", \"#FF0000\"])\n                    }\n                }\n            },\n            rendererName: this.pivotTable.getRendererName(\"heatmap\")\n            /*\n             rendererName: 'custom',\n             renderers: {\n             'custom': function(pivotData, options){\n             console.log(pivotData)\n             }\n             }*/\n\n        };\n\n        if(config){\n            if(config.aggregatorName){\n                pivotOptions.aggregatorName = config.aggregatorName;\n            }\n            if(config.aggregators){\n                pivotOptions.aggregators = config.aggregators;\n            }\n        }\n\n        this.pivotTable.update(data.data.map((r, i)=>r.concat(i ?  i-1 : '$rowIndex')), pivotOptions);\n\n        // this.drawHeaders(data.headers);\n        // this.drawRows(data.rows)\n    }\n\n    clear() {\n        this.clearSelection();\n        this.pivotTable.clear();\n    }\n\n    show(show=true){\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide(){\n        this.show(false);\n    }\n\n    clearSelection() {\n        // this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {log} from \"sd-utils\";\nimport {i18n} from \"../i18n/i18n\";\nvar jQuery = require('jquery');\n\n\nexport class ProbabilisticSensitivityAnalysisJobResultTable extends JobResultTable {\n\n    constructor(container, config, payoffNumberFormatter, probabilityNumberFormatter){\n        super(container, config);\n        this.payoffNumberFormatter = payoffNumberFormatter;\n        this.probabilityNumberFormatter = probabilityNumberFormatter;\n    }\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n        var data = {rows: ['policy', 'expected value', 'median', 'standard deviation', 'best probability'], cols: [], vals: ['expected value'], data: []};\n\n\n        data.data.push(['policy', 'expected value', 'median', 'standard deviation', 'best probability']);\n        jobResult.policies.forEach((policy, i)=> {\n            var row = [\n                Policy.toPolicyString(policy, jobParameters.values.extendedPolicyDescription),\n                this.payoffNumberFormatter(jobResult.expectedValues[i]),\n                this.payoffNumberFormatter(jobResult.medians[i]),\n                this.payoffNumberFormatter(jobResult.standardDeviations[i]),\n                this.probabilityNumberFormatter(jobResult.policyIsBestProbabilities[i])\n            ];\n            data.data.push(row);\n        });\n\n        log.trace(data);\n        super.setData(data, jobParameters, job,{\n            aggregatorName: \"empty\",\n            aggregators:{\n                empty: (attributeArray)=>(data, rowKey, colKey)=>{\n                    return {\n                        push: function(record) {\n                        },\n                        value: function() { return 0; },\n                        format: function(x) { return i18n.t('jobResultTable.policyPreview'); },\n                        numInputs: 1\n                    };\n                }\n            }\n        })\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self=this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push({policyIndex: record['$rowIndex']});\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {JobResultTable} from \"./job-result-table\";\nimport {Utils} from \"sd-utils\"\n\n\nexport class SensitivityAnalysisJobResultTable extends JobResultTable {\n\n    setData(jobResult, jobParameters, job) {\n        this.jobResult = jobResult;\n\n        jobParameters =job.createJobParameters(Utils.cloneDeep(jobParameters.values));\n        jobParameters.values.roundVariables = true;\n        var csvDAta = job.jobResultToCsvRows(jobResult, jobParameters);\n\n        if (csvDAta.length) {\n            csvDAta[0][0] = 'policy\\nnumber'\n        }\n\n        let cols = [];\n        let totalInColNum = 1;\n\n        jobParameters.values.variables.forEach(v=>{\n            let _totalInColNum = v.length * totalInColNum;\n            if((_totalInColNum>1000)){\n                return;\n            }\n            totalInColNum=_totalInColNum;\n            cols.push(v.name);\n        });\n\n        var data = {rows: ['policy'], cols: cols, vals: ['payoff'], data: csvDAta};\n        super.setData(data)\n    }\n\n    clickCallback(e, value, filters, pivotData) {\n        var self = this;\n        var selectedIndexes = [];\n        var selectedRows = [];\n        pivotData.forEachMatchingRecord(filters, record=> {\n            selectedIndexes.push(record['$rowIndex']);\n            selectedRows.push(self.jobResult.rows[record['$rowIndex']]);\n        });\n        self.config.onRowSelected(selectedRows, selectedIndexes, e)\n\n    }\n}\n","import {LineChartConfig, LineChart} from \"odc-d3/src/line-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class SpiderPlotConfig extends LineChartConfig {\n    maxWidth = undefined;\n\n    showLegend = true;\n    policyIndex = 0;\n    guides = true;\n    margin={\n        left: 100\n    };\n    x={// X axis config\n        title: i18n.t('job.spider-plot.plot.xAxisTitle'), // axis label\n        key: 0,\n        domainMargin: 0\n    };\n    y={// Y axis config\n        title: i18n.t('job.spider-plot.plot.yAxisTitle'), // axis label,\n        key: 1,\n        domainMargin: 0.1\n    };\n    series = true;\n    dotRadius = 3;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class SpiderPlot extends LineChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new SpiderPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new SpiderPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-spider-plot', true);\n    }\n\n    setData(data){\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map(r=>{\n            return {\n                key: r.variableName,\n                values: data.percentageRangeValues.map((rangeVal, index)=>[\n                    data.percentageRangeValues[index],\n                    r.payoffs[this.config.policyIndex][index]\n                ])\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {DivergingStackedBarChartConfig, DivergingStackedBarChart} from \"odc-d3/src/diverging-stacked-bar-chart\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class TornadoDiagramPlotConfig extends DivergingStackedBarChartConfig {\n    maxWidth = undefined;\n    margin={\n        left: 150,\n        top: 70\n    };\n\n    showLegend = true;\n    forceLegend = true;\n\n    categoryNames = [i18n.t(\"job.tornado-diagram.plot.legend.low\"), i18n.t(\"job.tornado-diagram.plot.legend.high\")];\n    colorRange = [\"#4f81bd\", \"#9bbb59\"];\n    policyIndex = 0;\n\n    guides = true;\n    middleValue = 1000;\n    showBarValues = false;\n\n    x={// X axis config\n        title: i18n.t('job.tornado-diagram.plot.xAxisTitle'), // axis label\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class TornadoDiagramPlot extends DivergingStackedBarChart {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new TornadoDiagramPlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new TornadoDiagramPlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-tornado-diagram-plot', true);\n    }\n\n    setData(data){\n        this.config.middleValue = data.defaultPayoff;\n        this.config.title = Policy.toPolicyString(data.policies[this.config.policyIndex]);\n        return super.setData(data.rows.map((r)=>{\n            let varExtent = data.variableExtents[data.variableNames.indexOf(r.variableName)];\n            return {\n                key: r.variableName+' ['+varExtent[0]+'; '+varExtent[1]+']',\n                values: [\n                    Math.max(0, data.defaultPayoff - r.extents[this.config.policyIndex][0]),\n                    Math.max(0, r.extents[this.config.policyIndex][1] - data.defaultPayoff)\n                ],\n                categories: r.extentVariableValues[this.config.policyIndex][0] <= r.extentVariableValues[this.config.policyIndex][1] ? [0, 1] : [1, 0]\n            }\n        }))\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        super.initPlot();\n    }\n\n}\n","import {Dialog} from \"../dialogs/dialog\";\nimport {Utils, log} from \"sd-utils\";\nimport {Templates} from \"../templates\";\nimport {i18n} from \"../i18n/i18n\";\nimport {AppUtils} from \"../app-utils\";\nimport {LoadingIndicator} from \"../loading-indicator\";\nimport {Exporter} from \"../exporter\";\nimport {LeagueTable} from \"./league-table\";\nimport {LeagueTablePlot} from \"./league-table-plot\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\n\nexport class LeagueTableDialog extends Dialog {\n    computationsManager;\n    jobInstanceManager;\n\n    constructor(app) {\n        super(app.container.select('.sd-league-table-dialog'), app);\n        this.computationsManager = this.app.computationsManager;\n        this.progressBarContainer = this.container.select(\".sd-job-progress-bar-container\");\n        this.progressBar = this.progressBarContainer.select(\".sd-progress-bar\");\n        this.jobResultsContainer = this.container.select(\".sd-league-table-job-results\");\n        this.initButtons();\n\n        this.job = this.computationsManager.getJobByName(\"league-table\");\n    }\n\n    onOpen() {\n        this.clear();\n        this.runJob();\n    }\n\n    onClosed() {\n        this.clear();\n        if (!this.jobInstanceManager) {\n            return;\n        }\n        this.jobInstanceManager.terminate();\n    }\n\n    clearWarnings() {\n        this.container.select(\".sd-league-table-warnings\").selectAll(\"*\").remove();\n    }\n\n    addWarning(warnConf) {\n        let msg = i18n.t(\"job.\" + this.job.name + \".warnings.\" + warnConf.name, warnConf.data);\n\n        var msgHTML = Templates.get(\"warningMessage\", {\n            message: msg\n        });\n        this.container.select(\".sd-league-table-warnings\").appendSelector(\"div.sd-league-table-warning\").html(msgHTML);\n    }\n\n    initResultTable(result) {\n        let config = {\n            onRowSelected: (row, i)=> this.onResultRowSelected(row, i),\n            onRowHover: (row, i)=> this.resultPlot.emphasize(row.row, true),\n            onRowHoverOut: (row, i)=> this.resultPlot.emphasize(row.row, false),\n        };\n\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n        }\n\n\n        this.resultTable = new LeagueTable(this.jobResultsContainer.select(\".sd-job-result-table-container\"), config);\n        this.resultTable.setData(result, this.app.dataModel);\n        this.resultTable.show();\n    }\n\n\n\n    initResultPlot(result) {\n        let self = this;\n        let config = {\n            maxWidth: self.app.config.leagueTable.plot.maxWidth,\n            weightLowerBound: result.weightLowerBound,\n            defaultWeight: result.defaultWeight,\n            weightUpperBound: result.weightUpperBound,\n            payoffCoeffs: result.payoffCoeffs,\n            payoffNames: result.payoffNames,\n            x: {\n                value: (d, key) => d.payoffs[0],\n                title: result.payoffNames[0]\n            },\n            y: {\n                value: (d, key) => d.payoffs[1],\n                title: result.payoffNames[1]\n            },\n            onDotHover: (d, i) => this.resultTable.emphasize(d, true),\n            onDotHoverOut: (d, i) => this.resultTable.emphasize(d, false),\n\n\n            color: function (group) {\n                let groupsConf = self.app.config.leagueTable.plot.groups;\n                let groupConf = groupsConf[group.key];\n                if (groupConf) {\n                    return groupConf.color;\n                }\n                return 'black'\n            },\n            groupOrdering: {\n                'dominated': 0,\n                'extended-dominated': 1,\n                'highlighted': 2,\n                'highlighted-default': 3,\n                'default': 4\n\n            },\n            groups: {\n                value: function (r) {\n                    if (r.optimalForDefaultWeight) {\n                        return 'highlighted-default'\n                    } else if (r.optimal) {\n                        return 'highlighted'\n                    }  else if (r.dominatedBy !== null) {\n                        return 'dominated'\n                    } else if (r.extendedDominatedBy !== null) {\n                        return 'extended-dominated'\n                    }\n\n                    return \"default\";\n                },\n                displayValue: (groupKey) => i18n.t(\"leagueTable.plot.groups.\"+groupKey)\n            }\n        };\n\n        this.resultPlot = new LeagueTablePlot(this.jobResultsContainer.select(\".sd-job-result-plot-container\").node(), result.rows, config);\n        setTimeout(function () {\n            self.resultPlot.init()\n        }, 100)\n    }\n\n    onResized() {\n        if (this.resultPlot) {\n            this.resultPlot.init();\n        }\n    }\n\n    disableActionButtonsAndShowLoadingIndicator(disable = true) {\n        if (disable) {\n            LoadingIndicator.show();\n        } else {\n            LoadingIndicator.hide();\n        }\n        this.container.select('.sd-league-table-action-buttons').selectAll('button').attr('disabled', disable ? 'disabled' : undefined)\n    }\n\n\n    initJobParams(){\n        this.jobParameters = this.job.createJobParameters({\n            ruleName: this.computationsManager.getCurrentRule().name,\n            weightLowerBound: this.app.dataModel.weightLowerBound,\n            defaultWeight: this.app.dataModel.defaultCriterion1Weight,\n            weightUpperBound: this.app.dataModel.weightUpperBound,\n\n        });\n    }\n\n    validateParams(){\n        this.initJobParams();\n        return this.jobParameters.validate();\n    }\n\n    runJob() {\n\n\n        this.initJobParams();\n\n        if(!this.validateParams()){\n            alert(i18n.t(\"job.errors.params\", {\"jobName\": i18n.t(\"job.league-table.name\")}))\n            return;\n        }\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.computationsManager.runJobWithInstanceManager(this.job.name, this.jobParameters.values, {\n            onJobStarted: this.onJobStarted,\n            onJobCompleted: this.onJobCompleted,\n            onJobFailed: this.onJobFailed,\n            onJobStopped: this.onJobStopped,\n            onJobTerminated: this.onJobTerminated,\n            onProgress: this.onProgress,\n            callbacksThisArg: this\n        }).then(jobInstanceManager=> {\n            this.jobInstanceManager = jobInstanceManager;\n        }).catch(e=> {\n            log.error(e);\n        }).then(()=> {\n            this.disableActionButtonsAndShowLoadingIndicator(false);\n        })\n    }\n\n    initButtons() {\n\n        this.downloadCsvButtons = this.container.select(\".sd-download-csv-button \").on('click', ()=> {\n            this.downloadCSV();\n        });\n\n        this.clearButton = this.container.select(\".sd-clear-button \").on('click', ()=> {\n            this.clear(true);\n        });\n    }\n\n    clear() {\n        this.clearResults();\n        this.clearWarnings();\n        this.setProgress(0);\n        this.markAsError(false);\n\n        AppUtils.hide(this.progressBarContainer);\n        AppUtils.hide(this.downloadCsvButtons);\n        AppUtils.hide(this.jobResultsContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n    }\n\n    clearResults() {\n        if (this.resultTable) {\n            this.resultTable.clear();\n            this.resultTable.hide();\n\n        }\n\n    }\n\n    onJobStarted() {\n        AppUtils.hide(this.downloadCsvButtons);\n\n        AppUtils.show(this.progressBarContainer);\n\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.onProgress(this.jobInstanceManager ? this.jobInstanceManager.progress : null);\n\n    }\n\n\n    onJobCompleted(result) {\n        AppUtils.show(this.jobResultsContainer);\n        AppUtils.show(this.downloadCsvButtons);\n\n        AppUtils.hide(this.progressBarContainer);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.displayResult(result)\n    }\n\n    displayResult(result) {\n        log.debug(result);\n        this.result = result;\n        this.initResultTable(result);\n\n        this.initResultPlot(result);\n\n    }\n\n    terminateJob() {\n        this.disableActionButtonsAndShowLoadingIndicator();\n        this.jobInstanceManager.terminate();\n    }\n\n    onJobFailed(errors) {\n        AppUtils.hide(this.downloadCsvButtons);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n        this.markAsError();\n        var self = this;\n        setTimeout(function () {\n            var errorMessage = \"\";\n            errors.forEach((e, i)=> {\n                if (i) {\n                    errorMessage += \"\\n\\n\";\n                }\n\n                let msgKeyBase = \"job.\" + self.job.name + \".errors.\";\n                let msgKey = msgKeyBase + e.message;\n                let msg = i18n.t(msgKey, e.data);\n                e.jobName = i18n.t(\"job.league-table.name\");\n                if (msg === msgKey) {\n                    msg = i18n.t(\"job.errors.generic\", e);\n                }\n\n                errorMessage += msg;\n                if (e.data && e.data.variables) {\n                    Utils.forOwn(e.data.variables, (value, key)=> {\n                        errorMessage += \"\\n\";\n                        errorMessage += key + \" = \" + value;\n                    })\n                }\n            });\n\n            alert(errorMessage);\n            self.terminateJob();\n        }, 10);\n\n    }\n\n    markAsError(error = true) {\n        this.container.classed('sd-job-error', error);\n    }\n\n    onJobStopped() {\n        AppUtils.hide(this.stopJobButton);\n        AppUtils.show(this.resumeJobButton);\n        this.disableActionButtonsAndShowLoadingIndicator(false);\n\n    }\n\n    onJobTerminated() {\n        this.clear();\n    }\n\n    onProgress(progress) {\n        this.setProgress(progress)\n    }\n\n    setProgress(progress) {\n        var percents = 0;\n        var value = \"0%\";\n        if (progress) {\n            value = progress.current + \" / \" + progress.total;\n            percents = progress.current * 100 / progress.total;\n        }\n\n        this.progressBar.style(\"width\", percents + \"%\");\n        this.progressBar.html(value)\n    }\n\n\n    onResultRowSelected(row, index) {\n        let title = Policy.toPolicyString(row.policy, false);\n        this.app.showPolicyPreview(title, row.policy, ()=> {\n            this.resultTable.clearSelection();\n        });\n    }\n\n    downloadCSV() {\n        Exporter.saveAsCSV(this.getRows(), 'leaguetable')\n    }\n\n    getRows() {\n        var params = Utils.cloneDeep(this.jobParameters.values);\n        params.extendedPolicyDescription = false;\n        return this.job.jobResultToCsvRows(this.result, this.job.createJobParameters(params));\n    }\n\n\n}\n","import {ScatterPlot, ScatterPlotConfig} from \"odc-d3/src/scatterplot\";\nimport {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTablePlotConfig extends ScatterPlotConfig {\n    maxWidth = undefined;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n    gradientArrowLength = 30;\n    gradientArrowOffset = 10;\n    payoffCoeffs = [1, 1];\n    payoffNames = [];\n\n    showLegend = true;\n    forceLegend = true;\n\n    legend = {\n        width: 125,\n    };\n\n    // d3ColorCategory = false;\n\n    guides = true;\n    dotRadius = 5;\n    emphasizedDotRadius = 8;\n\n    dotId = (d, i) => 'sd-league-table-dot-'+d.id;\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LeagueTablePlot extends ScatterPlot {\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LeagueTablePlotConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new LeagueTablePlotConfig(config));\n    }\n\n    init(){\n        super.init();\n        this.svg.classed('sd-league-table-plot', true);\n        this.initArrowMarker(\"triangle\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.selectOrAppend(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    initPlot() {\n        d3.select(this.baseContainer).style('max-width', this.config.maxWidth);\n        this.checkOrdering();\n        super.initPlot();\n    }\n\n    checkOrdering(){\n        if(this.config.groupOrdering){\n            let getOrdering  = d => {\n                let g = this.config.groups.value(d);\n                return this.config.groupOrdering[g] === undefined ? 999 : this.config.groupOrdering[g];\n            };\n            this.data.sort((a, b)=>getOrdering(a) - getOrdering(b));\n        }\n    }\n\n    update(newData) {\n        this.checkOrdering();\n        super.update(newData);\n\n        this.updateIcerLines();\n        this.updateDominatedRegion();\n        this.updateGradientArrows();\n        this.updateDotLabels();\n\n\n    };\n\n    updateIcerLines() {\n        let self = this;\n        var linesContainerClass = this.linesContainerClass = this.prefixClass(\"lines-container\");\n        var linesContainerSelector = \"g.\" + linesContainerClass;\n        var linesContainer = this.linesContainer= self.svgG.selectOrInsert(linesContainerSelector, \".\" + self.dotsContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var linesContainerClip = linesContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        linesContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        linesContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        var line = d3.line()\n            .x(this.plot.x.map)\n            .y(this.plot.y.map);\n\n\n\n\n        let linePoints = this.plot.data.filter(d=>d.incratio !== null).sort(this.plot.x.map);\n        let highlightedPoints = this.plot.data.filter(d=>[\"highlighted\", \"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1).sort((a, b) => this.plot.x.map(a) - this.plot.x.map(b));\n        let highlightedDefaultPoints = highlightedPoints.filter(d=>[\"highlighted-default\"].indexOf(this.plot.groupValue(d)) !== -1);\n\n        this.dominatedRegionPoints = highlightedPoints.map(d=>[this.plot.x.map(d), this.plot.y.map(d)]);\n\n        if (!highlightedPoints.length) {\n            linesContainer.selectAll(\"*\").remove();\n            return;\n        }\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('middle-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", line(highlightedPoints));\n\n        highlightedPoints.sort((a, b) =>a.incratio - b.incratio || (this.config.payoffCoeffs[0] * (this.plot.x.map(a) - this.plot.x.map(b))));\n\n        let minPoint = highlightedPoints[0];\n        let maxPoint = highlightedPoints[highlightedPoints.length - 1];\n\n        let lowPoint;\n        let highPoint;\n\n        let xAxisExtent = [this.plot.x.scale.invert(0), this.plot.x.scale.invert(this.plot.width)];\n        let yAxisExtent = [this.plot.y.scale.invert(this.plot.height), this.plot.y.scale.invert(0)];\n\n        let sign = (this.config.payoffCoeffs[0] * this.config.payoffCoeffs[1]) > 0 ? 1 : -1;\n\n        let infLowY = this.config.payoffCoeffs[0] > 0 ? this.plot.height: 0;\n        if(sign > 0){\n            infLowY = this.config.payoffCoeffs[0] < 0 ? this.plot.height: 0;\n        }\n        let infLowPoint = [this.plot.x.map(minPoint), infLowY];\n\n        if (this.config.weightLowerBound == Infinity) {\n            lowPoint = infLowPoint\n        } else {\n            let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n            lowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.weightLowerBound * (this.plot.x.value(minPoint) - x) + this.plot.y.value(minPoint))];\n            if(Math.abs(lowPoint[1]) > 1000000){\n                lowPoint = infLowPoint\n            }\n        }\n\n        let infHighPoint =  [this.plot.x.map(maxPoint), this.config.payoffCoeffs[1] > 0 ? this.plot.height: 0];\n        if (this.config.weightUpperBound == Infinity) {\n            highPoint = infHighPoint\n        } else {\n\n            let x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n\n            if(sign > 0){\n                x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n            }\n\n            highPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.weightUpperBound * (x - this.plot.x.value(maxPoint)) + this.plot.y.value(maxPoint))];\n            // highPoint = [this.plot.x.scale(x), this.plot.y.scale(EE.toFloat(EE.multiply(-sign, EE.multiply(this.config.weightUpperBound, (x - this.plot.x.value(maxPoint))))) + this.plot.y.value(maxPoint))];\n            if(Math.abs(highPoint[1]) > 1000000){\n                highPoint = infHighPoint\n            }\n        }\n\n        if(highlightedDefaultPoints.length){\n            let defaultPoint = highlightedDefaultPoints[0];\n            let defLowPoint = infLowPoint;\n            let defHighPoint = infHighPoint;\n            if (this.config.defaultWeight !== Infinity) {\n                let x = this.config.payoffCoeffs[0] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                defLowPoint = [this.plot.x.scale(x), this.plot.y.scale(sign * this.config.defaultWeight * (this.plot.x.value(defaultPoint) - x) + this.plot.y.value(defaultPoint))];\n                x = this.config.payoffCoeffs[1] > 0 ? xAxisExtent[0] : xAxisExtent[1];\n                if(sign > 0){\n                    x = this.config.payoffCoeffs[1] < 0 ? xAxisExtent[0] : xAxisExtent[1];\n                }\n                defHighPoint = [this.plot.x.scale(x), this.plot.y.scale(-sign * this.config.defaultWeight * (x - this.plot.x.value(defaultPoint)) + this.plot.y.value(defaultPoint))];\n            }\n            linesContainer.selectOrAppend(\"path.\" + this.prefixClass('default-incratio'))\n                .attr(\"shape-rendering\", \"optimizeQuality\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", 'black')\n                .attr(\"d\", d3.line()([defLowPoint, defHighPoint]))\n        } else{\n            linesContainer.select(\"path.\" + this.prefixClass('default-incratio')).remove()\n        }\n\n\n        this.dominatedRegionPoints.unshift(lowPoint);\n        this.dominatedRegionPoints.push(highPoint);\n\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('low-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([lowPoint, [this.plot.x.map(minPoint), this.plot.y.map(minPoint)]]))\n\n        linesContainer.selectOrAppend(\"path.\" + this.prefixClass('high-incratio'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", 'black')\n            .attr(\"d\", d3.line()([highPoint, [this.plot.x.map(maxPoint), this.plot.y.map(maxPoint)]]))\n\n\n\n\n    }\n\n    updateDominatedRegion(){\n        let self = this;\n        var dominatedRegionContainerClass = this.prefixClass(\"dominated-region-container\");\n        var dominatedRegionContainerSelector = \"g.\" + dominatedRegionContainerClass;\n        var dominatedRegionContainer = self.svgG.selectOrInsert(dominatedRegionContainerSelector, \".\"+this.linesContainerClass);\n\n        var clipPathId = self.prefixClass(\"clip-\" + Utils.guid());\n        var dominatedRegionContainerClip = dominatedRegionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n        dominatedRegionContainerClip.selectOrAppend('rect')\n\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        dominatedRegionContainer.attr(\"clip-path\", (d, i) => \"url(#\" + clipPathId + \")\");\n\n        //draw dominated region\n\n        let worstPoint = [\n            this.config.payoffCoeffs[0] < 0 ? self.plot.width : 0,\n            this.config.payoffCoeffs[1] < 0 ? 0 : self.plot.height\n        ];\n\n        this.dominatedRegionPoints.push(worstPoint);\n\n        if(this.dominatedRegionPoints.some(p=>worstPoint[1] ? p[1] <=0 : p[1] >= self.plot.height)){\n            this.dominatedRegionPoints.push([worstPoint[0], worstPoint[1] ? 0 : self.plot.height]);\n        }\n\n        this.dominatedRegionPoints.sort((a, b)=> (a[0] - b[0]));\n        this.dominatedRegionPoints = this.dominatedRegionPoints.reduce((prev, curr)=>{\n            if(!prev.length){\n                return [curr]\n            }\n            var prevPoint = prev[prev.length-1];\n            if(prevPoint[0] !== curr[0]){\n                prev.push(curr)\n            }\n            if(Math.abs(worstPoint[1] - curr[1]) > Math.abs(worstPoint[1] - prev[prev.length-1][1])){\n                prev[prev.length-1] = curr;\n            }\n            return prev;\n\n        }, []);\n\n        let area = d3.area();\n        area.y0(worstPoint[1])\n        dominatedRegionContainer.selectOrInsert(\"path.\" + this.prefixClass('dominated-region'))\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .attr(\"fill\", \"gray\")\n            .attr(\"stroke-width\", 0)\n            .attr(\"d\", area(this.dominatedRegionPoints));\n\n        Tooltip.attach(dominatedRegionContainer, i18n.t('leagueTable.plot.tooltip.dominatedRegion'));\n    }\n\n    updateDotLabels() {\n        var self = this;\n        var labelsContainerClass = this.prefixClass(\"dot-labels-container\");\n        var labelsContainerSelector = \"g.\" + labelsContainerClass;\n        var labelsContainer = self.svgG.selectOrAppend(labelsContainerSelector, \".\" + self.dotsContainerClass);\n\n        var labels = labelsContainer.selectAll(\"text.\" + this.prefixClass(\"dot-label\")).data(this.plot.data);\n        labels.exit().remove();\n        labels.enter().append('text')\n            .attr('class', this.prefixClass(\"dot-label\"))\n            .merge(labels)\n            .attr('x', this.plot.x.map)\n            .attr('y', this.plot.y.map)\n            .attr('text-anchor', 'end')\n            .attr(\"dy\", \"-5px\")\n            .attr(\"dx\", \"-5px\")\n            .text(d=>d.id)\n    }\n\n    updateGradientArrows() {\n\n        var data = this.config.payoffCoeffs.map((coeff, i)=>{\n\n            let l = this.config.gradientArrowLength * coeff;\n            let offset = this.config.gradientArrowOffset * coeff;\n\n            let d = {\n                x1: this.plot.width/2,\n                y1: this.plot.height/2,\n            };\n\n            if(i==0){\n                d.x1 += offset;\n                d.x2 = d.x1 + l;\n                d.y2 = d.y1\n            }else{\n                d.y1 -= offset;\n                d.x2 = d.x1;\n                d.y2 = d.y1 - l\n            }\n\n            return d\n        });\n\n        let self = this;\n        var arrowsContainerClass = this.prefixClass(\"gradient-arrows-container\");\n        var arrowsContainerSelector = \"g.\" + arrowsContainerClass;\n        var arrowsContainer = self.svgG.selectOrInsert(arrowsContainerSelector, \".\" + self.dotsContainerClass);\n\n        let arrowClass = this.prefixClass(\"gradient-arrow\");\n        var arrows = arrowsContainer.selectAll(\".\"+arrowClass).data(data);\n        arrows.exit().remove();\n        var arrowsEnter = arrows.enter().append('g')\n            .attr('class', arrowClass);\n\n        arrowsEnter.append(\"line\").attr(\"marker-end\", \"url(#triangle)\");\n        var arrowsMerge =arrowsEnter.merge(arrows);\n\n        arrowsMerge.select(\"line\")\n            .attr(\"x1\", d=>d.x1)\n            .attr(\"y1\", d=>d.y1)\n            .attr(\"x2\", d=>d.x2)\n            .attr(\"y2\", d=>d.y2);\n\n        Tooltip.attach(arrowsMerge, (d, i)=>{\n            return i18n.t('leagueTable.plot.tooltip.gradientArrow' + (i + 1), { name: this.config.payoffNames[i]});\n        });\n    }\n\n    emphasize(row, emphasize=true){\n        this.emphasizeDot(this.svg.selectAll('#'+this.config.dotId(row)), emphasize);\n    }\n\n    emphasizeDot(selection, emphasize){\n        selection\n            .classed('sd-emphasized', emphasize)\n            .transition()\n            .attr('r', emphasize ? this.config.emphasizedDotRadius : this.config.dotRadius)\n    }\n    updateDots(){\n        var self = this;\n        super.updateDots();\n        var dotsContainer = this.svgG.select(\"g.\" + this.dotsContainerClass);\n        dotsContainer.selectAll('.' + this.dotClass)\n            .on(\"mouseover.emphasize\", function(d){ self.emphasizeDot(d3.select(this), true) })\n            .on(\"mouseout.emphasize\", function(d){ self.emphasizeDot(d3.select(this), false) })\n    }\n\n    updateLegend() {\n        super.updateLegend();\n        var plot = this.plot;\n\n        let container = plot.legend.container.selectOrAppend(\"g.sd-additional-items\")\n        let legendCells = plot.legend.container.select(\".legendCells\");\n        let margin = 20;\n\n        let texts = [\n            i18n.t(\"leagueTable.plot.legend.dominatedRegion\"),\n            i18n.t(\"leagueTable.plot.legend.gradientArrows\")\n        ];\n\n        container.attr(\"transform\", \"translate(0, \"+(legendCells.node().getBBox().height+margin)+\")\");\n\n        container.selectAll(\"text\").data(texts)\n            .enter().append(\"text\")\n            .text(d=>d)\n            .attr('dy', \"0\")\n            .attr('x', \"0\");\n\n        container.selectAll(\"text\").call(wrap, d=>d, this.config.legend.width);\n\n        function wrap(text, getTextData, width) {\n            text.each(function(d) {\n\n                var text = d3.select(this),\n                    words = getTextData(d).split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineNumber = 0,\n                    lineHeight = 1.1, // ems\n                    y = text.attr('y'),\n                    dy = parseFloat(text.attr('dy')),\n                    tspan = text.text(null).append('tspan')\n                        .attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n\n                if(this.previousSibling){\n                    text.attr('y', this.previousSibling.getBBox().height+10)\n                }\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n                        line = [word];\n                        tspan = text.append('tspan')\n                            .attr('x', 0).attr('y', y)\n                            .attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                    }\n                }\n            });\n        }\n    }\n\n\n}\n","import {Utils} from \"sd-utils\";\nimport * as d3 from \"../d3\";\nimport {Policy} from \"sd-computations/src/policies/policy\";\nimport {i18n} from \"../i18n/i18n\";\n\nexport class LeagueTableConfig {\n    onRowSelected = (row) => {\n    };\n    extendedPolicyDescription = true;\n    onRowHover = (d, i) => {};\n    onRowHoverOut = (d, i) => {};\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class LeagueTable {\n\n    constructor(container, config, dataModel) {\n        this.container = container;\n        this.config = new LeagueTableConfig(config);\n        this.dataModel = dataModel;\n        this.init();\n    }\n\n    init() {\n        this.resultTable = this.container.selectOrAppend(\"table.sd-league-table\");\n        this.resultTableHead = this.resultTable.selectOrAppend(\"thead\");\n        this.resultTableBody = this.resultTable.selectOrAppend(\"tbody\");\n        this.resultTableFoot = this.resultTable.selectOrAppend(\"tfoot\");\n    }\n\n    setData(jobResult, dataModel) {\n        this.jobResult = jobResult;\n        this.dataModel = dataModel;\n        this.drawHeaders([\n            i18n.t('leagueTable.headers.policyNo'),\n            i18n.t('leagueTable.headers.policy'),\n            dataModel.payoffNames[0],\n            dataModel.payoffNames[1],\n            i18n.t('leagueTable.headers.comment')\n        ]);\n        this.drawRows(jobResult.rows)\n    }\n\n    drawHeaders(headerData) {\n        var headers = this.resultTableHead.selectOrAppend(\"tr\").selectAll(\"th\").data(headerData);\n        var headersEnter = headers.enter().append(\"th\");\n        var headersMerge = headersEnter.merge(headers);\n        headers.exit().remove();\n\n        headersMerge.text(d=>d);\n    }\n\n    drawRows(rowsData) {\n        var self = this;\n\n        let data = rowsData.reduce((prev, d)=> {\n            let r = prev;\n            d.policies.forEach((policy, i)=> {\n                if (!i) {\n                    r.push({\n                        row: d,\n                        policy: policy,\n                        cells: [\n                            {\n                                data: d.id,\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                                rowspan: 1\n                            },\n                            {\n                                data: d.payoffs[0],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: d.payoffs[1],\n                                rowspan: d.policies.length\n                            },\n                            {\n                                data: this.getRowComment(d),\n                                rowspan: d.policies.length\n                            },\n                        ]\n                    });\n                    return;\n                }\n\n                r.push({\n                    row: d,\n                    policy: policy,\n                    cells: [{\n                        data: Policy.toPolicyString(policy, this.config.extendedPolicyDescription),\n                        rowspan: 1\n                    }]\n                });\n\n            });\n\n            return r;\n        }, []);\n\n        var rows = this.resultTableBody.selectAll(\"tr\").data(data);\n\n        var rowsEnter = rows.enter().append(\"tr\");\n        var rowsMerge = rowsEnter.merge(rows);\n        rowsMerge\n            .on('click', function (d, i) {\n                // d3.select(this).classed('sd-selected', true);\n                self.config.onRowSelected(d, i)\n            })\n            .classed('sd-highlighted', d=>d.row.optimal)\n            .classed('sd-highlighted-default', d=>d.row.optimalForDefaultWeight)\n            .attr('id', d => 'sd-league-table-row-'+d.row.id);\n\n        rowsMerge.on(\"mouseover.onRowHover\", this.config.onRowHover);\n        rowsMerge.on(\"mouseout.onRowHoverOut\", this.config.onRowHoverOut);\n\n        rows.exit().remove();\n\n        var cells = rowsMerge.selectAll(\"td\").data(d=>d.cells);\n        var cellsEnter = cells.enter().append(\"td\");\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.text(d=>d.data);\n        cellsMerge.attr('rowspan', d=>d.rowspan);\n        cells.exit().remove();\n\n    }\n\n    clear() {\n        this.clearSelection();\n    }\n\n    show(show = true) {\n        this.container.classed('sd-hidden', !show);\n    }\n\n    hide() {\n        this.show(false);\n    }\n\n    clearSelection() {\n        this.resultTable.selectAll('.sd-selected').classed('sd-selected', false);\n    }\n\n    getRowComment(row) {\n        if(row.incratio !== null){\n            return i18n.t('leagueTable.comment.incratio', {incratio: row.incratio});\n        }\n        if(row.dominatedBy !== null){\n            return i18n.t('leagueTable.comment.dominatedBy', {policy: row.dominatedBy});\n        }\n        if(row.extendedDominatedBy !== null){\n            return i18n.t('leagueTable.comment.extendedDominatedBy', {policy1: row.extendedDominatedBy[0], policy2: row.extendedDominatedBy[1]});\n        }\n        return '';\n    }\n\n\n    emphasize(row, emphasize=true){\n        this.resultTableBody.selectAll('#sd-league-table-row-'+row.id).classed('sd-emphasized', emphasize);\n    }\n}\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\n\nimport {Utils} from 'sd-utils'\nimport {Templates} from \"./templates\";\n\nexport class LoadingIndicator{\n    static show(message=''){\n        var html = Templates.get('loadingIndicator');\n\n        var g = d3.select('body').selectOrAppend('div.sd-loading-indicator-container').html(html).select('.sd-loading-indicator').classed('visible', true).style('display', 'block')\n    }\n\n    static hide(){\n        let select = d3.select('.sd-loading-indicator');\n        select.classed('visible', false);\n        setTimeout(function(){\n            select.style('display', 'none')\n        }, 500)\n\n    }\n}\n","import {Utils, log} from 'sd-utils';\nimport {i18n} from \"./i18n/i18n\";\nvar jQuery;\nif(Utils.getGlobalObject().jQuery){\n    jQuery = Utils.getGlobalObject().jQuery;\n    log.info(\"Using global jquery object\")\n}else{\n    jQuery = require('jquery');\n    Utils.getGlobalObject().jQuery = jQuery; //FIXME\n}\n\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/sortable');\nrequire('pivottable');\n\n\n// pivot show zero hack start\nvar numberFormat = jQuery.pivotUtilities.numberFormat;\ntry{\n    jQuery.pivotUtilities.numberFormat = function(opts){\n        if(!opts){\n            opts = {};\n        }\n        opts.showZero = true;\n        return numberFormat(opts);\n    };\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting');\n\n    try{\n        jQuery.pivotUtilities.numberFormat = numberFormat;\n    }catch (e){\n\n    }\n}\n\nrequire('pivottable/dist/pivot.it');\nrequire('pivottable/dist/pivot.de');\nrequire('pivottable/dist/pivot.fr');\nrequire('pivottable/dist/pivot.pl');\n\n// pivot show zero hack continuation\ntry{\n    var origAggregators = {};\n    Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n        origAggregators[key] = value;\n        object[key] = function(){\n            var args1 = arguments;\n            try{\n                let res1 = value.apply(this, args1);\n                return function(){\n                    var res = res1(...arguments);\n                    var format_ = res.format;\n                    res.format = function(x){\n                        var origX = x;\n                        if(x===0){\n                            x =  \"0\";\n                        }\n                        try{\n                            return format_(x);\n                        }catch (e){\n                            log.error('Error when performing pivottable \"show zero\" hack (format func call), reverting', e);\n                            if(format_){\n                                return format_(origX);\n                            }\n                            revertAggregators();\n                        }\n                    };\n                    return res;\n                };\n            }catch(e){\n                log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n                revertAggregators();\n                return origAggregators[key](...args1)\n            }\n        }\n    });\n}catch (e){\n    log.error('Error when performing pivottable \"show zero\" hack, reverting', e);\n    revertAggregators();\n}\n\nfunction revertAggregators(){\n    try {\n        Utils.forOwn(jQuery.pivotUtilities.locales.en.aggregators, (value, key, object)=>{\n            let origAggregator = origAggregators[key];\n            if(origAggregator){\n                object[key] = origAggregator\n            }\n\n        });\n    }catch(e){\n        log.error('Error when reverting aggregators', e)\n    }\n}\n\n///////////////////// hack end\n\nexport class PivotTable{\n\n    container;\n\n\n    constructor(container, options, data){\n        this.container =container;\n        this.options = options;\n        this.data=data;\n        if(data){\n            this.update(data, options);\n        }\n    }\n\n    update(data, options){\n        this.data = data;\n        this.options = options;\n        jQuery(this.container.node()).pivotUI(data, options, true, i18n.language)\n    }\n\n    clear(){\n        jQuery(this.container.node()).pivotUI([], null, true)\n    }\n\n\n\n    getAggregatorName(name){\n        return i18n.t(\"jobResultTable.pivot.aggregators.\"+name.toLowerCase());\n    }\n\n    getRendererName(name){\n        return i18n.t(\"jobResultTable.pivot.renderers.\"+name.toLowerCase());\n    }\n}\n","import * as d3 from \"./d3\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {PayoffInputValidator} from \"./validation/payoff-input-validator\";\nimport {ProbabilityInputValidator} from \"./validation/probability-input-validator\";\nimport {Templates} from \"./templates\";\nimport {Tooltip} from \"sd-tree-designer\";\nimport {InputField} from \"./form/input-field\";\nimport {PathValueAccessor} from \"./form/path-value-accessor\";\nimport {NumberInputValidator} from \"./validation/number-input-validator\";\nimport {RequiredInputValidator} from \"./validation/required-input-validator\";\nimport {McdmWeightValueValidator} from \"sd-computations/src/validation/mcdm-weight-value-validator\";\n\nexport class Sidebar {\n\n    app;\n    container;\n    dispatch = d3.dispatch(\"recomputed\", \"object-updated\", \"multi-criteria-updated\");\n\n\n    constructor(container, app) {\n        this.app = app;\n        this.container = container;\n\n        this.initLayoutOptions();\n        this.initDiagramDetails();\n        this.initDefinitions();\n        this.initMultipleCriteria();\n        var self = this;\n\n        document.addEventListener('SilverDecisionsRecomputedEvent', function (data) {\n            if (data.detail === app) {\n                self.dispatch.call(\"recomputed\");\n            }\n        });\n\n        self.dispatch.on(\"object-updated\", Utils.debounce((object, fieldName)=> self.app.onObjectUpdated(object, fieldName), 350));\n        self.dispatch.on(\"multi-criteria-updated\", Utils.debounce((fieldName)=> self.app.onMultiCriteriaUpdated(fieldName), 350));\n\n    }\n\n    initLayoutOptions() {\n        var self = this;\n        this.layoutOptionsContainer = this.container.select('#layout-options');\n        this.autoLayoutOptionsGroup = this.layoutOptionsContainer.select('#auto-layout-options');\n        this.gridWidth = this.layoutOptionsContainer.select('input#grid-width').on('change', function () {\n            self.app.treeDesigner.layout.setGridWidth(parseInt(this.value));\n\n        });\n\n        this.gridHeight = this.layoutOptionsContainer.select('input#grid-height').on('change', function () {\n            self.app.treeDesigner.layout.setGridHeight(parseInt(this.value));\n        });\n\n        this.nodeSize = this.layoutOptionsContainer.select('input#node-size').on('change', function () {\n            self.app.treeDesigner.layout.setNodeSize(parseInt(this.value));\n        });\n\n        this.edgeSlantWidthMax = this.layoutOptionsContainer.select('input#edge-slant-width-max').on('change', function () {\n            self.app.treeDesigner.layout.setEdgeSlantWidthMax(parseInt(this.value));\n        });\n\n        this.marginHorizontal = this.layoutOptionsContainer.select('input#margin-horizontal').on('change', function () {\n            var m = {};\n            m.left = m.right = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n        this.marginVertical = this.layoutOptionsContainer.select('input#margin-vertical').on('change', function () {\n            var m = {};\n            m.top = m.bottom = parseInt(this.value);\n            self.app.treeDesigner.setMargin(m);\n        });\n\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.updateLayoutOptions());\n\n        this.layoutOptionsContainer.select('.toggle-button').on('click', () => {\n            this.layoutOptionsContainer.classed('sd-extended', !this.layoutOptionsContainer.classed('sd-extended'));\n        });\n\n        this.updateLayoutOptions();\n    }\n\n    updateLayoutOptions() {\n        this.nodeSize.node().value = this.app.treeDesigner.config.layout.nodeSize;\n        this.edgeSlantWidthMax.node().value = this.app.treeDesigner.config.layout.edgeSlantWidthMax;\n        this.marginHorizontal.node().value = this.app.treeDesigner.config.margin.left;\n        this.marginVertical.node().value = this.app.treeDesigner.config.margin.top;\n        this.gridWidth.node().value = this.app.treeDesigner.config.layout.gridWidth;\n        this.gridHeight.node().value = this.app.treeDesigner.config.layout.gridHeight;\n        this.autoLayoutOptionsGroup.classed('visible', !this.app.treeDesigner.layout.isManualLayout());\n    }\n\n    initDiagramDetails() {\n        var self = this;\n        this.diagramDetailsContainer = this.container.select('#diagram-details-box');\n        this.diagramDetailsContainer.classed('sd-hidden', !this.app.config.showDetails);\n\n        this.diagramDetailsContainer.select('.toggle-button').on('click', () => {\n            this.diagramDetailsContainer.classed('sd-extended', !this.diagramDetailsContainer.classed('sd-extended'));\n            this.updateDiagramDetails();\n        });\n\n        this.diagramTitle = this.diagramDetailsContainer.select('input#diagram-title').on('change', function () {\n            self.app.setDiagramTitle(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n\n        this.diagramDescription = this.diagramDetailsContainer.select('textarea#diagram-description').on('change', function () {\n            self.app.setDiagramDescription(this.value);\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        AppUtils.elasticTextarea(this.diagramDescription);\n\n        this.updateDiagramDetails();\n    }\n\n    initDefinitions() {\n        var self = this;\n        this.definitionsContainer = this.container.select('#sd-sidebar-definitions');\n        this.definitionsContainer.classed('sd-hidden', !this.app.config.showDefinitions);\n        this.onDefinitionsCodeChanged = null;\n        this.definitionsContainer.select('.toggle-button').on('click', () => {\n            this.definitionsContainer.classed('sd-extended', !this.definitionsContainer.classed('sd-extended'));\n            AppUtils.updateInputClass(this.definitionsCode);\n            AppUtils.autoResizeTextarea(this.definitionsCode.node())\n        });\n\n        this.definitionsScopeLabel = this.definitionsContainer.select('.sd-variables-scope-value');\n\n        this.definitionsCode = this.definitionsContainer.select('textarea#sd-sidebar-definitions-code').on('change', function () {\n            if (self.onDefinitionsCodeChanged) {\n                self.onDefinitionsCodeChanged(this.value)\n            }\n            AppUtils.updateInputClass(d3.select(this));\n        });\n        Tooltip.attach(this.definitionsCode, (d)=>{\n            return self.definitionsCode.attr('data-error-msg');\n\n        }, 15, 50);\n\n\n        this.definitionsEvaluatedValuesContainer = this.container.select(\"#sd-sidebar-definitions-evaluated-values\");\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-open-dialog-button').on('click', () => {\n            this.app.openDefinitionsDialog();\n        });\n\n        this.definitionsContainer.select('#sd-sidebar-definitions-recalculate-button').on('click', () => {\n            this.app.recompute();\n        });\n\n        AppUtils.elasticTextarea(this.definitionsCode);\n    }\n\n    initMultipleCriteria() {\n        var self = this;\n        this.multipleCriteriaContainer = this.container.select('#sd-multiple-criteria');\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        this.multipleCriteriaContainer.select('.toggle-button').on('click', () => {\n            this.multipleCriteriaContainer.classed('sd-extended', !this.multipleCriteriaContainer.classed('sd-extended'));\n        });\n\n\n        this.showLeagueTableButton = this.multipleCriteriaContainer.select('#sd-show-league-table-button').on('click', () => {\n            this.app.showLeagueTable();\n        });\n\n        this.flipCriteriaButton = this.multipleCriteriaContainer.select('#sd-flip-criteria-button').on('click', () => {\n            this.app.flipCriteria();\n        });\n\n         let weightParser = (w) => {\n             return parseFloat(w) === Infinity ? Infinity : w;\n        };\n\n\n\n        this.multipleCriteriaFields = [];\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion1', 'nameOfCriterion1', 'text', i18n.t('multipleCriteria.nameOfCriterion1'), new PathValueAccessor(self.app.dataModel, 'payoffNames[0]'), new RequiredInputValidator()));\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-nameOfCriterion2', 'nameOfCriterion2', 'text', i18n.t('multipleCriteria.nameOfCriterion2'), new PathValueAccessor(self.app.dataModel, 'payoffNames[1]'), new RequiredInputValidator()));\n        let lowerBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightLowerBound');\n        let upperBoundValueAccessor = new PathValueAccessor(self.app.dataModel, 'weightUpperBound');\n        let weightValueValidator = new McdmWeightValueValidator();\n        var ee = this.app.expressionEngine.constructor;\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightLowerBound', 'weightLowerBound', 'text', i18n.t('multipleCriteria.weightLowerBound'), lowerBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                return weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-defaultCriterion1Weight', 'defaultCriterion1Weight', 'text', i18n.t('multipleCriteria.defaultCriterion1Weight'),\n            new PathValueAccessor(self.app.dataModel, 'defaultCriterion1Weight'),\n            new McdmWeightValueValidator(v => {\n                let upper = upperBoundValueAccessor.get();\n                let lower = lowerBoundValueAccessor.get();\n                return (weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true) && (weightValueValidator.validate(upper) ? ee.compare(v, upper) <= 0 : true)\n            }), null, weightParser));\n\n        this.multipleCriteriaFields.push(new InputField('sd-multiple-criteria-weightUpperBound', 'weightUpperBound', 'text', i18n.t('multipleCriteria.weightUpperBound'), upperBoundValueAccessor,\n            new McdmWeightValueValidator(v => {\n                let lower = lowerBoundValueAccessor.get();\n                return weightValueValidator.validate(lower) ? ee.compare(v, lower) >= 0 : true\n            }), null, weightParser));\n\n        this.updateMultipleCriteria();\n    }\n\n\n    updateMultipleCriteria(updateInputs = true){ //TODO refactor\n        var ee = this.app.expressionEngine;\n\n        var self = this;\n        var temp = {};\n        this.multipleCriteriaContainer.classed('sd-hidden', !this.app.isMultipleCriteria());\n\n        let leagueTableAvailable = this.app.isLeagueTableAvailable();\n        this.showLeagueTableButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.flipCriteriaButton.attr(\"disabled\", leagueTableAvailable ? undefined : \"disabled\");\n        this.multipleCriteriaContainer.classed('sd-invalid-league-table-params', !leagueTableAvailable);\n\n        if(!updateInputs){\n            return;\n        }\n\n        var inputGroups = this.multipleCriteriaContainer.select(\".sd-multiple-criteria-properties\").selectAll('div.input-group').data(this.multipleCriteriaFields);\n        inputGroups.exit().remove();\n        var inputGroupsEnter = inputGroups.enter().appendSelector('div.input-group').html(d=>d.type=='select'? Templates.get('selectInputGroup', d):Templates.get('inputGroup', d));\n        inputGroupsEnter.merge(inputGroups).select('.sd-input').on('change input', function (d, i) {\n            var prevValue = d.getValue();\n\n            var isValid = !d.validator || d.validator.validate(this.value);\n\n            let selection = d3.select(this);\n            selection.classed('invalid', !isValid);\n            if(d.styleClass){\n                selection.classed(d.styleClass, true);\n            }\n\n            if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                if (d.onChange) {\n                    d.onChange(object, this.value, temp[i].pristineVal);\n                }\n            }\n\n            if((prevValue+\"\")==this.value){\n                return;\n            }\n\n            AppUtils.updateInputClass(selection);\n            d.setValue(d.parse(this.value));\n            self.dispatch.call(\"multi-criteria-updated\", self, d.name);\n\n        })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                let value = d.getValue();\n\n                this.value = value;\n                temp[i] = {};\n                d3.select(this).classed('invalid', d.validator && !d.validator.validate(this.value));\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n    }\n\n    updateDefinitions(definitionsSourceObject, readOnly, changeCallback) {\n        this.definitionsContainer.classed('sd-read-only', readOnly);\n        this.onDefinitionsCodeChanged = changeCallback;\n\n\n        let scopeType = 'global';\n        if (definitionsSourceObject instanceof model.Node) {\n            scopeType = 'node'\n        }\n\n        this.definitionsScopeLabel.text(i18n.t(\"sidebarDefinitions.scope.\"+scopeType));\n\n        this.definitionsCode.node().value = definitionsSourceObject.code;\n        this.definitionsCode.classed('invalid', !!definitionsSourceObject.$codeError);\n        this.definitionsCode.attr('data-error-msg', definitionsSourceObject.$codeError);\n        var html = Templates.get('evaluatedVariables', {scopeVariables: Utils.getVariablesAsList(definitionsSourceObject.expressionScope)});\n        this.definitionsEvaluatedValuesContainer.html(html);\n        AppUtils.updateInputClass(this.definitionsCode);\n        AppUtils.autoResizeTextarea(this.definitionsCode.node())\n    }\n\n    updateDiagramDetails() {\n        this.diagramTitle.node().value = this.app.config.title;\n        AppUtils.updateInputClass(this.diagramTitle);\n        this.diagramDescription.node().value = this.app.config.description;\n        AppUtils.updateInputClass(this.diagramDescription);\n        AppUtils.autoResizeTextarea(this.diagramDescription.node())\n    }\n\n    displayObjectProperties(object) {\n        this.updateObjectPropertiesView(object);\n    }\n\n    hideObjectProperties() {\n\n        this.container.select('#object-properties').classed('visible', false);\n        this.container.selectAll('div.child-object').remove();\n\n    }\n\n    updateObjectPropertiesView(object) {\n        this.dispatch.on(\".recomputed\", null); //remove all callbacks for recomputed event\n        if (!object) {\n            this.hideObjectProperties();\n            return;\n        }\n\n        var objectProps = this.objectProps = this.container.select('#object-properties').classed('visible', true);\n        var headerText = Sidebar.getHeaderTextForObject(object);\n        objectProps.select('.header').html(headerText);\n\n        var fieldList = this.getFieldListForObject(object);\n        this.updateObjectFields(object, fieldList, objectProps.select('.content .main-properties'));\n\n\n        this.updateObjectChildrenProperties(object);\n\n    }\n\n    updateObjectChildrenProperties(object) {\n        var self = this;\n        var childObjects = this.getChildObjectList(object);\n        var objectType = Sidebar.getObjectType(object);\n\n        var childPropsSelector = this.objectProps.select('.content .children-properties');\n\n        childPropsSelector.classed('visible', childObjects.length);\n\n        childPropsSelector.select('.children-properties-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.header'));\n        var childrenContent = childPropsSelector.select('.children-properties-content');\n        var children = childrenContent.selectAll('div.child-object').data(childObjects, (d, i)=> d.id || i);\n        var childrenEnter = children.enter().appendSelector('div.child-object');\n        var childrenMerge = childrenEnter.merge(children);\n\n        childrenMerge.each(updateChildObjectProperties);\n\n        children.exit().remove();\n\n        function updateChildObjectProperties(child, i) {\n            var container = d3.select(this);\n            container.selectOrAppend('div.child-header').text(i18n.t('objectProperties.childrenProperties.' + objectType + '.child.header', {number: i + 1}));\n\n            var fieldList = self.getFieldListForObject(child);\n            self.updateObjectFields(child, fieldList, container.selectOrAppend('div.field-list'))\n        }\n    }\n\n    static getObjectType(object) {\n        if (object instanceof model.Node) {\n            return 'node';\n        }\n        if (object instanceof model.Edge) {\n            return 'edge';\n        }\n        if (object instanceof model.Text) {\n            return 'text';\n        }\n        return '';\n    }\n\n    static getHeaderTextForObject(object) {\n        if (object instanceof model.Node) {\n            return i18n.t('objectProperties.header.node.' + object.type);\n        }\n        if (object instanceof model.Edge) {\n            return i18n.t('objectProperties.header.edge');\n        }\n        if (object instanceof model.Text) {\n            return i18n.t('objectProperties.header.text');\n        }\n        return '';\n    }\n\n    getChildObjectList(object) {\n        if (object instanceof model.Node) {\n            return object.childEdges.sort((a, b)=>a.childNode.location.y - b.childNode.location.y);\n        }\n        if (object instanceof model.Edge) {\n            return [];\n        }\n        return [];\n    }\n\n    getFieldListForObject(object) {\n        var self = this;\n\n        if (object instanceof model.Node) {\n            return [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                })\n            ]\n        }\n        if (object instanceof model.Edge) {\n            let multipleCriteria = this.app.isMultipleCriteria();\n            var list = [\n                new ObjectInputField(object, {\n                    name: 'name',\n                    type: 'textarea'\n                }),\n                new ObjectInputField(object, {\n                    name: 'payoff',\n                    path: 'payoff[' + (self.app.currentViewMode.payoffIndex || 0) + ']',\n                    label: multipleCriteria ? self.app.dataModel.payoffNames[0] : undefined,\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                })\n\n\n            ];\n\n            if(multipleCriteria) {\n                list.push(new ObjectInputField(object, {\n                    name: 'payoff2',\n                    path: 'payoff[1]',\n                    label: self.app.dataModel.payoffNames[1],\n                    type: 'text',\n                    validator: new PayoffInputValidator(self.app.expressionEngine)\n                }));\n            }\n\n            if (object.parentNode instanceof model.ChanceNode) {\n                list.push(new ObjectInputField(object, {\n                    name: 'probability',\n                    type: 'text',\n                    validator: new ProbabilityInputValidator(self.app.expressionEngine)\n                }))\n            }\n            return list;\n\n        }\n        if (object instanceof model.Text) {\n            return [new ObjectInputField(object, {\n                name: 'value',\n                type: 'textarea'\n            })]\n        }\n\n        return [];\n    }\n\n    updateObjectFields(object, fieldList, container) {\n        var self = this;\n\n        var fields = container.selectAll('div.object-field').data(fieldList);\n        var temp = {};\n        var fieldsEnter = fields.enter().appendSelector('div.object-field');\n        var fieldsMerge = fieldsEnter.merge(fields);\n\n        fieldsMerge.each(function (d, i) {\n            var fieldSelection = d3.select(this);\n            fieldSelection.html(\"\");\n\n            var input;\n            if (d.type == 'textarea') {\n                input = fieldSelection.append('textarea').attr('rows', 1);\n            } else {\n                input = fieldSelection.append('input');\n            }\n            input.classed('sd-input', true);\n            input.attr('disabled', object.sourceId ? \"disabled\" : undefined);\n\n            fieldSelection.appendSelector('span.bar');\n            fieldSelection.append('label');\n            fieldSelection.classed('input-group', true);\n        });\n\n        fieldsMerge.select('label')\n            .attr('for', d=>d.id)\n            .html(d=>d.label);\n        fieldsMerge.select('.sd-input')\n            .attr('type', d=>d.type == 'textarea' ? undefined : d.type)\n            .attr('name', d=>d.name)\n            .attr('id', d=>d.id)\n            .on('change keyup', function (d, i) {\n                var prevValue = d.getValue();\n                var isValid = !d.validator || d.validator.validate(this.value, object, d.path);\n                object.setSyntaxValidity(d.path, isValid);\n\n                d3.select(this).classed('invalid', !object.isFieldValid(d.path));\n\n                if (d3.event.type == 'change' && temp[i].pristineVal != this.value) {\n                    self.app.dataModel.saveStateFromSnapshot(temp[i].pristineStateSnapshot);\n                    if (d.onChange) {\n                        d.onChange(object, this.value, temp[i].pristineVal);\n                    }\n                }\n\n                if((prevValue+\"\")==this.value){\n                    return;\n                }\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.customOnInput) {\n                    d.customOnInput(object, this.value, temp[i].pristineVal)\n                } else {\n                    d.setValue(this.value);\n                    self.dispatch.call(\"object-updated\", self, object, d.path);\n                }\n            })\n            .on('focus', function(d,i){\n                temp[i].pristineVal = this.value;\n                temp[i].pristineStateSnapshot = self.app.dataModel.createStateSnapshot();\n            })\n            .each(function (d, i) {\n                this.value = d.getValue();\n                temp[i] = {};\n                if (d.validator && !d.validator.validate(this.value, object, d.path)) {\n                    d3.select(this).classed('invalid', true);\n                    object.setSyntaxValidity(d.path, false);\n                }else{\n                    object.setSyntaxValidity(d.path, true);\n                }\n\n                var _this = this;\n                var checkFieldStatus = () => {\n                    d3.select(_this).classed('invalid', !object.isFieldValid(d.path));\n                };\n                checkFieldStatus();\n\n                self.dispatch.on(\"recomputed.\"+object.id+\".\"+d.path, checkFieldStatus);\n\n                AppUtils.updateInputClass(d3.select(this));\n                if (d.type == 'textarea') {\n                    AppUtils.elasticTextarea(d3.select(this));\n                    AppUtils.autoResizeTextarea(d3.select(this).node())\n                }\n\n            });\n\n        fields.exit().remove();\n    }\n}\n\nclass ObjectInputField extends InputField{\n    //config object with fields: name, path, type, validator, options\n    constructor(object, config) {\n        super('object-' + object.id + '-field-' + config.name, config.name, config.type, config.label ? config.label : i18n.t(Sidebar.getObjectType(object) + '.' + config.name),\n            new PathValueAccessor(object, config.path || config.name), config.validator, config.options);\n        this.path = config.path || config.name;\n        this.onChange = config.onChange;\n    }\n}\n\n","import {Templates as TdTemplates} from \"sd-tree-designer\";\nimport {i18n} from './i18n/i18n'\nimport {Utils, log} from \"sd-utils\";\n\nexport class Templates extends TdTemplates{\n\n    //TODO automate\n    static about_de = require('./templates/about/de.html');\n    static about_en = require('./templates/about/en.html');\n    static about_fr = require('./templates/about/fr.html');\n    static about_it = require('./templates/about/it.html');\n    static about_pl = require('./templates/about/pl.html');\n\n    static toolbar = require('./templates/toolbar.html');\n    static layoutOptions = require('./templates/sidebar/layout_options.html');\n    static objectProperties = require('./templates/sidebar/object_properties.html');\n    static diagramDetailsBox = require('./templates/sidebar/diagram_details_box.html');\n    static evaluatedVariables = require('./templates/evaluated_variables.html');\n    static definitions = require('./templates/sidebar/definitions.html');\n    static multipleCriteria = require('./templates/sidebar/multiple_criteria.html');\n    static sidebar = require('./templates/sidebar/sidebar.html');\n    static settingsDialog = require('./templates/settings_dialog.html');\n    static settingsDialogFormGroup = require('./templates/settings_dialog_form_group.html');\n    static inputGroup = require('./templates/input_group.html');\n    static selectInputGroup = require('./templates/select_input_group.html');\n    static help = require('./templates/help.html');\n    static aboutDialog = require('./templates/about_dialog.html');\n    static definitionsDialog = require('./templates/definitions_dialog.html');\n    static sensitivityAnalysisDialog = require('./templates/sensitivity_analysis_dialog.html');\n    static jobParametersBuilder = require('./templates/jobs/job_parameters_builder.html');\n    static jobParameter = require('./templates/jobs/job_parameter.html');\n    static leagueTableDialog = require('./templates/league_table_dialog.html');\n    static loadingIndicator = require('./templates/loading_indicator.html');\n    static fullscreenPopup = require('./templates/fullscreen_popup.html');\n    static warningMessage = require('./templates/warning_message.html');\n    static main = require('./templates/main.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n}\n\n\n\n\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (gebaut <%= buildTimestamp%>)</strong><br/>Open Source Entscheidungsbaum Software.\\n</p>\\n<p>\\n<strong>Zitierung:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Projektteam:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (Projektleiter)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (Stellvertretender Projektleiter)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (Designer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (Entwickler)</li>\\n        <li>Anna Wiertlewska (Projekt Unterstützung)</li>\\n        <li>Marcin Czupryna (Tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Das Projekt wird von Decision Support and Analysis Division, Warsaw School of Economics entwickelt.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions ist ein gemeinschaftsgetriebenes Projekt. Sollten Sie es für Ihre Untericht, Forschung oder jede andere Aktivität, die Sie mit uns teilen möchten verwenden, wir würden uns freuen, einen Link zu Ihren Aktivitäten zu der <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Gemeinschaft</a> Seite hinzufügen zu können.\\n</p>\\n<p>\\n    Software wird als Teil von <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Projekt entwickelt. Dieses Projekt hat      Mittel aus dem Horizon 2020 (Forschungs- und Innovationsprogramm der Europäischen Union) im Rahmen der Finanzhilfevereinbarung Nr 645860 erhalten. Ziel dieses Projektes ist es, eine transparente Kommunikation zwischen der öffentlichen Verwaltung und den Bürgern über das Thema, öffentliche Daten und Entscheidungsprozesse zu unterstützen. \\n</p>\\n<p>\\n    Alle Quelldateien werden unter den Bedingungen der GNU Lesser General Public License Version 3 lizenziert.\\n</p>\\n<p>\\n    Für weitere Informationen besuchen Sie bitte, unsere Website unter <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>A free and open source decision tree software.\\n</p>\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n<p class=\\\"sd-project-team\\\">\\n    Project team:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (deputy project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentalist)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    The project is developed at Decision Support and Analysis Division, Warsaw School of Economics.<br/>\\n    Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions is a community-driven project, so if you use it for teaching, research or any other activity that you would be willing to share please let us know. We would be glad to add a link to your activities on <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a> page.\\n</p>\\n<p>\\n    Software is developed as a part of <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> Project that has\\n    received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No\\n    645860. Its aim is to allow a transparent communication between public administration and citizens regarding public\\n    data about decision making processes performed by public administration.\\n</p>\\n<p>\\n    All the source files are licensed under the terms of the GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    For more information visit our website at <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>Un logiciel libre et open source pour faire son propre arbre de décision.\\n</p>\\n\\n<p>\\n<strong>Citation:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Equipe du projet:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (chef de projet)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (chef de projet adjoint)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (développeur)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (designer)</li>\\n        <li>Anna Wiertlewska (documentaliste)</li>\\n\\t<li>Marcin Czupryna (testeur)</li>\\n    </ul>\\n</p>\\n<p>\\n    Le projet est conçu et développé par la Division de l'aide à la décision et de l'analyse, à l'École d'économie de Varsovie. <br/>Contact: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    SilverDecisions est un projet communautaire, donc si vous l'utilisez pour l'enseignement, la recherche ou toute autre activité que vous aimeriez partager, \\n    faites-le nous savoir. Nous serions heureux d'ajouter un lien vers vos activités sur le site web de \\n    <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>  \\n    Le logiciel est développé dans le cadre du projet <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a>, \\n    financé par le programme de recherche et d'innovation Horizon 2020 de l'Union Européenne dans le cadre de l'accord de subvention n° 645860. \\n    Son objectif est permettre une communication transparente entre l'administration publique et les citoyens \\n    concernant les données publiques (Open Data) et la prise de décision des administrations.  \\n</p>\\n<p>\\n    Tous les fichiers source sont sous licence GNU Lesser General Public License version 3.\\n</p>\\n<p>\\n    Pour plus d'informations, visitez notre site web à <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (construzione <%= buildTimestamp%>)</strong><br/>\\n    Un Software Open Source Free per gestire alberi di decisione.\\n</p>\\n\\n<p>\\n<strong>Citazione:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Team di progetto:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (project manager)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (vice project manager)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (sviluppo)</li>\\n        <li>Marcin Czupryna (test)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (tester)</li>\\n        <li>Anna Wiertlewska (documentazione)</li>\\n    </ul>\\n</p>\\n<p>\\n    Il progetto è sviluppato presso la Divisione “Supporto alla decisione ed Analisi” della Scuola di Economia dell’Università di Varsavia. <br/>Contatto:\\n    silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\nSilverDecision è un Progetto basato su di una Comunità di sviluppo, se lo utilizzi a scopo di insegnamento, ricerca o altra attività che vorresti rendere nota tienici informati. Saremmo lieti di aggiungere un <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">link</a> alla tua attività.\\n</p>\\n<p>\\n    Il software è sviluppato nell’ambito del progetto <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> \\n    finanziato dal programma di ricerca ed innovazione H2020 dell’ Unione Europea (contratto n. 645860). \\n    Scopo del progetto è quello di permettere una comunicazione trasparente tra Pubblica Amministrazione e cittadini \\n    riguardo ai dati pubblici ed ai processi di decisione portati avanti dalla stessa Pubblica Amministrazione.    \\n</p>\\n<p>\\n    Tutti i codici sorgente sono rilasciati secondo i termini della licenza “GNU Lesser General Public License version 3\\\".\\n</p>\\n<p>\\n    Per maggiori informazioni visita il sito <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\\n\";\n","module.exports = \"<p>\\n    <strong>SilverDecisions <%= version %> (build <%= buildTimestamp%>)</strong><br/>\\n    Oprogramowanie do analizy drzew decyzyjnych typu Free Open Source.\\n</p>\\n\\n<p>\\n<strong>Cytowanie:</strong><br/>\\nB. Kamiński, M. Jakubczyk, P. Szufel: A framework for sensitivity analysis of decision trees, Central European Journal of Operations Research (2017).</br>\\n<a href=\\\"https://link.springer.com/article/10.1007/s10100-017-0479-6\\\" target=\\\"_blank\\\">doi:10.1007/s10100-017-0479-6</a>\\n</p>\\n\\n<p class=\\\"sd-project-team\\\">\\n    Zespół projektowy:\\n    <ul>\\n        <li><a href=\\\"http://bogumilkaminski.pl/\\\" target=\\\"_blank\\\">Bogumił Kamiński</a> (manager projektu)</li>\\n        <li><a href=\\\"https://szufel.pl/\\\" target=\\\"_blank\\\">Przemysław Szufel</a> (zastępca managera projektu)</li>\\n        <li><a href=\\\"https://github.com/mwasiluk\\\" target=\\\"_blank\\\">Michał Wasiluk</a> (developer)</li>\\n        <li><a href=\\\"http://www.michaljakubczyk.pl/\\\" target=\\\"_blank\\\">Michał Jakubczyk</a> (projektant)</li>\\n        <li>Anna Wiertlewska (dokumentalistka)</li>\\n        <li>Marcin Czupryna (tester)</li>\\n    </ul>\\n</p>\\n<p>\\n    Projekt jest realizowany w Zakładzie Wspomagania i Analizy Decyzji w Szkole Głównej Handlowej w Warszawie.<br/>\\n    Kontakt: silverdecisions@sgh.waw.pl\\n</p>\\n<p>\\n    Rozwój SilverDecisions zależy od potrzeb użytkowników. W związku z tym jeśli wykorzystujesz je do nauczania, badań lub innych aktywności, o których zechcesz na powiedzieć prosimy o kontakt. Byłoby nam bardzo miło, jeśli moglibyśmy dodać informację o Twoich aktywnościach na stronie <a href=\\\"https://github.com/SilverDecisions/SilverDecisions/wiki/SilverDecisions-Community\\\" target=\\\"_blank\\\">SilverDecisions Community</a>.\\n</p>\\n<p>\\n<p>\\n    Oprogramowanie jest rozwijane w ramach projektu <a href=\\\"http://routetopa.eu/\\\" target=\\\"_blank\\\">ROUTE-TO-PA</a> (<em>Raising\\n    Open and User-friendly Transparency-Enabling Technologies for Public Administrations</em>),\\n    który jest finansowany ze środków Europejskiego Programu w Zakresie Badań Naukowych i Innowacji Horizon 2020 na\\n    podstawie umowy o dotację nr 645860. Celem projektu ROUTE-TO-PA jest umożliwienie przejrzystej komunikacji pomiędzy\\n    administracją publiczną a mieszkańcami w zakresie publicznych danych dotyczących procesu podejmowania przez\\n    administracje publiczne decyzji.\\n</p>\\n<p>\\n    Wszystkie pliki źródłowe są licencjonowane zgodnie ze słabszą powszechną licencją publiczną GNU (GNU Lesser General Public License version 3).\\n</p>\\n<p>\\n    Więcej informacji można znaleźć na stronie internetowej: <a href=\\\"http://silverdecisions.pl/\\\" target=\\\"_blank\\\">http://silverdecisions.pl/</a>.\\n</p>\\n\";\n","module.exports = \"<div id=\\\"sd-about-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"aboutDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <% if ( [\\\"de\\\", \\\"en\\\", \\\"fr\\\", \\\"it\\\", \\\"pl\\\"].indexOf(lng) !== -1) { %>\\n                <%= include('about_'+lng, variables) %>\\n            <% } else { %>\\n                <%= include('about_en', variables) %>\\n            <% } %>\\n\\n            <%= include('help', variables) %>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-definitions-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"definitionsDialog.title\\\")%>: <span class=\\\"sd-definitions-dialog-scope-label\\\"></span></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"definitions-form\\\">\\n                <div class=\\\"input-group\\\">\\n                    <textarea id=\\\"sd-definitions-dialog-definitions-code\\\" name=\\\"sd-definitions-code\\\"></textarea>\\n                    <span class=\\\"bar\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"evaluated-variables-preview\\\">\\n                <h3><%= i18n.t('definitionsDialog.evaluatedVariables')%>:</h3>\\n                <div id=\\\"sd-definitions-dialog-variable-values\\\"></div>\\n            </div>\\n            <div class=\\\"action-buttons\\\">\\n                <button id=\\\"sd-definitions-dialog-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('definitionsDialog.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<table class=\\\"sd-evaluated-variables\\\">\\n    <% for(i=0; i<scopeVariables.length; ++i) { %>\\n    <tr>\\n        <td><%= scopeVariables[i].key %></td>\\n        <td>=</td>\\n        <td><%= scopeVariables[i].value %></td>\\n    </tr>\\n    <% } %>\\n</table>\\n\";\n","module.exports = \"<div class=\\\"sd-fullscreen-popup\\\">\\n    <div class=\\\"sd-popup-header\\\">\\n        <span class=\\\"sd-close-popup\\\"><i class=\\\"material-icons\\\">close</i></span>\\n        <h2><%= title %></h2>\\n    </div>\\n\\n    <div class=\\\"sd-popup-body\\\">\\n        <%= body %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div>\\n    <h3><%= i18n.t(\\\"help.header\\\")%></h3>\\n    <p>\\n        <%= i18n.t(\\\"help.mouse.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.mouse.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.mouse.list.3\\\")%></li>\\n        </ul>\\n    </p>\\n    <p>\\n        <%= i18n.t(\\\"help.keyboard.header\\\")%>\\n        <ul>\\n            <li><%= i18n.t(\\\"help.keyboard.list.1\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.2\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.3\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.4\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.5\\\")%></li>\\n            <li><%= i18n.t(\\\"help.keyboard.list.6\\\")%></li>\\n        </ul>\\n    </p>\\n    <p><%= i18n.t(\\\"help.docs\\\")%></p>\\n</div>\\n\";\n","module.exports = \"<input id=\\\"<%= id %>\\\" type=\\\"<%= type %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"\\n\";\n","module.exports = \"<div class=\\\"sd-job-parameters-builder\\\">\\n\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-league-table-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"leagueTableDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-league-table-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-league-table-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-league-table-action-buttons\\\">\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('leagueTableDialog.buttons.downloadCsv')%></button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-loading-indicator\\\">\\n    <div></div>\\n    <div class=\\\"sd-spinner\\\" title=\\\"loading...\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"silver-decisions\\\" tabindex=\\\"0\\\">\\n    <%= include('toolbar', variables) %>\\n    <div id=\\\"main-region\\\">\\n        <%= include('sidebar', variables) %>\\n        <div id=\\\"tree-designer-container\\\"></div>\\n    </div>\\n    <input type=\\\"file\\\" style=\\\"display:none\\\" id=\\\"sd-file-input\\\" accept=\\\".json\\\"/>\\n    <%= include('settingsDialog', variables) %>\\n    <%= include('aboutDialog', variables) %>\\n    <%= include('definitionsDialog', variables) %>\\n    <%= include('sensitivityAnalysisDialog', variables) %>\\n    <%= include('leagueTableDialog', variables) %>\\n</div>\\n\";\n","module.exports = \"<select id=\\\"<%= id %>\\\" name=\\\"<%= name %>\\\" class=\\\"sd-input\\\">\\n    <% for(i=0; i<options.length; ++i) { %>\\n    <option value=\\\"<% if (options[i].value !== undefined){ %><%= options[i].value %><%} else { %><%= options[i] %><%}%>\\\"><% if (options[i].label !== undefined){ %><%= options[i].label %><%} else { %><%= options[i] %><%}%></option>\\n    <% } %>\\n</select>\\n<span class=\\\"bar\\\"></span>\\n<label for=\\\"<%= id %>\\\"><%= label %></label>\\n\";\n","module.exports = \"<div class=\\\"sd-modal sd-sensitivity-analysis-dialog\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n\\n            <h2><%= i18n.t(\\\"sensitivityAnalysisDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <div class=\\\"sd-sensitivity-analysis-job-configuration\\\">\\n                <div class=\\\"sd-job-select-input-group input-group\\\"></div>\\n                <%= include('jobParametersBuilder', variables) %>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-warnings\\\">\\n\\n            </div>\\n            <div class=\\\"sd-job-progress-bar-container sd-progress-bar-container sd-hidden\\\"><div class=\\\"sd-progress-bar\\\"></div></div>\\n            <div class=\\\"sd-sensitivity-analysis-job-results sd-hidden\\\">\\n                <div class=\\\"sd-job-result-table-container\\\"></div>\\n                <div class=\\\"sd-job-result-plot-container\\\"></div>\\n            </div>\\n            <div class=\\\"sd-sensitivity-analysis-action-buttons\\\">\\n                <button class=\\\"sd-terminate-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.terminateJob')%></button>\\n                <button class=\\\"sd-stop-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.stopJob')%></button>\\n                <button class=\\\"sd-resume-job-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.resumeJob')%></button>\\n                <button class=\\\"sd-back-button  sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.back')%></button>\\n                <button class=\\\"sd-download-csv-button sd-hidden\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.downloadCsv')%></button>\\n                <button class=\\\"sd-clear-button \\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.clear')%></button>\\n                <button class=\\\"sd-run-job-button\\\"><%= i18n.t('sensitivityAnalysisDialog.buttons.runJob')%></button>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-settings-dialog\\\" class=\\\"sd-modal\\\">\\n    <div class=\\\"sd-modal-content\\\">\\n        <div class=\\\"sd-modal-header\\\">\\n            <span class=\\\"sd-modal-button sd-close-modal\\\"><i class=\\\"material-icons\\\">close</i></span>\\n            <span class=\\\"sd-modal-button sd-extend-modal\\\"><i class=\\\"material-icons\\\">fullscreen</i></span>\\n            <span class=\\\"sd-modal-button sd-shrink-modal\\\"><i class=\\\"material-icons\\\">fullscreen_exit</i></span>\\n            <h2><%= i18n.t(\\\"settingsDialog.title\\\")%></h2>\\n        </div>\\n        <div class=\\\"sd-modal-body\\\">\\n            <form id=\\\"sd-settings-form\\\">\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"header\\\">\\n    <h4><%= i18n.t(\\\"settingsDialog.\\\"+name+\\\".title\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </h4>\\n</div>\\n<div class=\\\"sd-form-group-content\\\">\\n    <div class=\\\"sd-form-group-inputs\\\"></div>\\n    <div class=\\\"sd-form-group-child-groups\\\"></div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar-definitions\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"sidebarDefinitions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-variables-scope\\\">\\n            <div class=\\\"sd-variables-scope-label\\\"><%= i18n.t('sidebarDefinitions.scope.label')%></div>\\n            <div class=\\\"sd-variables-scope-value\\\"></div>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea rows=\\\"1\\\" id=\\\"sd-sidebar-definitions-code\\\" type=\\\"text\\\" name=\\\"sidebar-definitions-code\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"sd-sidebar-definitions-code\\\"><%= i18n.t(\\\"sidebarDefinitions.code\\\") %></label>\\n        </div>\\n        <div class=\\\"evaluated-variables-preview\\\">\\n            <div class=\\\"evaluated-variables-preview-header\\\">\\n                <%= i18n.t('sidebarDefinitions.evaluatedVariables')%>\\n            </div>\\n            <div id=\\\"sd-sidebar-definitions-evaluated-values\\\"></div>\\n        </div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-sidebar-definitions-open-dialog-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.openDialog')%>\\\"><i class=\\\"material-icons\\\">open_in_new</i></button>\\n            <button id=\\\"sd-sidebar-definitions-recalculate-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('sidebarDefinitions.buttons.recalculate')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"diagram-details-box\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"diagramDetails.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"diagram-title\\\" type=\\\"text\\\" name=\\\"diagram-title\\\">\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-title\\\"><%= i18n.t(\\\"diagramDetails.title\\\") %></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <textarea id=\\\"diagram-description\\\" name=\\\"diagram-description\\\"></textarea>\\n            <span class=\\\"bar\\\"></span>\\n            <label for=\\\"diagram-description\\\"><%= i18n.t(\\\"diagramDetails.description\\\") %></label>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"layout-options\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"layoutOptions.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-horizontal\\\" name=\\\"margin-horizontal\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-horizontal\\\"><%= i18n.t(\\\"layoutOptions.marginHorizontal\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"margin-vertical\\\" name=\\\"margin-vertical\\\" type=\\\"range\\\" min=\\\"5\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"margin-vertical\\\"><%= i18n.t(\\\"layoutOptions.marginVertical\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"node-size\\\" name=\\\"node-size\\\" type=\\\"range\\\" min=\\\"20\\\" max=\\\"60\\\" step=\\\"5\\\"/>\\n            <label for=\\\"node-size\\\"><%= i18n.t(\\\"layoutOptions.nodeSize\\\")%></label>\\n        </div>\\n        <div class=\\\"input-group\\\">\\n            <input id=\\\"edge-slant-width-max\\\" name=\\\"edge-slant-width-max\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n            <label for=\\\"edge-slant-width-max\\\"><%= i18n.t(\\\"layoutOptions.edgeSlantWidthMax\\\")%></label>\\n        </div>\\n        <div id=\\\"auto-layout-options\\\">\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-width\\\" name=\\\"grid-width\\\" type=\\\"range\\\" min=\\\"105\\\" max=\\\"300\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-width\\\"><%= i18n.t(\\\"layoutOptions.gridWidth\\\")%></label>\\n            </div>\\n            <div class=\\\"input-group\\\">\\n                <input id=\\\"grid-height\\\" name=\\\"grid-height\\\" type=\\\"range\\\" min=\\\"55\\\" max=\\\"150\\\" step=\\\"5\\\"/>\\n                <label for=\\\"grid-height\\\"><%= i18n.t(\\\"layoutOptions.gridHeight\\\")%></label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-multiple-criteria\\\">\\n    <div class=\\\"header\\\">\\n        <%= i18n.t(\\\"multipleCriteria.header\\\")%>\\n        <span class=\\\"toggle-button\\\">\\n            <i class=\\\"material-icons icon-arrow-up\\\">keyboard_arrow_up</i>\\n            <i class=\\\"material-icons icon-arrow-down\\\">keyboard_arrow_down</i>\\n        </span>\\n    </div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"sd-multiple-criteria-properties\\\"></div>\\n        <div class=\\\"sd-action-buttons\\\">\\n            <button id=\\\"sd-show-league-table-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.showLeagueTable')%>\\\"><i class=\\\"material-icons\\\">assignment</i></button>\\n            <button id=\\\"sd-flip-criteria-button\\\" class=\\\"icon-button\\\"  title=\\\"<%= i18n.t('multipleCriteria.buttons.flip')%>\\\"><i class=\\\"material-icons\\\">swap_vert</i></button>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"object-properties\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"content\\\">\\n        <div class=\\\"main-properties\\\"></div>\\n        <div class=\\\"children-properties\\\">\\n            <div class=\\\"children-properties-header\\\"></div>\\n            <div class=\\\"children-properties-content\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-sidebar\\\">\\n    <div id=\\\"sd-sidebar-inner\\\">\\n        <%= include('layoutOptions', variables) %>\\n        <%= include('diagramDetailsBox', variables) %>\\n        <%= include('definitions', variables) %>\\n        <%= include('multipleCriteria', variables) %>\\n        <%= include('objectProperties', variables) %>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div id=\\\"sd-toolbar\\\">\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"new-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.newDiagram')%>\\\"><i class=\\\"material-icons\\\">insert_drive_file</i></button>\\n        <button id=\\\"open-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.openDiagram')%>\\\"><i class=\\\"material-icons\\\">folder_open</i></button>\\n        <button id=\\\"save-diagram-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.saveDiagram')%>\\\"><i class=\\\"material-icons\\\">save</i></button>\\n    </div>\\n    <div id=\\\"export-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.export.label\\\")%></label>\\n        <button id=\\\"saveButton\\\"><%= i18n.t(\\\"toolbar.export.png\\\")%></button>\\n        <button id=\\\"saveButtonSvg\\\"><%= i18n.t(\\\"toolbar.export.svg\\\")%></button>\\n        <button id=\\\"saveButtonPdf\\\"><%= i18n.t(\\\"toolbar.export.pdf\\\")%></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <label><%= i18n.t(\\\"toolbar.layout.label\\\")%></label>\\n        <button id=\\\"manualLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.manual\\\")%></button>\\n        <button id=\\\"treeAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.tree\\\")%></button>\\n        <button id=\\\"clusterAutoLayoutButton\\\"><%= i18n.t(\\\"toolbar.layout.cluster\\\")%></button>\\n    </div>\\n    <div id=\\\"view-mode-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"view-mode-select\\\"><%= i18n.t(\\\"toolbar.viewMode.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"view-mode-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div id=\\\"objective-rule-toolbar-group\\\" class=\\\"toolbar-group\\\">\\n        <label for=\\\"objective-rule-select\\\"><%= i18n.t(\\\"toolbar.objectiveRule.label\\\")%></label>\\n        <div class=\\\"input-group no-floating-label\\\" style=\\\"display: inline-block\\\">\\n            <select id=\\\"objective-rule-select\\\"></select>\\n            <span class=\\\"bar\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"undoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.undo')%>\\\"><i class=\\\"material-icons\\\">undo</i></button>\\n        <button id=\\\"redoButton\\\" class=\\\"icon-button\\\" disabled=\\\"disabled\\\" title=\\\"<%= i18n.t('toolbar.redo')%>\\\"><i class=\\\"material-icons\\\">redo</i></button>\\n    </div>\\n    <div class=\\\"toolbar-group\\\">\\n        <button id=\\\"sensitivity-analysis-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.sensitivityAnalysis')%>\\\"><i class=\\\"material-icons\\\">assessment</i></button>\\n        <button id=\\\"recompute-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.recompute')%>\\\"><i class=\\\"material-icons\\\">refresh</i></button>\\n        <button id=\\\"settings-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.settings')%>\\\"><i class=\\\"material-icons\\\">settings</i></button>\\n        <button id=\\\"about-button\\\" class=\\\"icon-button\\\" title=\\\"<%= i18n.t('toolbar.about')%>\\\"><i class=\\\"material-icons\\\">info_outline</i></button>\\n    </div>\\n</div>\\n\";\n","module.exports = \"<div class=\\\"sd-warning-message\\\">\\n    <i class=\\\"material-icons sd-icon\\\">warning</i>\\n    <div class=\\\"sd-warning-message-text\\\">\\n       <%= message %>\\n    </div>\\n</div>\\n\";\n","import * as d3 from './d3'\nimport {i18n} from './i18n/i18n'\nimport {AppUtils} from './app-utils'\nimport {Exporter} from './exporter'\nimport {FileLoader} from './file-loader'\n\nexport class Toolbar{\n\n    app;\n    container;\n    hiddenClass = 'sd-hidden';\n    constructor(container, app){\n        this.app = app;\n        this.container = container;\n        this.initDiagramButtons();\n        this.initExportToolbarGroup();\n        this.initLayoutButtons();\n        this.initUndoRedoButtons();\n        this.initSettingsButton();\n        this.initAboutButton();\n        this.initSensitivityAnalysisButton();\n        this.initRecomputeButton();\n        this.initViewModeToolbarGroup();\n        this.initObjectiveRuleToolbarGroup();\n    }\n\n    initDiagramButtons(){\n\n\n        this.newDiagramButton = this.container.select('#new-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.newDiagram'))){\n                return;\n            }\n            this.app.newDiagram();\n        });\n        this.newDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.new);\n        this.openDiagramButton = this.container.select('#open-diagram-button').on('click', ()=>{\n            if(!confirm(i18n.t('confirm.openDiagram'))){\n                return;\n            }\n            FileLoader.openFile(model=>{\n                this.app.openDiagram(model);\n            });\n\n\n        });\n        this.openDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.open);\n        this.saveDiagramButton = this.container.select('#save-diagram-button').on('click', ()=>{\n            this.app.saveToFile();\n        });\n        this.saveDiagramButton.classed(this.hiddenClass, !this.app.config.buttons.save);\n    }\n\n\n\n    initLayoutButtons() {\n        var self = this;\n        self.app.treeDesigner.layout.onAutoLayoutChanged.push((layout)=>self.onLayoutChanged(layout));\n        this.layoutButtons={};\n        this.layoutButtons['manual'] = this.container.select('#manualLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='manual'){\n                return;\n            }\n            self.app.treeDesigner.layout.disableAutoLayout();\n        });\n        this.layoutButtons['tree'] = this.container.select('#treeAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='tree'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('tree');\n        });\n        this.layoutButtons['cluster'] = this.container.select('#clusterAutoLayoutButton').on('click', function () {\n            if(self.app.treeDesigner.config.layout.type=='cluster'){\n                return;\n            }\n            self.app.treeDesigner.autoLayout('cluster');\n        });\n\n        this.updateLayoutButtons();\n    }\n\n    updateLayoutButtons() {\n        this.onLayoutChanged(this.app.treeDesigner.config.layout.type)\n    }\n\n    initSettingsButton(){\n        this.settingsButton = this.container.select('#settings-button').on('click', ()=>{\n            this.app.settingsDialog.open();\n        });\n    }\n\n    initAboutButton(){\n        this.aboutButton = this.container.select('#about-button').on('click', ()=>{\n            this.app.aboutDialog.open();\n        });\n    }\n\n    initRecomputeButton(){\n        this.recomputeButton = this.container.select('#recompute-button').on('click', ()=>{\n            this.app.recompute();\n        });\n    }\n\n    initSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton = this.container.select('#sensitivity-analysis-button').on('click', ()=>{\n            this.app.openSensitivityAnalysis();\n        });\n    }\n\n    updateSensitivityAnalysisButton(){\n        this.sensitivityAnalysisButton.attr(\"disabled\", this.app.isSensitivityAnalysisAvailable() ? null : 'disabled');\n    }\n\n\n    onLayoutChanged(layout){\n        Object.getOwnPropertyNames(this.layoutButtons).forEach(l=>{\n            this.layoutButtons[l].classed('active', false);\n        });\n        var button = this.layoutButtons[layout];\n        if(button){\n            button.classed('active', true);\n        }\n    }\n\n    initUndoRedoButtons() {\n        var self = this;\n        self.app.dataModel.undoRedoStateChangedCallback = ()=>this.onUndoRedoChanged();\n        this.undoButton = this.container.select('#undoButton').on('click', function () {\n            self.app.undo();\n        });\n        this.redoButton = this.container.select('#redoButton').on('click', function () {\n            self.app.redo();\n        });\n    }\n\n    onUndoRedoChanged() {\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n    }\n    updateUndoRedoButtons(){\n        this.undoButton.attr(\"disabled\", this.app.dataModel.isUndoAvailable() ? null : 'disabled');\n        this.redoButton.attr(\"disabled\", this.app.dataModel.isRedoAvailable() ? null : 'disabled');\n    }\n\n    update(){\n        this.updateUndoRedoButtons();\n        this.updateSensitivityAnalysisButton();\n        this.updateLayoutButtons();\n        this.updateViewModeValue();\n        this.updateObjectiveRuleOptions();\n        this.updateObjectiveRuleValue();\n    }\n\n    initExportToolbarGroup() {\n        this.container.select('#export-toolbar-group').classed(this.hiddenClass, !this.app.config.exports.show);\n        if(!this.app.config.exports.show){\n            return;\n        }\n        this.initExportToPngButton();\n        this.initExportSvgButton();\n        this.initExportPdfButton();\n\n    }\n    initExportToPngButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButton')\n            .on('click', () => Exporter.saveAsPng(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPng)\n    }\n\n    initExportSvgButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonSvg')\n            .on('click', () => Exporter.saveAsSvg(svg))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToSvg)\n    }\n\n    initExportPdfButton() {\n        var svg = this.app.treeDesigner.svg;\n        this.container.select('#saveButtonPdf')\n            .on('click', () => Exporter.saveAsPdf(svg, this.app.config.exports))\n            .classed(this.hiddenClass, !this.app.config.buttons.exportToPdf)\n    }\n\n    initObjectiveRuleToolbarGroup() {\n        var self = this;\n        this.objectiveRuleSelect = this.container.select('#objective-rule-select');\n\n        this.updateObjectiveRuleOptions()\n        this.updateObjectiveRuleValue();\n\n        this.objectiveRuleSelect.on('change', function(){\n            self.app.setObjectiveRule(this.value);\n        })\n    }\n\n    updateObjectiveRuleOptions(){\n        var rules = this.app.getObjectiveRules();\n        var options = this.objectiveRuleSelect.selectAll('option').data(rules);\n        options.exit().remove();\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.objectiveRule.options.'+d.name));\n    }\n\n    updateObjectiveRuleValue(){\n        this.objectiveRuleSelect.node().value = this.app.getCurrentObjectiveRule().name;\n    }\n\n    initViewModeToolbarGroup() {\n        var self = this;\n        this.viewModeSelect = this.container.select('#view-mode-select');\n        var rules = this.app.getViewModes();\n        var options = this.viewModeSelect.selectAll('option').data(rules);\n        options.enter()\n            .append('option')\n            .merge(options)\n            .attr('value', d=>d.name)\n            .text(d=>i18n.t('toolbar.viewMode.options.'+d.name));\n\n        this.updateViewModeValue();\n\n        this.viewModeSelect.on('change', function(){\n            self.app.setViewModeByName(this.value);\n        })\n    }\n\n    updateViewModeValue(){\n        this.viewModeSelect.node().value = this.app.getCurrentViewMode().name;\n    }\n}\n","import {Utils} from \"sd-utils\";\n\nexport class NumberInputValidator {\n\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        if (!value.trim()) {\n            return false;\n        }\n\n        value = parseFloat(value);\n\n        if (!Utils.isNumber(value)) {\n            return false;\n        }\n\n        if (this.min !== undefined && value < this.min) {\n            return false;\n        }\n\n        return !(this.max !== undefined && value > this.max);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class PayoffInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        return this.expressionEngine.validate(value);\n    }\n\n}\n","export class ProbabilityInputValidator{\n    expressionEngine;\n    constructor(expressionEngine){\n        this.expressionEngine=expressionEngine;\n    }\n\n    validate(value, edge){\n        if(value===null || value === undefined){\n            return false;\n        }\n\n        value += \"\";\n        if(!value.trim()){\n            return false;\n        }\n\n        if(this.expressionEngine.constructor.isHash(value)){\n            return true;\n        }\n\n        if(this.expressionEngine.constructor.hasAssignmentExpression(value)) {\n            return false;\n        }\n        var scope = edge.parentNode.expressionScope;\n        return this.expressionEngine.validate(value, scope);\n    }\n\n}\n","import {Utils} from \"sd-utils\";\n\nexport class RequiredInputValidator {\n\n    constructor() {\n    }\n\n    validate(value) {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        value += \"\";\n        return !!value.trim();\n    }\n\n}\n","module.exports = {\"buildTimestamp\":1513790216239}\n","export * from './src/index'\n","import * as d3 from \"./d3\";\nimport {Templates} from \"./templates\";\nimport {i18n} from \"./i18n/i18n\";\nimport {Utils} from \"sd-utils\";\n\nexport class AppUtils {\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, AppUtils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, AppUtils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width) {\n        var textObj = textD3Obj.node();\n        textObj.textContent = textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength() > width + margin) {\n            for (var x = textString.length - 3; x > 0; x -= 1) {\n                if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                    textObj.textContent = textString.substring(0, x) + \"...\";\n                    return true;\n                }\n            }\n            textObj.textContent = \"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n        var ellipsisPlaced = AppUtils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if (ellipsisPlaced && tooltip) {\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element) {\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static getTranslation(transform) {\n        // Create a dummy g for calculation purposes only. This will never\n        // be appended to the DOM and will be discarded once this function\n        // returns.\n        var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        // Set the transform attribute to the provided string value.\n        g.setAttributeNS(null, \"transform\", transform);\n\n        // consolidate the SVGTransformList containing all transformations\n        // to a single SVGTransform of type SVG_TRANSFORM_MATRIX and get\n        // its SVGMatrix.\n        var matrix = g.transform.baseVal.consolidate().matrix;\n\n        // As per definition values e and f are the ones for the translation.\n        return [matrix.e, matrix.f];\n    }\n\n\n    static closestPoint(pathNode, point) {\n        var pathLength = pathNode.getTotalLength(),\n            precision = 8,\n            best,\n            bestLength,\n            bestDistance = Infinity;\n\n        // linear scan for coarse approximation\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n                best = scan, bestLength = scanLength, bestDistance = scanDistance;\n            }\n        }\n\n        // binary search for precise estimate\n        precision /= 2;\n        while (precision > 0.5) {\n            var before,\n                after,\n                beforeLength,\n                afterLength,\n                beforeDistance,\n                afterDistance;\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n                best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n                best = after, bestLength = afterLength, bestDistance = afterDistance;\n            } else {\n                precision /= 2;\n            }\n        }\n\n        best = [best.x, best.y];\n        best.distance = Math.sqrt(bestDistance);\n        return best;\n\n        function distance2(p) {\n            var dx = p.x - point[0],\n                dy = p.y - point[1];\n            return dx * dx + dy * dy;\n        }\n    }\n\n    static growl(message, type='info', position='right', time = 2000){\n        var html = Templates.get('growl', {message:message, type:type})\n\n        var g = d3.select('body').selectOrAppend('div.sd-growl-list.'+position).append('div').html(html);\n        setTimeout(function(){\n            g.remove();\n        }, time)\n    }\n\n\n    static createElement(tag, attribs, parent) {\n        var el = document.createElement(tag);\n\n        if (attribs) {\n            AppUtils.deepExtend(el, attribs);\n        }\n        if (parent) {\n            parent.appendChild(el);\n        }\n        return el;\n    };\n\n    static removeElement(element) {\n        element.parentNode.removeChild(element);\n    }\n\n    static replaceUrls(text){\n        if(!text){\n            return text;\n        }\n        var urlRegexp = /((ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/\n\n        return text.replace(urlRegexp, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    }\n\n    static escapeHtml(html)\n    {\n        var text = document.createTextNode(html);\n        var div = document.createElement('div');\n        div.appendChild(text);\n        return div.innerHTML;\n    }\n\n    static dispatchHtmlEvent(element, name){\n        if (\"createEvent\" in document) {\n            var evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(name, false, true);\n            element.dispatchEvent(evt);\n        }\n        else\n            element.fireEvent(\"on\"+name);\n    }\n\n    static dispatchEvent(name, data){\n        var event;\n        try{\n            event = new  CustomEvent(name,{ 'detail': data });\n        }catch (e){ //IE\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(name, false, false, data);\n        }\n        document.dispatchEvent(event);\n    }\n\n    static getValidationMessage(error){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var key = 'validation.' + error.name;\n        return i18n.t(key, error.data);\n    }\n\n    static hide(selection){\n        selection.classed('sd-hidden', true);\n    }\n\n    static show(selection, show=true){\n        selection.classed('sd-hidden', !show);\n    }\n\n\n\n    static isHidden(el, exact = true) {\n        if(!el){\n            return true;\n        }\n        if(exact){\n            var style = window.getComputedStyle(el);\n            return (style.display === 'none')\n        }\n        return (el.offsetParent === null)\n    }\n\n    static getJSON(url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('get', url, true);\n        xhr.responseType = 'json';\n        xhr.onload = function () {\n            var status = xhr.status;\n            if (status == 200) {\n                callback(xhr.response, null);\n            } else {\n                callback(null, status);\n            }\n        };\n        xhr.send();\n    }\n}\n","import * as d3 from '../d3'\n\n/*based on:\n * github.com/patorjk/d3-context-menu */\n\nexport class ContextMenu {\n    openCallback;\n    closeCallback;\n\n    constructor(menu, opts) {\n        var self = this;\n\n        if (typeof opts === 'function') {\n            self.openCallback = opts;\n        } else {\n            opts = opts || {};\n            self.openCallback = opts.onOpen;\n            self.closeCallback = opts.onClose;\n        }\n\n        // create the div element that will hold the context menu\n        d3.selectAll('.d3-context-menu').data([1])\n            .enter()\n            .append('div')\n            .attr('class', 'd3-context-menu');\n\n        // close menu\n        d3.select('body').on('click.d3-context-menu', function () {\n            d3.select('.d3-context-menu').style('display', 'none');\n            if (self.closeCallback) {\n                self.closeCallback();\n            }\n        });\n\n        // this gets executed when a contextmenu event occurs\n        return function (data, index) {\n            var elm = this;\n\n            d3.selectAll('.d3-context-menu').html('');\n            var list = d3.selectAll('.d3-context-menu')\n                .on('contextmenu', function (d) {\n                    d3.select('.d3-context-menu').style('display', 'none');\n                    d3.event.preventDefault();\n                    d3.event.stopPropagation();\n                })\n                .append('ul');\n            list.selectAll('li').data(typeof menu === 'function' ? menu(data) : menu).enter()\n                .append('li')\n                .attr('class', function (d) {\n                    var ret = '';\n                    if (d.divider) {\n                        ret += ' is-divider';\n                    }\n                    if (d.disabled) {\n                        ret += ' is-disabled';\n                    }\n                    if (!d.action) {\n                        ret += ' is-header';\n                    }\n                    return ret;\n                })\n                .html(function (d) {\n                    if (d.divider) {\n                        return '<hr>';\n                    }\n                    if (!d.title) {\n                        console.error('No title attribute set. Check the spelling of your options.');\n                    }\n                    return (typeof d.title === 'string') ? d.title : d.title(data);\n                })\n                .on('click', function (d, i) {\n                    if (d.disabled) return; // do nothing if disabled\n                    if (!d.action) return; // headers have no \"action\"\n                    d.action(elm, data, index);\n                    d3.select('.d3-context-menu').style('display', 'none');\n\n                    if (self.closeCallback) {\n                        self.closeCallback();\n                    }\n                });\n\n            // the openCallback allows an action to fire before the menu is displayed\n            // an example usage would be closing a tooltip\n            if (self.openCallback) {\n                if (self.openCallback(data, index) === false) {\n                    return;\n                }\n            }\n\n            // display context menu\n            d3.select('.d3-context-menu')\n                .style('left', (d3.event.pageX - 2) + 'px')\n                .style('top', (d3.event.pageY - 2) + 'px')\n                .style('display', 'block');\n\n            d3.event.preventDefault();\n            d3.event.stopPropagation();\n        };\n    };\n\n    static hide() {\n        d3.select('.d3-context-menu').style('display', 'none');\n    }\n\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class EdgeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n            var menu = [];\n\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectDecisionNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectDecisionNode(d)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.edge.injectChanceNode'),\n                action: function (elm, d, i) {\n                    treeDesigner.injectChanceNode(d)\n                }\n            });\n\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport * as d3 from '../d3'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class MainContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var mousePosition = null;\n        var menu = function (d) {\n\n            var menu = [];\n            menu.push({\n                title: i18n.t('contextMenu.main.addDecisionNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.DecisionNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({\n                title: i18n.t('contextMenu.main.addChanceNode'),\n                action: function (elm, d, i) {\n                    var newNode = new model.ChanceNode(mousePosition);\n                    treeDesigner.addNode(newNode)\n                }\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.addText'),\n                action: function (elm, d, i) {\n                    var newText = new model.Text(mousePosition);\n                    treeDesigner.addText(newText);\n                },\n\n            });\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.main.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNewLocation(mousePosition);\n                },\n                disabled: !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            });\n            menu.push({divider: true});\n\n            menu.push({\n                title: i18n.t('contextMenu.main.selectAllNodes'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectAllNodes();\n                }\n            });\n            return menu;\n        };\n\n        super(menu, {onOpen: () => {\n            treeDesigner.clearSelection();\n            mousePosition = new model.Point(d3.mouse(treeDesigner.svg.node())).move(treeDesigner.getMainGroupTranslation(true));\n\n        }});\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {domain as model} from 'sd-model'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class NodeContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner, operationsForObject) {\n        var menu = function (d) {\n\n            var copyMenuItem = {\n                title: i18n.t('contextMenu.node.copy'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.copySelectedNodes();\n                },\n                disabled: !!d.sourceId\n            };\n            var cutMenuItem = {\n                title: i18n.t('contextMenu.node.cut'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.cutSelectedNodes();\n                },\n                disabled: !!d.sourceId\n            };\n            var pasteMenuItem = {\n                title: i18n.t('contextMenu.node.paste'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d);\n                },\n                disabled: d.sourceId || d.folded || !treeDesigner.copiedNodes || !treeDesigner.copiedNodes.length\n\n            };\n            var pasteCloneMenuItem = {\n                title: i18n.t('contextMenu.node.pasteClone'),\n                action: function (elm, d, i) {\n                    treeDesigner.pasteToNode(d, true);\n                },\n                disabled: d.sourceId || d.folded || !treeDesigner.copiedNodes || treeDesigner.copiedNodes.length !== 1\n\n            };\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.node.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectNode(d, !treeDesigner.isNodeSelected(d));\n                    treeDesigner.removeSelectedNodes();\n\n                }\n            };\n\n            var menu = [];\n            if (d.type == model.TerminalNode.$TYPE) {\n                menu = [copyMenuItem, cutMenuItem, deleteMenuItem];\n                NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n                return menu;\n            }\n\n            if(!d.folded && !d.sourceId){\n                menu.push({\n                    title: i18n.t('contextMenu.node.addDecisionNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addDecisionNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addChanceNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addChanceNode(d)\n                    }\n                });\n                menu.push({\n                    title: i18n.t('contextMenu.node.addTerminalNode'),\n                    action: function (elm, d, i) {\n                        treeDesigner.addTerminalNode(d)\n                    }\n                });\n                menu.push({divider: true});\n            }\n\n            menu.push(copyMenuItem);\n            menu.push(cutMenuItem);\n            menu.push(pasteMenuItem);\n            menu.push(pasteCloneMenuItem);\n            menu.push(deleteMenuItem);\n\n            NodeContextMenu.addNodeConversionOptions(d, menu, treeDesigner);\n            menu.push({divider: true});\n            menu.push({\n                title: i18n.t('contextMenu.node.selectSubtree'),\n                action: function (elm, d, i) {\n                    treeDesigner.selectSubTree(d, true);\n                },\n                disabled: !!d.sourceId\n            });\n\n            if(!d.folded){\n                menu.push({\n                    title: i18n.t('contextMenu.node.fold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d);\n                    }\n                });\n            }else{\n                menu.push({\n                    title: i18n.t('contextMenu.node.unfold'),\n                    action: function (elm, d, i) {\n                        treeDesigner.foldSubtree(d, false);\n                    }\n                });\n            }\n\n            if(operationsForObject && !d.sourceId){\n                var operations = operationsForObject(d);\n                if(operations.length) {\n                    menu.push({divider: true});\n                    operations.forEach(op=>{\n                        menu.push({\n                            title: i18n.t('contextMenu.node.'+op.name),\n                            action: function (elm, d, i) {\n                                treeDesigner.performOperation(d, op);\n                            },\n                            disabled: !op.canPerform(d)\n                        });\n                    })\n                }\n            }\n\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n\n    static addNodeConversionOptions(d, menu, treeDesigner){\n        var conversionOptions = NodeContextMenu.getNodeConversionOptions(d, treeDesigner);\n        if(conversionOptions.length){\n            menu.push({divider: true});\n            conversionOptions.forEach(o=>menu.push(o));\n\n        }\n    }\n\n    static getNodeConversionOptions(d, treeDesigner){\n        var options = [];\n\n        if(d.folded){\n            return [];\n        }\n\n        var allAllowedTypes = [model.DecisionNode.$TYPE, model.ChanceNode.$TYPE, model.TerminalNode.$TYPE];\n\n        if(!d.childEdges.length && d.$parent){\n            allAllowedTypes.filter(t=>t!==d.type).forEach(type=>{\n                options.push(NodeContextMenu.getNodeConversionOption(type, treeDesigner))\n            })\n        }else{\n            if(d instanceof model.DecisionNode){\n                options.push(NodeContextMenu.getNodeConversionOption(model.ChanceNode.$TYPE, treeDesigner))\n            }else{\n                options.push(NodeContextMenu.getNodeConversionOption(model.DecisionNode.$TYPE, treeDesigner))\n            }\n        }\n        return options;\n    }\n\n    static getNodeConversionOption(typeToConvertTo, treeDesigner){\n        return {\n            title: i18n.t('contextMenu.node.convert.'+typeToConvertTo),\n            action: function (elm, d, i) {\n                treeDesigner.convertNode(d, typeToConvertTo);\n            },\n        }\n    }\n}\n","import {ContextMenu} from './context-menu'\nimport {i18n} from \"../i18n/i18n\";\n\nexport class TextContextMenu extends ContextMenu {\n    treeDesigner;\n\n    constructor(treeDesigner) {\n        var menu = function (d) {\n\n\n            var deleteMenuItem = {\n                title: i18n.t('contextMenu.text.delete'),\n                action: function (elm, d, i) {\n\n                    treeDesigner.selectText(d, true, true);\n                    treeDesigner.removeSelectedTexts()\n\n                }\n            };\n            var menu = [];\n            menu.push(deleteMenuItem);\n            return menu;\n        };\n\n        super(menu);\n        this.treeDesigner = treeDesigner;\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addText\": \"Text hinzufügen \",\n            \"paste\": \"Einfügen\",\n            \"selectAllNodes\": \"Alle Knoten auswählen\"\n        },\n        \"node\":{\n            \"copy\": \"Kopieren\",\n            \"cut\": \"Ausschneiden\",\n            \"paste\": \"Einfügen\",\n            \"delete\": \"Löschen\",\n            \"addDecisionNode\": \"Entscheidungsknoten hinzufügen\",\n            \"addChanceNode\": \"Zufall Knoten hinzufügen\",\n            \"addTerminalNode\": \"Endknotten hinzufügen\",\n            \"convert\":{\n                \"decision\": \"Als Entscheidungsknoten\",\n                \"chance\": \"Als Zufall Knoten\",\n                \"terminal\": \"Als Endknoten\"\n            },\n            \"selectSubtree\": \"Teilbaum wählen\",\n            \"fold\": \"Teilbaum falten\",\n            \"unfold\": \"Teilbaum entfalten\",\n\t\t\t\n            \"flipSubtree\": \"Teilbaum umdrehen\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Entscheidungsknoten Injizieren\",\n            \"injectChanceNode\": \"Zufall Knoten Injizieren\"\n        },\n        \"text\":{\n            \"delete\": \"Löschen\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Pfad, der nicht mit dem Endknoten endet\",\n        \"probabilityDoNotSumUpTo1\": \"Die Summe der Wahrscheinlichkeiten ist nicht gleich 1\",\n        \"invalidProbability\": \"Ungültige Wahrscheinlichkeit im Zweig #{{number}}\",\n        \"invalidPayoff\": \"Ungültige Auszahlung in Zweig #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Auswahlbürste deaktiviert\",\n        \"brushEnabled\": \"Auswahlbürste aktiviert\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregierte Auszahlung {{number}}\",\n                \"named\": \"Aggregierte {{name}}\"\n            },\n            \"probabilityToEnter\": \"Wahrscheinlichkeit\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Auszahlung {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Wahrscheinlichkeit: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addText\": \"Add Text\",\n            \"paste\": \"Paste\",\n            \"selectAllNodes\": \"Select all nodes\"\n        },\n        \"node\":{\n            \"copy\": \"Copy\",\n            \"cut\": \"Cut\",\n            \"paste\": \"Paste\",\n            \"delete\": \"Delete\",\n            \"addDecisionNode\": \"Add Decision Node\",\n            \"addChanceNode\": \"Add Chance Node\",\n            \"addTerminalNode\": \"Add Terminal Node\",\n            \"convert\":{\n                \"decision\": \"As Decision Node\",\n                \"chance\": \"As Chance Node\",\n                \"terminal\": \"As Terminal Node\"\n            },\n            \"selectSubtree\": \"Select subtree\",\n            \"fold\": \"Fold subtree\",\n            \"unfold\": \"Unfold subtree\",\n            \"flipSubtree\": \"Flip subtree\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inject Decision Node\",\n            \"injectChanceNode\": \"Inject Chance Node\"\n        },\n        \"text\":{\n            \"delete\": \"Delete\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Path not ending with terminal node\",\n        \"probabilityDoNotSumUpTo1\": \"Probabilities do not sum up to 1\",\n        \"invalidProbability\": \"Invalid probability in edge #{{number}}\",\n        \"invalidPayoff\": \"Invalid payoff in edge #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selection brush disabled\",\n        \"brushEnabled\": \"Selection brush enabled\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Aggregated Payoff {{number}}\",\n                \"named\": \"Aggregated {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probability to enter\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Payoff {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probability: {{value}}\"\n        }\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addText\": \"Ajouter du texte\",\n            \"paste\": \"Coller\",\n            \"selectAllNodes\": \"Sélectionner tous les nouds\"\n        },\n        \"node\":{\n            \"copy\": \"Copie\",\n            \"cut\": \"Couper\",\n            \"paste\": \"Coller\",\n            \"delete\": \"Effacer\",\n            \"addDecisionNode\": \"Ajouter noud de décision\",\n            \"addChanceNode\": \"Ajouter noud aléatoire\",\n            \"addTerminalNode\": \"Ajouter un noeud terminal\",\n            \"convert\":{\n                \"decision\": \"Comme noud de décision\",\n                \"chance\": \"Comme noud aléatoire\",\n                \"terminal\": \"Comme un noeud terminal\"\n            },\n            \"selectSubtree\": \"Sélectionner une sous-arborescence\",\n            \"fold\": \"Plier sous-arbre\",\n            \"unfold\": \"Déplier arbre sous-arbre\",\n            \"flipSubtree\": \"Basculer sous-arbre\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Injecter un noeud de décision\",\n            \"injectChanceNode\": \"Injecter un noeud de chance\"\n        },\n        \"text\":{\n            \"delete\": \"Effacer\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Parcours non terminé par noeud terminal\",\n        \"probabilityDoNotSumUpTo1\": \"La somme des probabilités n'est pas 1 ou plus\",\n        \"invalidProbability\": \"Probabilité invalide - le bord #{{number}}\",\n        \"invalidPayoff\": \"Avantage invalide - le bord #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Brosse de sélection désactivée\",\n        \"brushEnabled\": \"Brosse de sélection activée\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Avantage agrégé {{number}}\",\n                \"named\": \"Agrégé  {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilité d'entrée\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Avantage {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilité: {{value}}\"\n        }\n    }\n}\n","import i18next from 'i18next';\nimport * as en from './en.json'\nimport * as pl from './pl.json'\nimport * as it from './it.json'\nimport * as de from './de.json'\nimport * as fr from './fr.json'\n\nexport class i18n{\n\n    static $instance;\n    static language;\n\n    static init(lng){\n        i18n.language = lng;\n        let resources = {\n            en: {\n                translation: en\n            },\n            pl: {\n                translation: pl\n            },\n            it: {\n                translation: it\n            },\n            de: {\n                translation: de\n            },\n            fr: {\n                translation: fr\n            }\n        };\n        i18n.$instance = i18next.createInstance({\n            lng: lng,\n            fallbackLng: 'en',\n            resources: resources\n        }, (err, t) => {\n        });\n    }\n\n    static t(key, opt){\n        return i18n.$instance.t(key, opt)\n    }\n}\n","module.exports={\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addText\": \"Aggiungi testo\",\n            \"paste\": \"Incolla\",\n            \"selectAllNodes\": \"Seleziona tutti i nodi\"\n        },\n        \"node\":{\n            \"copy\": \"Copia\",\n            \"cut\": \"Taglia\",\n            \"paste\": \"Incolla\",\n            \"delete\": \"Cancella\",\n            \"addDecisionNode\": \"Aggiungi un nodo di decisione\",\n            \"addChanceNode\": \"Aggiungi un nodo opportunità\",\n            \"addTerminalNode\": \"Aggiungi un nodo terminale\",\n            \"convert\":{\n                \"decision\": \"Come Decision Node\",\n                \"chance\": \"Come Chance Node\",\n                \"terminal\": \"Come Terminal Node\"\n            },\n            \"selectSubtree\": \"Seleziona Sotto-albero\",\n            \"fold\": \"Piega sotto-albero\",\n            \"unfold\": \"Dispiegarsi sotto-albero\",\t\t\t\n            \"flipSubtree\": \"Ribalta sotto-albero\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Inietta nodo di decisione\",\n            \"injectChanceNode\": \"Inietta nodo opportunità\"\n        },\n        \"text\":{\n            \"delete\": \"Cancella\"\n        }\n    },\n    \"validation\":{\n        \"incompletePath\": \"Percorso senza nodo terminale\",\n        \"probabilityDoNotSumUpTo1\": \"La somma delle probabilità è diversa da 1\",\n        \"invalidProbability\": \"Probabilità non valida - bordo #{{number}}\",\n        \"invalidPayoff\": \"Saldo non valido - bordo #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Selezione pennello disabilitata\",\n        \"brushEnabled\": \"Selezione pennello abilitata\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Saldo aggregato {{number}}\",\n                \"named\": \"Aggregato {{name}}\"\n            },\n            \"probabilityToEnter\": \"Probabilità da inserire\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Saldo {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Probabilità: {{value}}\"\n        }\n    }\n}\n","module.exports={\n\n    \"contextMenu\":{\n        \"main\":{\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addText\": \"Dodaj Tekst\",\n            \"paste\": \"Wklej\",\n            \"selectAllNodes\": \"Zaznacz wszystkie węzły\"\n        },\n        \"node\":{\n            \"copy\": \"Kopiuj\",\n            \"cut\": \"Wytnij\",\n            \"paste\": \"Wklej\",\n            \"delete\": \"Usuń\",\n            \"addDecisionNode\": \"Dodaj Węzeł Decyzyjny\",\n            \"addChanceNode\": \"Dodaj Węzeł Losowy\",\n            \"addTerminalNode\": \"Dodaj Węzeł Końcowy\",\n            \"convert\":{\n                \"decision\": \"Jako Węzeł Decyzyjny\",\n                \"chance\": \"Jako Węzeł Losowy\",\n                \"terminal\": \"Jako Węzeł Końcowy\"\n            },\n            \"selectSubtree\": \"Zaznacz poddrzewo\",\n            \"fold\": \"Zwiń poddrzewo\",\n            \"unfold\": \"Rozwiń poddrzewo\",\n            \"flipSubtree\": \"Przewróć poddrzewo\"\n        },\n        \"edge\":{\n            \"injectDecisionNode\": \"Wstrzyknij Węzeł Decyzyjny\",\n            \"injectChanceNode\": \"Wstrzyknij Węzeł Losowy\"\n        },\n        \"text\":{\n            \"delete\": \"Usuń\"\n        }\n    },\n\n    \"validation\":{\n        \"incompletePath\": \"Ostatnim węzłem w ścieżce powinien być Węzeł Końcowy\",\n        \"probabilityDoNotSumUpTo1\": \"Prawdopodobieństwa nie sumują sie do 1\",\n        \"invalidProbability\": \"Niepoprawne prawdopodobieństwo na krawędzi #{{number}}\",\n        \"invalidPayoff\": \"Niepoprawna wypłata na krawędzi #{{number}}\"\n    },\n    \"growl\":{\n        \"brushDisabled\": \"Zaznaczanie wyłączone\",\n        \"brushEnabled\": \"Zaznaczanie włączone\"\n    },\n    \"tooltip\":{\n        \"node\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}\",\n                \"named\": \"{{name}}\"\n            },\n            \"aggregatedPayoff\": {\n                \"default\": \"Zagregowana wypłata {{number}}\",\n                \"named\": \"Zagregowana {{name}}\"\n            },\n            \"probabilityToEnter\": \"Prawdopodobieństwo wejścia\"\n        },\n        \"edge\":{\n            \"payoff\": {\n                \"default\": \"Wypłata {{number}}: {{value}}\",\n                \"named\": \"{{name}}: {{value}}\"\n            },\n            \"probability\": \"Prawdopodobieństwo: {{value}}\"\n        }\n    }\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport * from './tree-designer'\nexport * from './app-utils'\nexport * from './templates'\nexport * from './tooltip'\nexport * from './d3-extensions'\nexport {default as d3} from './d3'\n\n\n","import {Utils} from 'sd-utils'\nimport {domain as model} from 'sd-model'\nimport * as d3 from './d3'\nimport circleSymbol from './symbols/circle'\nimport triangleSymbol from './symbols/triangle'\nimport {AppUtils} from \"./app-utils\";\n\n/*Tree layout manager*/\nexport class Layout{\n\n    treeDesigner;\n    data;\n    config;\n\n    nodeTypeToSymbol = {\n        'decision': d3.symbolSquare,\n        'chance': circleSymbol,\n        \"terminal\": triangleSymbol,\n        'clone': d3.symbolStar\n    };\n\n    static MANUAL_LAYOUT_NAME = 'manual';\n\n\n    onAutoLayoutChanged=[];\n\n    nodeTypeOrder = {\n        'decision' : 0,\n        'chance': 0,\n        'terminal': 1\n    };\n\n    treeMargin = 50;\n    targetSymbolSize={};\n    nodeSeparation = (a, b) => a.parent === b.parent ? 1 : 1.2\n\n    constructor(treeDesigner, data, config){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n        this.config = config;\n\n    }\n\n    update(node){\n        if(node && node.$parent){\n            node.$parent.childEdges.sort((a,b)=>a.childNode.location.y - b.childNode.location.y)\n        }\n        if(!this.isManualLayout()){\n            return this.autoLayout(this.config.type, true);\n        }\n        if(node){\n            this.moveNodeToEmptyPlace(node);\n        }else{\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    isManualLayout(){\n        return this.config.type === Layout.MANUAL_LAYOUT_NAME;\n    }\n\n    getNewChildLocation(parent){\n        if(!parent){\n            return new model.Point(this.getNodeMinX(), this.getNodeMinY())\n        }\n        var x = parent.location.x + this.config.gridWidth;\n        var y = parent.location.y;\n        if(parent.childEdges.length){\n            y = parent.childEdges[parent.childEdges.length-1].childNode.location.y+1;\n        }\n\n        return new model.Point(x, y)\n    }\n\n    getInjectedNodeLocation(edge){\n\n        var p = edge.$linePoints[2];\n\n        return new model.Point(p[0], p[1])\n    }\n\n    moveNodeToEmptyPlace(node, redrawIfChanged=true){\n        var positionMap = {};\n        var self = this;\n        node.location.x = Math.max(this.getNodeMinX(node), node.location.x);\n        node.location.y = Math.max(this.getNodeMinY(node), node.location.y);\n\n\n        this.nodesSortedByX = this.data.nodes.slice();\n        this.nodesSortedByX.sort((a,b)=>a.location.x - b.location.x);\n\n        function findCollidingNode(node, location){\n            return Utils.find(self.nodesSortedByX, n=>{\n                if(node == n){\n                    return false;\n                }\n\n                var margin = self.config.nodeSize/3;\n                var x = n.location.x;\n                var y = n.location.y;\n\n                return (location.x - margin <= x && location.x + margin >= x\n                    && location.y - margin <= y && location.y + margin >= y)\n            });\n        }\n\n        var stepX = this.config.nodeSize/2;\n        var stepY = this.config.nodeSize+10;\n        var stepXsameParent = 0;\n        var stepYsameParent = 75;\n        var changed = false;\n        var colidingNode;\n        var newLocation = new model.Point(node.location);\n        while(colidingNode = findCollidingNode(node, newLocation)){\n            changed=true;\n            var sameParent = node.$parent && colidingNode.$parent && node.$parent===colidingNode.$parent;\n            if(sameParent){\n                newLocation.move(stepXsameParent, stepYsameParent);\n            }else{\n                newLocation.move(stepX, stepY);\n            }\n        }\n        if(changed){\n            node.moveTo(newLocation.x,newLocation.y, true);\n            if(redrawIfChanged){\n                this.treeDesigner.redraw(true);\n            }\n        }\n    }\n\n    disableAutoLayout(){\n        this.config.type = Layout.MANUAL_LAYOUT_NAME;\n        this._fireOnAutoLayoutChangedCallbacks();\n    }\n\n\n    nodeSymbolSize = {};\n    drawNodeSymbol(path, transition){\n\n        var self = this;\n        var nodeSize = this.config.nodeSize;\n        this.nodeSymbol = d3.symbol().type(d=> self.nodeTypeToSymbol[d.type])\n            .size(d=>self.nodeSymbolSize[d.id] ? Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", 64) : 64);\n\n        path\n            .each(function (d) {\n                var path = d3.select(this);\n                var prev = path.attr(\"d\");\n                if(!prev){\n                    path.attr(\"d\", self.nodeSymbol);\n                }\n                var size = Utils.get(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\");\n                if(!size){\n                    var box = path.node().getBBox();\n                    var error = Math.min(nodeSize / box.width, nodeSize / box.height);\n                    size = error * error * (self.nodeSymbolSize[d.id]||64);\n                    Utils.set(self.targetSymbolSize, d.type+\"['\"+self.config.nodeSize+\"']\", size);\n                }\n                if(transition){\n                    path =  path.transition();\n\n                }else{\n                    self.nodeSymbolSize[d.id] = size;\n                }\n                path.attr(\"d\", self.nodeSymbol);\n                if(transition){\n                    self.nodeSymbolSize[d.id] = size;\n                }\n            });\n    }\n\n    nodeLabelPosition(selection) {\n        return selection\n            .attr('x', 0)\n            .attr('y', -this.config.nodeSize / 2 - 7)\n    }\n\n    nodePayoffPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', 0)\n            .attr('y', this.config.nodeSize / 2 + 7)\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeAggregatedPayoffPosition(selection) {\n        var x = this.config.nodeSize / 2 + 7;\n        var self = this;\n        selection\n            .attr('x', x)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let items = d.displayValue('aggregatedPayoff');\n                let number = Utils.isArray(items) ? items.filter(it=>it !== undefined).length : 1;\n                if(number>1){\n                    return -this.getBBox().height/2 + fontSize/2;\n                }\n                return -Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            });\n\n        selection.selectAll('tspan').attr('x', x);\n        return selection;\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'hanging')\n    }\n\n    nodeProbabilityToEnterPosition(selection) {\n        var self = this;\n\n        return Layout.setHangingPosition(selection)\n            .attr('x', this.config.nodeSize / 2 + 7)\n            .attr('y', function(d){\n                let fontSize = parseInt(AppUtils.getFontSize(this));\n                let aggregatedPayoffs = d.displayValue('aggregatedPayoff');\n                let aggregatedPayoffsNumber = Utils.isArray(aggregatedPayoffs) ? aggregatedPayoffs.filter(it=>it !== undefined).length : 1;\n                if(aggregatedPayoffsNumber>1){\n\n                    return fontSize*0.6\n                }\n\n                return Math.max(2, 1.8* self.config.nodeSize/fontSize);\n            })\n            // .attr('text-anchor', 'middle')\n            // .attr('dominant-baseline', 'central')\n    }\n\n    nodeIndicatorPosition(selection) {\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 8)\n            .attr('y', - this.config.nodeSize/2)\n            .attr('dominant-baseline', 'central')\n            .attr('text-anchor', 'middle')\n    }\n\n    nodeUnfoldButtonPosition(selection) {\n\n        return selection\n            .attr('x', this.config.nodeSize / 2 + 5)\n            .attr('y', 0)\n            .attr('dominant-baseline', 'central')\n    }\n\n    edgeLineD(edge){\n        var line = d3.line()\n            .x(d=> d[0])\n            .y(d=> d[1]);\n        // .curve(d3.curveCatmullRom.alpha(0.5));\n\n\n        var parentNode = edge.parentNode;\n        var childNode = edge.childNode;\n\n        var dX = childNode.location.x - parentNode.location.x;\n        var dY = childNode.location.y - parentNode.location.y;\n\n        var sign = dX>=0 ? 1 : -1;\n\n        var slantStartXOffset = Math.min(dX/2, this.config.nodeSize/2+10);\n        var slantWidth = Math.min(this.config.edgeSlantWidthMax, Math.max(dX/2 - slantStartXOffset, 0));\n\n        var point1 = [parentNode.location.x +this.config.nodeSize/2 + 1, parentNode.location.y];\n        var point2 = [Math.max(parentNode.location.x+slantStartXOffset, point1[0]), parentNode.location.y];\n        var point3 = [parentNode.location.x+slantStartXOffset+slantWidth, childNode.location.y];\n        var point4 = [childNode.location.x - (sign*(Math.max(0, Math.min(this.config.nodeSize/2+8, dX/2)))), childNode.location.y];\n        // var point2 = [parentNode.location.x+dX/2-slantWidth/2, parentNode.location.y];\n        // var point3 = [childNode.location.x-(dX/2-slantWidth/2), childNode.location.y];\n\n        edge.$linePoints = [point1, point2, point3, point4];\n        return line(edge.$linePoints);\n    }\n\n    edgePayoffPosition(selection) {\n        Layout.setHangingPosition(selection)\n            .attr('x', d=>d.$linePoints[2][0] + 2)\n            .attr('y', d=>d.$linePoints[2][1] + 7);\n\n        selection.selectAll('tspan').attr('x', function(d){\n            return d3.select(this.parentNode).datum().$linePoints[2][0] + 2\n        });\n        return selection;\n\n    }\n\n    edgeLabelPosition(selection) {\n        return selection\n            .attr('transform', d=>'translate('+(d.$linePoints[2][0] + 2)+','+(d.$linePoints[2][1] - 7)+')')\n            // .attr('x', d=>d.$linePoints[2][0] + 2)\n            // .attr('y', d=>d.$linePoints[2][1] - 7)\n\n    }\n\n    edgeProbabilityPosition(selection) {\n        return Layout.setHangingPosition(selection)\n            .attr('x', function (d) {\n                var len = this.getComputedTextLength();\n                var min = d.$linePoints[2][0] + 2 + this.previousSibling.childNodes[0].getComputedTextLength() + 7 + len;\n                return Math.max(min, d.$linePoints[3][0] - 8);\n            })\n            .attr('y', d=>d.$linePoints[2][1] + 7)\n    }\n\n    getMinMarginBetweenNodes(){\n      return this.config.nodeSize + 30;\n    }\n\n\n    getNodeMinX(d){\n        var self = this;\n        if(d && d.$parent){// && !self.isNodeSelected(d.$parent)\n            return d.$parent.location.x + self.getMinMarginBetweenNodes();\n        }\n        return self.config.nodeSize/2;\n    }\n\n    getNodeMinY(d){\n        return this.config.nodeSize/2;\n    }\n\n    getNodeMaxX(d){\n        var self = this;\n\n        if(d && d.childEdges.length){\n            return d3.min(d.childEdges, e=>!e.childNode.$hidden ? e.childNode.location.x : 9999999)-self.getMinMarginBetweenNodes();\n        }\n        return 9999999;\n    }\n\n    setGridWidth(width, withoutStateSaving){\n        var self=this;\n        if(this.config.gridWidth===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridWidth: self.config.gridWidth\n                },\n                onUndo: (data)=> {\n                    self.setGridWidth(data.gridWidth, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridWidth(width, true);\n                }\n            });\n        }\n\n        this.config.gridWidth=width;\n        this.update();\n    }\n\n    setGridHeight(gridHeight, withoutStateSaving){\n        var self=this;\n        if(this.config.gridHeight===gridHeight){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    gridHeight: self.config.gridHeight\n                },\n                onUndo: (data)=> {\n                    self.setGridHeight(data.gridHeight, true);\n                },\n                onRedo: (data)=> {\n                    self.setGridHeight(gridHeight, true);\n                }\n            });\n        }\n\n        this.config.gridHeight=gridHeight;\n        this.update();\n    }\n\n    setNodeSize(nodeSize, withoutStateSaving){\n        var self=this;\n        if(this.config.nodeSize===nodeSize){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    nodeSize: self.config.nodeSize\n                },\n                onUndo: (data)=> {\n                    self.setNodeSize(data.nodeSize, true);\n                },\n                onRedo: (data)=> {\n                    self.setNodeSize(nodeSize, true);\n                }\n            });\n        }\n\n        this.config.nodeSize=nodeSize;\n        this.update();\n        if(this.isManualLayout()){\n            this.fitNodesInPlottingRegion(self.data.getRoots());\n            this.treeDesigner.redraw(true);\n        }\n    }\n\n    setEdgeSlantWidthMax(width, withoutStateSaving){\n        var self=this;\n        if(this.config.edgeSlantWidthMax===width){\n            return;\n        }\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    edgeSlantWidthMax: self.config.edgeSlantWidthMax\n                },\n                onUndo: (data)=> {\n                    self.setEdgeSlantWidthMax(data.edgeSlantWidthMax, true);\n                },\n                onRedo: (data)=> {\n                    self.setEdgeSlantWidthMax(width, true);\n                }\n            });\n        }\n\n        this.config.edgeSlantWidthMax=width;\n        this.treeDesigner.redraw(true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        var self=this;\n\n\n\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    newLayout: type,\n                    currentLayout: self.config.type\n                },\n                onUndo: (data)=> {\n                    self.config.type = data.currentLayout;\n                    self._fireOnAutoLayoutChangedCallbacks();\n                },\n                onRedo: (data)=> {\n                    self.autoLayout(data.newLayout, true);\n                }\n            });\n        }\n        this.config.type = type;\n        if(!this.data.nodes.length){\n            this._fireOnAutoLayoutChangedCallbacks();\n            return;\n        }\n\n        var prevTreeMaxY = self.getNodeMinY();\n        this.data.getRoots().forEach(r=>{\n            var root = d3.hierarchy(r, d=>{\n                return d.childEdges.filter(e=>!e.$hidden).map(e=>e.childNode);\n            });\n\n            // root.sort((a,b)=>self.nodeTypeOrder[a.data.type]-self.nodeTypeOrder[b.data.type]);\n            root.sort((a,b)=>a.data.location.y - b.data.location.y);\n\n\n            var layout;\n            if(type==='cluster'){\n                layout = d3.cluster();\n            }else{\n                layout = d3.tree();\n            }\n            layout.nodeSize([self.config.gridHeight, self.config.gridWidth]);\n            layout.separation(self.nodeSeparation);\n\n            layout(root);\n            var minY = 999999999;\n            root.each(d=>{\n                minY = Math.min(minY, d.x);\n            });\n\n            var dy = root.x - minY + prevTreeMaxY;\n            var dx = self.getNodeMinX();\n            var maxY=0;\n            root.each(d=>{\n                d.data.location.x = d.y + dx;\n                d.data.location.y = d.x + dy;\n\n                maxY = Math.max(maxY, d.data.location.y);\n            });\n\n            prevTreeMaxY = maxY + self.config.nodeSize+self.treeMargin;\n        });\n\n\n        // this.transition = true;\n        this.treeDesigner.redraw(true);\n        // this.transition = false;\n\n        this._fireOnAutoLayoutChangedCallbacks();\n        return this;\n    }\n\n    fitNodesInPlottingRegion(nodes){\n        var self = this;\n        var topY = d3.min(nodes, n=>n.location.y);\n        var minY = self.getNodeMinY();\n        var dy = topY - minY;\n\n        var minX = d3.min(nodes, n=>n.location.x);\n        var dx = minX - self.getNodeMinX();\n\n        if(dy<0 ||  dx<0){\n            nodes.forEach(n=>n.move(-dx, -dy));\n        }\n    }\n\n    moveNodes(nodes, dx, dy, pivot){\n        var self = this;\n        var limit = self.config.limitNodePositioning;\n        if(limit){\n            if(dx<0){\n                nodes.sort((a,b)=>a.location.x-b.location.x);\n            }else{\n                nodes.sort((a,b)=>b.location.x-a.location.x);\n            }\n        }\n\n\n        var minY = d3.min(nodes, d=>d.location.y);\n        if(minY + dy < self.getNodeMinY()){\n            dy = self.getNodeMinY() - minY;\n        }\n\n        nodes.forEach(d=>{\n            if(limit){\n                Layout.backupNodeLocation(d);\n                var minX = self.getNodeMinX(d);\n                var maxX = self.getNodeMaxX(d);\n\n                d.location.x = Math.min(Math.max(d.location.x+dx, minX), maxX);\n                d.location.y += dy;\n            }else{\n                d.location.x +=dx;\n                d.location.y += dy;\n            }\n\n        });\n\n\n        var revertX = pivot && self.config.limitNodePositioning && (pivot.location.x === pivot.$location.x);\n\n        nodes.forEach(d=>{\n            if(revertX){\n                d.location.x = d.$location.x;\n            }\n            self.treeDesigner.updateNodePosition(d);\n        });\n\n\n    }\n\n    static backupNodeLocation(node) {\n        node.$location = new model.Point(node.location);\n    }\n\n    _fireOnAutoLayoutChangedCallbacks(){\n        this.onAutoLayoutChanged.forEach(c=>c(this.config.type));\n    }\n\n    static setHangingPosition(selection){\n        // window.setTimeout(function(){\n        //     selection.each(function(){\n        //         var h =  this.getBBox().height;\n        //         d3.select(this).attr('dy', h);\n        //     });\n        // },0);\n\n        if(AppUtils.isHidden(selection.node())){ // setting hanging position of hidden elements fails on firefox\n            return selection;\n        }\n\n\n        selection.each(function(){\n            var h =  this.getBBox().height;\n            d3.select(this).attr('dy', '0.75em');\n        });\n\n        return selection;\n    }\n\n}\n\n\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class NodeDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        if(self.ignoreDrag){\n            self.ignoreDrag=false;\n            self.ignoredDrag=true;\n            return;\n        }\n        self.ignoredDrag=false;\n\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var node = d3.select(this);\n        if(!node.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectNode(d);\n        node.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes(true);\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedNode, self){\n        if(self.ignoredDrag){\n            return;\n        }\n\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n        if(self.selectedNodes.length>5 && self.dragEventCount%2!=1){\n            return;\n        }\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n        self.treeDesigner.layout.moveNodes(self.selectedNodes, dx, dy, draggedNode);\n\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.redrawEdges();\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n        var node = d3.select(this).classed(\"dragging\", false);\n        if(self.ignoredDrag){\n            return;\n        }\n        self.treeDesigner.layout.update(draggedNode)\n    }\n\n    cancelDrag(){\n        this.ignoreDrag = true;\n    }\n\n}\n\n\n","var epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nexport default {\n    /*draw: function(context, size) {\n        var r = Math.sqrt(size / pi);\n        context.moveTo(r, 0);\n        context.arc(0, 0, r, 0, tau);\n    }*/\n    draw: function(context, size) {\n\n        var r = Math.sqrt(size / pi);\n        var dist =0.552284749831 * r;\n\n        context.moveTo(-r, 0)\n        // context.lineTo(2*r, 2*r)\n        // context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n        context.bezierCurveTo(-r, -dist, -dist, -r, 0,-r);\n\n        context.bezierCurveTo(dist, -r, r, -dist, r,0);\n\n        context.bezierCurveTo(r, dist, dist, r, 0, r);\n\n        context.bezierCurveTo(-dist, r, -r, dist, -r, 0);\n    }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n    draw: function(context, size) {\n        var r = Math.sqrt(size / Math.PI);\n        context.moveTo(-r, 0);\n        context.lineTo(0.9*r, -r);\n        context.lineTo(0.9*r, r);\n        context.closePath();\n    }\n};\n","import {Utils} from \"sd-utils\";\nimport {i18n} from './i18n/i18n'\n\nexport class Templates{\n\n    static growl = require('./templates/growl_message.html');\n\n    static get(templateName, variables){\n        var compiled = Utils.template(Templates[templateName],{ 'imports': { 'i18n': i18n, 'Templates': Templates, 'include': function(n, v) {return Templates.get(n, v)} } });\n        if(variables){\n            variables.variables = variables;\n        }else{\n            variables = {variables:{}}\n        }\n        return compiled(variables)\n\n    }\n\n    static styleRule(selector, props){\n        var s = selector+ '{';\n        props.forEach(p=> s+=Templates.styleProp(p[0], p[1]));\n        s+='} ';\n        return s;\n    }\n    static styleProp(styleName, variableName){\n        return  styleName+': <%= '+variableName+' %>; '\n    }\n\n    static treeDesignerSelector = 'svg.sd-tree-designer';\n    static nodeSelector(type, clazz){\n        var s = Templates.treeDesignerSelector+' .node';\n        if(type){\n            s+='.'+type+'-node';\n        }\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n    static edgeSelector(clazz){\n        var s = Templates.treeDesignerSelector+' .edge';\n        if(clazz){\n            s+='.'+clazz;\n        }\n        return s;\n    }\n\n    static treeDesignerStyles =\n\n        Templates.styleRule(Templates.treeDesignerSelector,[\n            ['font-size', 'fontSize'],\n            ['font-family', 'fontFamily'],\n            ['font-weight', 'fontWeight'],\n            ['font-style', 'fontStyle']\n        ])+\n        //   node\n        Templates.styleRule(Templates.nodeSelector()+' path',[\n            ['fill', 'node.fill'],\n            ['stroke-width', 'node.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'optimal')+' path, '+Templates.nodeSelector('chance', 'optimal')+' path,' +Templates.nodeSelector('terminal', 'optimal')+' path',[\n            ['stroke', 'node.optimal.stroke'],\n            ['stroke-width', 'node.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .label',[\n            ['font-size', 'node.label.fontSize'],\n            ['fill', 'node.label.color']\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff',[\n            ['font-size', 'node.payoff.fontSize'],\n            ['fill', 'node.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector()+' .payoff.negative',[\n            ['fill', 'node.payoff.negativeColor'],\n        ])+\n\n        //    decision node\n        Templates.styleRule(Templates.nodeSelector('decision')+' path',[\n            ['fill', 'node.decision.fill'],\n            ['stroke', 'node.decision.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('decision', 'selected')+' path',[\n            ['fill', 'node.decision.selected.fill']\n        ])+\n\n        //    chance node\n        Templates.styleRule(Templates.nodeSelector('chance')+' path',[\n            ['fill', 'node.chance.fill'],\n            ['stroke', 'node.chance.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('chance', 'selected')+' path',[\n            ['fill', 'node.chance.selected.fill']\n        ])+\n\n        //    terminal node\n        Templates.styleRule(Templates.nodeSelector('terminal')+' path',[\n            ['fill', 'node.terminal.fill'],\n            ['stroke', 'node.terminal.stroke']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal', 'selected')+' path',[\n            ['fill', 'node.terminal.selected.fill']\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff',[\n            ['font-size', 'node.terminal.payoff.fontSize'],\n            ['fill', 'node.terminal.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.nodeSelector('terminal')+' .aggregated-payoff.negative',[\n            ['fill', 'node.terminal.payoff.negativeColor'],\n        ])+\n\n\n        //probability\n        Templates.styleRule(Templates.treeDesignerSelector+' .node .probability-to-enter, '+Templates.treeDesignerSelector+' .edge .probability',[\n            ['font-size', 'probability.fontSize'],\n            ['fill', 'probability.color']\n        ])+\n\n        //edge\n        Templates.styleRule(Templates.edgeSelector()+' path',[\n            ['stroke', 'edge.stroke'],\n            ['stroke-width', 'edge.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow path',[\n            ['fill', 'edge.stroke'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector('optimal')+' path',[\n            ['stroke', 'edge.optimal.stroke'],\n            ['stroke-width', 'edge.optimal.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-optimal path',[\n            ['fill', 'edge.optimal.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector('selected')+' path',[\n            ['stroke', 'edge.selected.stroke'],\n            ['stroke-width', 'edge.selected.strokeWidth']\n        ])+\n        Templates.styleRule(Templates.treeDesignerSelector+' marker#arrow-selected path',[\n            ['fill', 'edge.selected.stroke'],\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .label',[\n            ['font-size', 'edge.label.fontSize'],\n            ['fill', 'edge.label.color']\n        ])+\n\n        Templates.styleRule(Templates.edgeSelector()+' .payoff',[\n            ['font-size', 'edge.payoff.fontSize'],\n            ['fill', 'edge.payoff.color'],\n        ])+\n        Templates.styleRule(Templates.edgeSelector()+' .payoff.negative',[\n            ['fill', 'edge.payoff.negativeColor'],\n        ])+\n\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-title',[\n            ['font-size', 'title.fontSize'],\n            ['font-weight', 'title.fontWeight'],\n            ['font-style', 'title.fontStyle'],\n            ['fill', 'title.color']\n        ]) +\n        Templates.styleRule(Templates.treeDesignerSelector+' .sd-title-container text.sd-description',[\n            ['font-size', 'description.fontSize'],\n            ['font-weight', 'description.fontWeight'],\n            ['font-style', 'description.fontStyle'],\n            ['fill', 'description.color']\n        ])\n}\n\n\n\n\n","module.exports = \"<div class=\\\"sd-growl-message <%=type%>\\\">\\n    <div class=\\\"sd-growl-message-text\\\">\\n        <%= message %>\\n    </div>\\n</div>\\n\";\n","import {AppUtils} from './app-utils'\nimport * as d3 from './d3'\nimport {ContextMenu} from './context-menu/context-menu'\n\nexport class TextDragHandler{\n\n    treeDesigner;\n    data;\n    config;\n\n    drag;\n\n\n    constructor(treeDesigner, data){\n        this.treeDesigner = treeDesigner;\n        this.data = data;\n\n        var self = this;\n        this.drag = d3.drag()\n            .subject(function(d) {\n                if(d==null){\n                    return  {\n                        x: event.x,\n                        y: event.y\n                    };\n                }\n                var t = d3.select(this);\n                return {\n                    x: t.attr(\"x\") + AppUtils.getTranslation(t.attr(\"transform\"))[0],\n                    y: t.attr(\"y\") + AppUtils.getTranslation(t.attr(\"transform\"))[1]\n                };\n            })\n            .on(\"start\", function(d){\n                self.dragStarted.call(this,d, self)\n            })\n            .on(\"drag\", function (d) {\n                self.onDrag.call(this, d, self);\n            })\n            .on(\"end\", function (d) {\n                self.dragEnded.call(this, d, self);\n            })\n    }\n\n\n    dragStarted(d,self) {\n        // self.treeDesigner.layout.disableAutoLayout();\n        ContextMenu.hide();\n        var text = d3.select(this);\n        if(!text.classed(\"selected\")){\n            self.treeDesigner.clearSelection();\n        }\n\n        self.treeDesigner.selectText(d);\n        text.classed(\"selected dragging\", true);\n        self.selectedNodes = self.treeDesigner.getSelectedNodes();\n        self.prevDragEvent = d3.event;\n        self.dragEventCount = 0;\n    }\n\n    onDrag(draggedText, self){\n        if(self.dragEventCount==2){\n            self.data.saveState();\n        }\n        self.dragEventCount++;\n\n        var dx = d3.event.x - self.prevDragEvent.x;\n        var dy = d3.event.y- self.prevDragEvent.y;\n\n        draggedText.location.move(dx, dy);\n        self.treeDesigner.updateTextPosition(draggedText);\n\n        self.prevDragEvent = d3.event;\n        self.treeDesigner.updatePlottingRegionSize();\n    }\n\n    dragEnded(draggedNode, self){\n         d3.select(this).classed(\"dragging\", false);\n    }\n\n}\n\n\n","import * as d3 from './d3'\nimport {Utils} from 'sd-utils'\n\nexport class Tooltip {\n    static getContainer(){\n        return d3.select(\"body\").selectOrAppend('div.sd-tooltip');\n    }\n\n    static show(html, xOffset = 5, yOffset = 28, event, duration=null) {\n        var container = Tooltip.getContainer()\n            .style(\"opacity\", 0);\n        container.transition()\n            .duration(200)\n            .style(\"opacity\", .98);\n        container.html(html);\n        Tooltip.updatePosition(xOffset, yOffset, event);\n        if(duration){\n            setTimeout(function(){\n                Tooltip.hide();\n            }, duration)\n        }\n    }\n\n    static updatePosition(xOffset = 5, yOffset = 28, event) {\n        event = event || d3.event;\n        Tooltip.getContainer()\n            .style(\"left\", (event.pageX + xOffset) + \"px\")\n            .style(\"top\", (event.pageY - yOffset) + \"px\");\n    }\n\n    static hide(duration = 500) {\n        var t = Tooltip.getContainer();\n        if(duration){\n            t = t.transition().duration(duration)\n        }\n        t.style(\"opacity\", 0);\n    }\n\n    static attach(target, htmlOrFn, xOffset, yOffset) {\n        target.on('mouseover', function (d, i) {\n            var html = null;\n            if (Utils.isFunction(htmlOrFn)) {\n                html = htmlOrFn(d, i);\n            } else {\n                html = htmlOrFn;\n            }\n\n            if (html !== null && html !== undefined && html !== '') {\n                Tooltip.show(html, xOffset, yOffset);\n            }else{\n                Tooltip.hide(0);\n            }\n\n        }).on('mousemove', function (d) {\n            Tooltip.updatePosition(xOffset, yOffset);\n        }).on(\"mouseout\", function (d) {\n            Tooltip.hide();\n        });\n    }\n}\n","import * as d3 from \"./d3\";\nimport {Utils} from \"sd-utils\";\nimport {AppUtils} from \"./app-utils\";\nimport {domain as model} from \"sd-model\";\nimport {ContextMenu} from \"./context-menu/context-menu\";\nimport {MainContextMenu} from \"./context-menu/main-context-menu\";\nimport {NodeContextMenu} from \"./context-menu/node-context-menu\";\nimport {Layout} from \"./layout\";\nimport {NodeDragHandler} from \"./node-drag-handler\";\nimport {Tooltip} from \"./tooltip\";\nimport {Templates} from \"./templates\";\nimport {TextDragHandler} from \"./text-drag-handler\";\nimport {TextContextMenu} from \"./context-menu/text-context-menu\";\nimport {EdgeContextMenu} from \"./context-menu/edge-context-menu\";\nimport * as Hammer from \"hammerjs\";\nimport {i18n} from \"./i18n/i18n\";\n\n\nexport class TreeDesignerConfig {\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 25,\n        right: 25,\n        top: 25,\n        bottom: 25\n    };\n    lng = 'en';\n    layout= {\n        type: 'tree',\n        nodeSize: 40,\n        limitNodePositioning: true,\n        gridHeight: 75,\n        gridWidth: 150,\n        edgeSlantWidthMax: 20\n    };\n    fontFamily = 'sans-serif';\n    fontSize = '12px';\n    fontWeight = 'normal';\n    fontStyle = 'normal';\n    node = {\n        strokeWidth: '1px',\n        optimal: {\n            stroke: '#006f00',\n            strokeWidth: '1.5px',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'black'\n        },\n        payoff: {\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        },\n        decision: {\n            fill: '#ff7777',\n            stroke: '#660000',\n\n            selected: {\n                fill: '#aa3333',\n                // stroke: '#666600'\n            }\n        },\n        chance: {\n            fill: '#ffff44',\n            stroke: '#666600',\n\n            selected: {\n                fill: '#aaaa00',\n                // stroke: '#666600'\n            }\n        },\n        terminal:{\n            fill: '#44ff44',\n            stroke: 'black',\n            selected: {\n                fill: '#00aa00',\n                // stroke: 'black'\n            },\n            payoff: {\n                fontSize: '1em',\n                color: 'black',\n                negativeColor: '#b60000'\n            },\n        }\n    };\n    edge={\n        stroke: '#424242',\n        strokeWidth: '1.5',\n        optimal:{\n            stroke: '#006f00',\n            strokeWidth: '2.4',\n        },\n        selected:{\n            stroke: '#045ad1',\n            strokeWidth: '3.5',\n        },\n        label: {\n            fontSize: '1em',\n            color: 'back'\n        },\n        payoff:{\n            fontSize: '1em',\n            color: 'black',\n            negativeColor: '#b60000'\n        }\n\n    };\n    probability = {\n        fontSize: '1em',\n        color: '#0000d7'\n    };\n    title = {\n        fontSize: '16px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 15,\n            bottom: 10\n        }\n    };\n    description = {\n        show: true,\n        fontSize: '12px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        color: '#000000',\n        margin:{\n            top: 5,\n            bottom: 10\n        }\n    };\n\n    readOnly= false;\n    disableAnimations=false;\n    forceFullEdgeRedraw=false;\n    hideLabels=false;\n    hidePayoffs=false;\n    hideProbabilities=false;\n    raw=false;\n\n\n    payoffNumberFormatter = (v, i)=> v;\n    probabilityNumberFormatter  = (v)=> v;\n\n    onNodeSelected = (node) => {};\n    onEdgeSelected = (edge) => {};\n    onTextSelected = (text) => {};\n    onSelectionCleared = () => {};\n\n    operationsForObject = (o) => [];\n\n    payoffNames = [null, null];\n    maxPayoffsToDisplay = 1;\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n\nexport class TreeDesigner {\n\n    config;\n    container;\n    data; //data model manager\n    svg;\n\n    constructor(container, dataModel, config){\n        this.setConfig(config);\n        this.data = dataModel;\n        this.initContainer(container);\n        this.init();\n    }\n\n    setConfig(config) {\n        this.config = new TreeDesignerConfig(config);\n        if(this.layout){\n            this.layout.config=this.config.layout;\n        }\n        this.updateCustomStyles();\n        return this;\n    }\n\n    init(){\n\n        this.initSvg();\n        this.initLayout();\n        this.initI18n();\n        this.initBrush();\n        this.initEdgeMarkers();\n\n        this.updateCustomStyles();\n        if(!this.config.readOnly){\n            this.initMainContextMenu();\n            this.initNodeContextMenu();\n            this.initEdgeContextMenu();\n            this.initNodeDragHandler();\n            this.initTextDragHandler();\n            this.initTextContextMenu();\n        }\n        this.redraw();\n    }\n\n    initI18n() {\n        i18n.init(this.config.lng);\n    }\n\n\n    updateCustomStyles(){\n        d3.select('head').selectOrAppend('style#sd-tree-designer-style').html(Templates.get('treeDesignerStyles', this.config));\n        return this;\n    }\n\n    initLayout(){\n        this.layout = new Layout(this, this.data, this.config.layout);\n    }\n\n    initNodeDragHandler(){\n        this.nodeDragHandler = new NodeDragHandler(this, this.data);\n    }\n\n    initTextDragHandler(){\n        this.textDragHandler = new TextDragHandler(this, this.data);\n    }\n\n    redraw(withTransitions=false){\n\n        var self = this;\n        withTransitions = !self.config.disableAnimations && withTransitions;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(withTransitions);\n        if(withTransitions){\n            self.transitionPrev = self.transition;\n            self.transition = true;\n        }\n        this.redrawNodes();\n        this.redrawEdges();\n        this.redrawFloatingTexts();\n        this.updateValidationMessages();\n        if(withTransitions){\n            self.transition =  self.transitionPrev;\n        }\n        setTimeout(function(){\n            self.updatePlottingRegionSize();\n        },10);\n\n        return this;\n    }\n\n    computeAvailableSpace(){\n        this.availableHeight = AppUtils.sanitizeHeight(this.config.height, this.container, this.config.margin);\n        this.availableWidth = AppUtils.sanitizeWidth(this.config.width, this.container, this.config.margin);\n    }\n\n    initSvg() {\n        var c = this;\n        var self = this;\n        this.computeAvailableSpace();\n        this.svg = this.container.selectOrAppend('svg.sd-tree-designer');\n        this.svg.attr('width', this.availableWidth).attr('height', this.availableHeight);\n\n        this.mainGroup = this.svg.selectOrAppend('g.main-group');\n        this.updateMargin();\n\n\n        if (!this.config.width) {\n            d3.select(window)\n                .on(\"resize.tree-designer\", function () {\n                    self.updatePlottingRegionSize();\n                    self.redrawDiagramTitle();\n                });\n        }\n\n        var mc = new Hammer.Manager(this.svg.node(), {touchAction : 'auto'});\n        mc.add(new Hammer.Press({\n            pointerType: 'touch'\n        }));\n\n        mc.add(new Hammer.Pinch({\n            pointerType: 'touch'\n        }));\n\n        var cancel;\n        mc.on('pinchstart', function(){\n            self.disableBrush();\n        })\n        mc.on('pinch', function(){\n            cancel = Utils.waitForFinalEvent(()=>self.enableBrush(), 'pinchend', 5000)\n        })\n    }\n\n    updateMargin(withTransitions){\n        var self = this;\n        var margin = this.config.margin;\n        var group = this.mainGroup;\n        if(withTransitions){\n            group = group.transition();\n        }\n\n        this.topMargin = margin.top;\n        if(this.diagramTitle||this.diagramDescription){\n            this.topMargin = parseInt(this.diagramTitle ? this.config.title.margin.top : 0) + this.getTitleGroupHeight()\n                +  Math.max(this.topMargin, parseInt(this.config.title.margin.bottom));\n        }\n\n        group.attr(\"transform\", \"translate(\" + margin.left + \",\" + this.topMargin + \")\").on(\"end\", ()=> self.updatePlottingRegionSize());\n    }\n\n    setMargin(margin, withoutStateSaving){\n        var self=this;\n        if(!withoutStateSaving){\n            this.data.saveState({\n                data:{\n                    margin: Utils.clone(self.config.margin)\n                },\n                onUndo: (data)=> {\n                    self.setMargin(data.margin, true);\n                },\n                onRedo: (data)=> {\n                    self.setMargin(margin, true);\n                }\n            });\n        }\n        Utils.deepExtend(this.config.margin, margin);\n        this.redrawDiagramTitle();\n        this.updateMargin(true);\n    }\n\n    initContainer(containerIdOrElem) {\n        if (Utils.isString(containerIdOrElem)) {\n            var selector = containerIdOrElem.trim();\n\n            if (!Utils.startsWith(selector, '#') && !Utils.startsWith(selector, '.')) {\n                selector = '#' + selector;\n            }\n            this.container = d3.select(selector);\n        } else if(containerIdOrElem._parents){\n            this.container = containerIdOrElem\n        }else{\n            this.container = d3.select(containerIdOrElem);\n        }\n    }\n\n    updatePlottingRegionSize() {\n        var changed = false;\n        this.computeAvailableSpace();\n        var margin = this.config.margin;\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        var mainGroupBox = this.mainGroup.node().getBBox();\n        var newSvgWidth = mainGroupBox.width+mainGroupBox.x+margin.left+margin.right;\n        this.container.classed('with-overflow-x', newSvgWidth>=this.availableWidth);\n        newSvgWidth = Math.max(newSvgWidth, this.availableWidth);\n        if(svgWidth!=newSvgWidth){\n            changed = true;\n            this.svg.attr('width', newSvgWidth);\n        }\n        var newSvgHeight = mainGroupBox.height+mainGroupBox.y+this.topMargin+margin.bottom;\n\n        this.container.classed('with-overflow-y', newSvgHeight>=this.availableHeight);\n        newSvgHeight = Math.max(newSvgHeight, this.availableHeight);\n        if(svgHeight!=newSvgHeight){\n            changed=true;\n            this.svg.attr('height', newSvgHeight);\n        }\n        if(changed){\n            this.updateBrushExtent()\n        }\n\n\n    }\n\n    redrawNodes() {\n        var self = this;\n\n\n        var nodesContainer = this.mainGroup.selectOrAppend('g.nodes');\n        var nodes = nodesContainer.selectAll('.node').data(this.data.nodes.filter(d=>!d.$hidden), (d,i)=> d.id);\n        nodes.exit().remove();\n        var nodesEnter = nodes.enter().append('g')\n            .attr('id', d=>'node-'+d.id)\n            .attr('class', d=>d.type+'-node node')\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n        nodesEnter.append('path');\n\n        var labelEnter = nodesEnter.append('text').attr('class', 'label');\n        var payoffEnter = nodesEnter.append('text').attr('class', 'payoff computed');\n        var indicatorEnter = nodesEnter.append('text').attr('class', 'error-indicator').text('!!');\n        var aggregatedPayoffEnter = nodesEnter.append('text').attr('class', 'aggregated-payoff');\n        var probabilityToEnterEnter = nodesEnter.append('text').attr('class', 'probability-to-enter');\n\n        var nodesMerge = nodesEnter.merge(nodes);\n        nodesMerge.classed('optimal', (d)=>self.isOptimal(d));\n\n        var nodesMergeT = nodesMerge;\n        if(this.transition){\n            nodesMergeT = nodesMerge.transition();\n            nodesMergeT.on('end', ()=> self.updatePlottingRegionSize())\n        }\n        nodesMergeT\n            .attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')')\n\n        var path = nodesMerge.select('path');\n        this.layout.drawNodeSymbol(path,this.transition);\n\n        /*path\n            .style('fill', d=> {\n                // if(self.isNodeSelected(d)){\n                //     return self.config.node[d.type].selected.fill\n                // }\n                return self.config.node[d.type].fill\n            })\n            .style('stroke', d=> self.config.node[d.type].stroke)\n            .style('stroke-width', d=> {\n                if(self.config.node[d.type].strokeWidth!==undefined){\n                    return self.config.node[d.type].strokeWidth;\n                }\n                return self.config.node.strokeWidth;\n            });\n        */\n        this.layout.nodeLabelPosition(labelEnter);\n        var labelMerge = nodesMerge.select('text.label');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = nodesMergeT.select('text.label');\n        labelMergeT.each(this.updateTextLines);\n        this.layout.nodeLabelPosition(labelMergeT)\n            .attr('text-anchor', 'middle')\n\n        var payoff = nodesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('childrenPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n            // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0')\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((d, i)=> {\n                var val = d\n\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n        this.attachPayoffTooltip(payoffTspansM);\n\n\n        var payoffT = payoff;\n        if(this.transition){\n            payoffT = payoff.transition();\n        }\n\n        this.layout.nodePayoffPosition(payoffEnter);\n        this.layout.nodePayoffPosition(payoffT);\n\n        var aggregatedPayoff = nodesMerge.select('text.aggregated-payoff');\n        var aggregatedPayoffTspans = aggregatedPayoff.selectAll('tspan').data(d=>{\n            let item = d.displayValue('aggregatedPayoff');\n            return Utils.isArray(item) ? item.filter(i=>i !== undefined) : [item]\n        });\n        aggregatedPayoffTspans.exit().remove();\n        var aggregatedPayoffTspansM = aggregatedPayoffTspans.enter().append('tspan').merge(aggregatedPayoffTspans)\n            .attr('dy', (d,i)=>i>0 ? '0.95em': undefined)\n            .classed('negative', d=> {\n                return d!==null && d<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs || this.config.raw)\n            .text((val, i)=> {\n                return val!==null ? (isNaN(val) ? val : self.config.payoffNumberFormatter(val, i)): ''\n            });\n\n        this.attachPayoffTooltip(aggregatedPayoffTspansM, 'aggregatedPayoff');\n\n        var aggregatedPayoffT = aggregatedPayoff;\n        if(this.transition){\n            aggregatedPayoffT = aggregatedPayoff.transition();\n        }\n\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffEnter);\n        this.layout.nodeAggregatedPayoffPosition(aggregatedPayoffT);\n\n        var probabilityToEnter = nodesMerge.select('text.probability-to-enter')\n            .text(d=>{\n                var val = d.displayValue('probabilityToEnter');\n                return val!==null ? (isNaN(val) ? val : self.config.probabilityNumberFormatter(val)): ''\n            })\n            .classed('sd-hidden', this.config.hideProbabilities || this.config.raw);\n        Tooltip.attach(probabilityToEnter, i18n.t('tooltip.node.probabilityToEnter'));\n\n\n        var probabilityToEnterT = probabilityToEnter;\n        if(this.transition){\n            probabilityToEnterT = probabilityToEnter.transition();\n        }\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterEnter);\n        this.layout.nodeProbabilityToEnterPosition(probabilityToEnterT);\n\n\n        var indicator = nodesMerge.select('text.error-indicator');\n        indicator.classed('sd-hidden', this.config.raw)\n        this.layout.nodeIndicatorPosition(indicatorEnter);\n        this.layout.nodeIndicatorPosition(indicator);\n\n        if(this.nodeDragHandler){\n            nodesMerge.call(this.nodeDragHandler.drag);\n        }\n\n        nodesMerge.on('contextmenu', this.nodeContextMenu);\n        nodesMerge.on('dblclick', this.nodeContextMenu)\n        nodesMerge.each(function(d, i){\n            var nodeElem = this;\n            var mc = new Hammer.Manager(nodeElem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n            mc.on('press', function(e){\n                if(e.pointerType=='touch'){\n                    self.nodeDragHandler.cancelDrag();\n                }\n            })\n\n\n            if(d.folded){\n                let button = d3.select(nodeElem).selectOrAppend('text.sd-unfold-button')\n                    .text(\"[+]\")\n                    .on('click dbclick mousedown', ()=>self.foldSubtree(d, false)); //firefox detects only mousedown event - related to drag handler\n\n                self.layout.nodeUnfoldButtonPosition(button);\n                Tooltip.attach(button, i18n.t('contextMenu.node.unfold'));\n            }else{\n                d3.select(nodeElem).select('.sd-unfold-button').remove();\n            }\n\n        })\n    }\n\n    attachPayoffTooltip(selection, payoffFiledName = 'payoff', object='node'){\n        var self = this;\n        Tooltip.attach(selection, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.named',{value: d.payoff, number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.'+object+'.'+payoffFiledName+'.default',{value: d.payoff, number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n    }\n\n    updateTextLines(d){ //helper method for splitting text to tspans\n        var lines = d.name ? d.name.split('\\n') : [];\n        lines.reverse();\n        var tspans = d3.select(this).selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .text(l=>l)\n            .attr('dy', (d,i)=>i>0 ? '-1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n    }\n\n    isOptimal(d){\n        return d.displayValue('optimal');\n    }\n\n    redrawEdges() {\n        var self = this;\n        var edgesContainer = this.mainGroup.selectOrAppend('g.edges');\n        if(self.config.forceFullEdgeRedraw){\n            edgesContainer.selectAll(\"*\").remove();\n        }\n\n        var edges = edgesContainer.selectAll('.edge').data(this.data.edges.filter(e=>!e.$hidden), (d,i)=> d.id);\n        edges.exit().remove();\n        var edgesEnter = edges.enter().append('g')\n            .attr('id', d=>'edge-'+d.id)\n            .attr('class', 'edge');\n\n\n        edgesEnter.append('path');\n        var labelEnter = edgesEnter.appendSelector('g.label-group');\n        labelEnter.append('text').attr('class', 'label');\n        var payoffEnter = edgesEnter.append('text').attr('class', 'payoff');\n        var probabilityEnter = edgesEnter.append('text').attr('class', 'probability');\n\n\n        var edgesMerge = edgesEnter.merge(edges);\n\n\n        var optimalClassName = 'optimal';\n        edgesMerge.classed(optimalClassName, (d)=>self.isOptimal(d));\n\n        var edgesMergeT = edgesMerge;\n        if(this.transition){\n            edgesMergeT = edgesMerge.transition();\n        }\n\n        edgesMergeT.select('path')\n            .attr('d', d=> this.layout.edgeLineD(d))\n            // .attr(\"stroke\", \"black\")\n            // .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .attr(\"marker-end\", function(d) {\n                var suffix = d3.select(this.parentNode).classed('selected') ? '-selected' : (self.isOptimal(d)?'-optimal':'');\n                return \"url(#arrow\"+ suffix+\")\"\n            });\n            // .attr(\"shape-rendering\", \"optimizeQuality\")\n\n\n        edgesMerge.on('click', d=>{\n            self.selectEdge(d, true)\n        });\n\n        this.layout.edgeLabelPosition(labelEnter);\n        edgesMergeT.select('text.label').each(this.updateTextLines);\n        var labelMerge = edgesMerge.select('g.label-group');\n        labelMerge.classed('sd-hidden', this.config.hideLabels);\n        var labelMergeT = edgesMergeT.select('g.label-group');\n        this.layout.edgeLabelPosition(labelMergeT);\n            // .text(d=>d.name);\n\n        var payoff = edgesMerge.select('text.payoff');\n\n        var payoffTspans = payoff.selectAll('tspan').data(d => {\n            let item = d.displayValue('payoff');\n            return Utils.isArray(item) ? item.slice(0, Math.min(item.length, self.config.maxPayoffsToDisplay)).map(_=>d) : [d];\n        });\n        payoffTspans.exit().remove();\n\n        var payoffTspansM = payoffTspans.enter().append('tspan').merge(payoffTspans);\n        payoffTspansM\n        // .attr('dominant-baseline', 'hanging')\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            // .attr('x', '0')\n\n            // .attr('dominant-baseline', 'hanging')\n            .classed('negative', (d, i)=> {\n                var val = d.displayPayoff(undefined, i);\n                return val!==null && val<0;\n            })\n            .classed('sd-hidden', this.config.hidePayoffs)\n            // .text(d=> isNaN(d.payoff) ? d.payoff : self.config.payoffNumberFormatter(d.payoff))\n            .text((d, i)=>{\n                if(this.config.raw){\n                    return d.payoff[i];\n                }\n\n                let item = d.displayValue('payoff');\n                let items = Utils.isArray(item) ? item : [item];\n\n                let val = items[i];\n                if (val !== null) {\n                    if (!isNaN(val)) {\n                        return self.config.payoffNumberFormatter(val, i);\n                    }\n                    if (Utils.isString(val)) {\n                        return val;\n                    }\n                }\n\n                if (d.payoff[i] !== null && !isNaN(d.payoff[i]))\n                    return self.config.payoffNumberFormatter(d.payoff[i], i);\n\n                return d.payoff[i];\n\n            });\n\n        Tooltip.attach(payoffTspansM, (d, i)=>{\n            if(self.config.payoffNames.length>i && self.config.payoffNames[i] !== null){\n                return i18n.t('tooltip.edge.payoff.named',{value: d.payoff[i], number: i+1, name: self.config.payoffNames[i]})\n            }\n            return i18n.t('tooltip.edge.payoff.default',{value: d.payoff[i], number: self.config.maxPayoffsToDisplay < 2 ? '' : i+1})\n        });\n\n        var payoffTextT = payoff;\n        if(this.transition){\n            payoffTextT = payoff.transition();\n        }\n        this.layout.edgePayoffPosition(payoffEnter);\n        this.layout.edgePayoffPosition(payoffTextT);\n\n        Tooltip.attach(edgesMerge.select('text.probability'), d=>i18n.t('tooltip.edge.probability',{value: d.probability=== undefined ? d.displayProbability() : d.probability}));\n\n        edgesMerge.select('text.probability')\n            .classed('sd-hidden', this.config.hideProbabilities);\n        var probabilityMerge = edgesMerge.select('text.probability');\n        probabilityMerge\n            .attr('text-anchor', 'end')\n            .text(d=>{\n                if(this.config.raw){\n                    return d.probability;\n                }\n                var val = d.displayProbability();\n\n                if(val!==null){\n                    if(!isNaN(val)){\n                        return self.config.probabilityNumberFormatter(val);\n                    }\n                    if(Utils.isString(val)){\n                        return val;\n                    }\n                }\n\n                if(d.probability!==null && !isNaN(d.probability))\n                    return self.config.probabilityNumberFormatter(d.probability);\n\n                return d.probability;\n            });\n        var probabilityMergeT = probabilityMerge;\n        if(this.transition){\n            probabilityMergeT = probabilityMerge.transition();\n        }\n\n        this.layout.edgeProbabilityPosition(probabilityEnter);\n        this.layout.edgeProbabilityPosition(probabilityMergeT);\n\n\n        edgesContainer.selectAll('.edge.'+optimalClassName).raise();\n\n        edgesMerge.on('contextmenu', this.edgeContextMenu);\n        edgesMerge.on('dblclick', this.edgeContextMenu);\n        edgesMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: Hammer.POINTER_TOUCH\n            }));\n        })\n    }\n\n    redrawFloatingTexts() {\n        var self = this;\n\n\n        var textsContainer = this.mainGroup.selectOrAppend('g.floating-texts');\n        var texts = textsContainer.selectAll('.floating-text').data(this.data.texts, (d,i)=> d.id);\n        texts.exit().remove();\n        var textsEnter = texts.enter().appendSelector('g.floating-text')\n            .attr('id', d=>'text-'+d.id);\n\n\n        var rectWidth = 40;\n        var rectHeight = 20;\n\n        textsEnter.append('rect').attr('x', -5).attr('y', -16).attr('fill-opacity', 0);\n        textsEnter.append('text');\n\n        var textsMerge = textsEnter.merge(texts);\n        var textsMergeT = textsMerge;\n        if(this.transition){\n            textsMergeT = textsMerge.transition();\n        }\n\n        textsMergeT.attr('transform', d=>'translate(' + d.location.x + '  ' + d.location.y + ')');\n\n        var tspans = textsMerge.select('text').selectAll('tspan').data(d=>d.value ? d.value.split('\\n') : []);\n\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        textsMerge.classed('sd-empty', d=>!d.value || !d.value.trim());\n        textsMerge.select('rect').attr('width', rectWidth).attr('height', rectHeight);\n\n        textsMerge.each(function(d){\n            if(!d.value){\n                return;\n            }\n            var bb = d3.select(this).select('text').node().getBBox();\n           d3.select(this).select('rect')\n               .attr('y', bb.y-5)\n               .attr('width', Math.max(bb.width+10, rectWidth))\n               .attr('height', Math.max(bb.height+10, rectHeight))\n        });\n\n        if(this.textDragHandler){\n            textsMerge.call(this.textDragHandler.drag);\n        }\n        textsMerge.on('contextmenu', this.textContextMenu);\n        textsMerge.on('dblclick', this.textContextMenu);\n        textsMerge.each(function(d, i){\n            var elem = this;\n            var mc = new Hammer.Manager(elem);\n            mc.add(new Hammer.Press({\n                pointerType: 'touch'\n            }));\n        })\n\n    }\n\n    updateValidationMessages() {\n        var nodes = this.mainGroup.selectAll('.node');\n        nodes.classed('error', false);\n\n        this.data.validationResults.forEach(validationResult=>{\n            if(validationResult.isValid()){\n                return;\n            }\n\n            Object.getOwnPropertyNames(validationResult.objectIdToError).forEach(id=>{\n                var errors = validationResult.objectIdToError[id];\n                var nodeSelection = this.getNodeD3SelectionById(id);\n                nodeSelection.classed('error', true);\n                var tooltipHtml = '';\n                errors.forEach(e=>{\n                    if(tooltipHtml){\n                        tooltipHtml+='<br/>'\n                    }\n                    tooltipHtml+=AppUtils.getValidationMessage(e);\n                });\n\n                Tooltip.attach(nodeSelection.select('.error-indicator'), tooltipHtml);\n\n\n            })\n        });\n    }\n\n\n    initEdgeMarkers() {\n        var defs = this.svg.append(\"svg:defs\");\n\n        this.initArrowMarker(\"arrow\");\n        this.initArrowMarker(\"arrow-optimal\");\n        this.initArrowMarker(\"arrow-selected\");\n    }\n\n    initArrowMarker(id) {\n\n        var defs = this.svg.select(\"defs\");\n        defs.append(\"marker\")\n            .attr(\"id\",id)\n            .attr(\"viewBox\",\"0 -5 10 10\")\n            .attr(\"refX\",5)\n            .attr(\"refY\",0)\n            .attr(\"markerWidth\",4)\n            .attr(\"markerHeight\",4)\n            .attr(\"orient\",\"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M0,-5L10,0L0,5\")\n            .attr(\"class\",\"arrowHead\");\n    }\n\n    updateBrushExtent() {\n        var self =this;\n        this.brush.extent([[0, 0], [self.svg.attr('width'), self.svg.attr('height')]]);\n        this.brushContainer.call(this.brush);\n    }\n    initBrush() {\n        var self = this;\n\n        var brushContainer = self.brushContainer = this.brushContainer= this.svg.selectOrInsert(\"g.brush\", \":first-child\")\n            .attr(\"class\", \"brush\");\n\n        var brush = this.brush = d3.brush()\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n\n\n        this.updateBrushExtent();\n\n        brushContainer.select('.overlay').on(\"mousemove.edgeSelection\", mousemoved);\n        function mousemoved() {\n            var m = d3.mouse(this);\n            var mgt = self.getMainGroupTranslation();\n            var margin = 10;\n\n            var closest = [null, 999999999];\n            var closeEdges = [];\n            self.mainGroup.selectAll('.edge').each(function(d){\n                var selection = d3.select(this);\n                selection.classed('sd-hover', false);\n                var pathNode = selection.select('path').node();\n                var b = pathNode.getBBox();\n                if(b.x+mgt[0] <=m[0] && b.x+b.width+mgt[0] >= m[0] &&\n                   b.y+mgt[1]-margin <=m[1] && b.y+b.height+mgt[1]+margin >= m[1]){\n\n                    var cp = AppUtils.closestPoint(pathNode, [m[0]-mgt[0], m[1]-mgt[1]]);\n                    if(cp.distance < margin && cp.distance<closest[1]){\n                        closest = [selection, cp.distance];\n                    }\n                }\n\n            });\n\n            self.hoveredEdge = null;\n            if(closest[0]){\n                closest[0].classed('sd-hover', true);\n                self.hoveredEdge = closest[0];\n            }\n\n        }\n\n        function brushstart() {\n            if (!d3.event.selection) return;\n            if(self.hoveredEdge){\n                self.selectEdge(self.hoveredEdge.datum(), true)\n            }else{\n                self.clearSelection();\n            }\n            ContextMenu.hide();\n        }\n\n        // Highlight the selected nodes.\n        function brushmove() {\n            var s = d3.event.selection;\n            if(!s)return;\n\n            self.mainGroup.selectAll(\".node\").classed('selected', function (d) {\n                var mainGroupTranslation = self.getMainGroupTranslation();\n                var x = d.location.x+mainGroupTranslation[0];\n                var y = d.location.y+mainGroupTranslation[1];\n                var nodeSize = self.config.layout.nodeSize;\n                var offset = nodeSize*0.25;\n                return s[0][0] <= x+offset && x-offset <= s[1][0]\n                    && s[0][1] <= y+offset && y-offset <= s[1][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) return;\n            brush.move(brushContainer, null);\n\n            var selectedNodes = self.getSelectedNodes();\n            if(selectedNodes && selectedNodes.length === 1){\n                self.selectNode(selectedNodes[0]);\n            }\n            // if (!d3.event.selection) self.mainGroup.selectAll(\".selected\").classed('selected', false);\n        }\n    }\n\n    disableBrush(){\n        if(!this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushDisabled'), 'info', 'left')\n        }\n        this.brushDisabled = true;\n        this.brushContainer.remove();\n    }\n\n    enableBrush(){\n        if(this.brushDisabled){\n            AppUtils.growl(i18n.t('growl.brushEnabled'), 'info', 'left')\n            this.initBrush();\n            this.brushDisabled = false;\n        }\n\n\n    }\n\n    getMainGroupTranslation(invert) {\n        var translation = AppUtils.getTranslation(this.mainGroup.attr(\"transform\"));\n        if(invert){\n            translation[0] = -translation[0];\n            translation[1] = -translation[1]\n        }\n        return translation;\n    }\n\n    initNodeContextMenu() {\n        this.nodeContextMenu = new NodeContextMenu(this, this.config.operationsForObject);\n    }\n\n    initEdgeContextMenu() {\n        this.edgeContextMenu = new EdgeContextMenu(this);\n    }\n\n    initTextContextMenu() {\n        this.textContextMenu = new TextContextMenu(this);\n    }\n\n\n\n    initMainContextMenu() {\n        this.mainContextMenu = new MainContextMenu(this);\n        this.svg.on('contextmenu',this.mainContextMenu);\n        this.svg.on('dblclick',this.mainContextMenu);\n    }\n\n    addText(text){\n        this.data.saveState();\n        this.data.addText(text);\n        this.redraw();\n        this.selectText(text);\n    }\n\n    addNode(node, parent, redraw=false){\n        this.data.saveState();\n        this.data.addNode(node, parent);\n        this.redraw(true);\n        this.layout.update(node);\n        return node;\n    }\n\n    addDecisionNode(parent){\n        var newNode = new model.DecisionNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addChanceNode(parent){\n        var newNode = new model.ChanceNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n    addTerminalNode(parent){\n        var newNode = new model.TerminalNode(this.layout.getNewChildLocation(parent));\n        this.addNode(newNode, parent)\n    }\n\n    injectNode(node, edge){\n        this.data.saveState();\n        this.data.injectNode(node, edge);\n        this.redraw();\n        this.layout.update(node);\n        return node;\n    }\n\n    injectDecisionNode(edge){\n        var newNode = new model.DecisionNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n\n    }\n\n    injectChanceNode(edge){\n        var newNode = new model.ChanceNode(this.layout.getInjectedNodeLocation(edge));\n        this.injectNode(newNode, edge);\n    }\n\n    removeNode(node) {\n        this.data.saveState();\n        this.data.removeNode(node);\n\n\n        if(!this.layout.isManualLayout()){\n            this.layout.update();\n        }else{\n            this.redraw();\n        }\n    }\n\n    removeSelectedNodes() {\n        var selectedNodes = this.getSelectedNodes();\n        if(!selectedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeNodes(selectedNodes);\n        this.clearSelection();\n        this.redraw();\n        this.layout.update();\n    }\n\n    removeSelectedTexts(){\n        var selectedTexts = this.getSelectedTexts();\n\n        if(!selectedTexts.length){\n            return;\n        }\n        this.data.saveState();\n        this.data.removeTexts(selectedTexts);\n        this.clearSelection();\n        this.redraw();\n    }\n\n    copyNode(d, notClearPrevSelection) {\n        var clone = this.data.cloneSubtree(d);\n        if(notClearPrevSelection){\n            if(!this.copiedNodes){\n                this.copiedNodes=[];\n            }\n            this.copiedNodes.push(clone);\n        }else{\n            this.copiedNodes = [clone];\n        }\n\n    }\n\n    cutNode(d) {\n        this.copyNode(d);\n        this.removeNode(d);\n    }\n\n    cutSelectedNodes(){\n        var selectedNodes = this.getSelectedNodes();\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n        this.removeSelectedNodes();\n    }\n\n    copySelectedNodes() {\n        var self;\n        var selectedNodes = this.getSelectedNodes();\n\n        var selectedRoots = this.data.findSubtreeRoots(selectedNodes);\n        this.copyNodes(selectedRoots);\n\n\n    }\n\n    copyNodes(nodes){\n        if(this.copiedNodes !== nodes){\n            this.originalCopiedNodes = nodes;\n        }\n        this.copiedNodes = nodes.map(d=>this.data.cloneSubtree(d));\n\n    }\n\n    getTrackedClonesOfCopiedNodes(){\n        return this.originalCopiedNodes.map(d=>this.data.cloneSubtree(d, false, true));\n    }\n\n\n    pasteToNode(node, asTrackedClone = false) {\n        if(!this.copiedNodes || !this.copiedNodes.length){\n            return;\n        }\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        if(asTrackedClone){\n            nodesToAttach = self.getTrackedClonesOfCopiedNodes()\n        }else{\n            self.copyNodes(this.copiedNodes);\n        }\n\n        nodesToAttach.forEach(toAttach=>{\n            var attached = this.data.attachSubtree(toAttach, node).childNode;\n            attached.folded = true;\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            var location = self.layout.getNewChildLocation(node);\n            attached.moveTo(location.x, location.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        if(node.folded){\n            self.foldSubtree(node, node.folded, false);\n        }\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    pasteToNewLocation(point) {\n        this.data.saveState();\n        var self = this;\n        self.clearSelection();\n        var nodesToAttach = this.copiedNodes;\n        self.copyNodes(this.copiedNodes);\n        nodesToAttach.forEach(toAttach=> {\n            var attached = this.data.attachSubtree(toAttach);\n            if(attached.folded){\n                self.foldSubtree(attached, attached.folded, false);\n            }\n            attached.moveTo(point.x, point.y, true);\n            self.layout.moveNodeToEmptyPlace(attached, false);\n            self.layout.fitNodesInPlottingRegion(this.data.getAllDescendantNodes(attached));\n\n            self.selectSubTree(attached, false, nodesToAttach.length>1);\n        });\n\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n\n    }\n\n    convertNode(node, typeToConvertTo){\n        var self = this;\n        this.data.saveState();\n        this.data.convertNode(node, typeToConvertTo);\n        setTimeout(function(){\n            self.redraw(true);\n        },10)\n    }\n\n    performOperation(object, operation){\n        var self = this;\n        this.data.saveState();\n        operation.perform(object);\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    foldSubtree(node, fold = true, redraw=true){\n        let self = this;\n        node.folded = fold;\n\n        this.data.getAllDescendantNodes(node).forEach(n=>{\n            n.$hidden = fold;\n            n.folded = false;\n        });\n        this.data.getAllDescendantEdges(node).forEach(e=>e.$hidden = fold);\n\n        if(!redraw){\n            return;\n        }\n        setTimeout(function(){\n            self.redraw();\n            self.layout.update();\n        },10)\n    }\n\n    updateVisibility(node = null){\n        if(!node){\n            this.data.getRoots().forEach(n=>this.updateVisibility(n));\n            return;\n        }\n\n        if(node.folded){\n            this.foldSubtree(node, true, false);\n            return;\n        }\n\n        node.childEdges.forEach(e => this.updateVisibility(e.childNode));\n\n    }\n\n    moveNodeTo(x,y){\n\n    }\n\n    updateNodePosition(node) {\n        this.getNodeD3Selection(node).raise().attr('transform', 'translate('+node.location.x+' '+node.location.y+')');\n    }\n\n    updateTextPosition(text) {\n        this.getTextD3Selection(text).raise().attr('transform', 'translate('+text.location.x+' '+text.location.y+')');\n    }\n\n    getNodeD3Selection(node){\n        return this.getNodeD3SelectionById(node.id);\n    }\n\n    getNodeD3SelectionById(id){\n        return this.mainGroup.select('#node-'+id);\n    }\n    getTextD3Selection(text){\n        return this.getTextD3SelectionById(text.id);\n    }\n    getTextD3SelectionById(id){\n        return this.mainGroup.select('#text-'+id);\n    }\n\n    getSelectedNodes(visibleOnly = false) {\n        let selectedVisible = this.mainGroup.selectAll(\".node.selected\").data();\n        if(visibleOnly){\n            return selectedVisible;\n        }\n\n        let allSelected  = [];\n        allSelected.push(...selectedVisible);\n\n        selectedVisible.forEach(n=>{\n            if(n.folded){\n                let descendants = this.data.getAllDescendantNodes(n);\n                if(descendants){\n                    allSelected.push(...descendants);\n                }\n            }\n        });\n\n        return allSelected;\n    }\n\n    getSelectedTexts(){\n        return this.mainGroup.selectAll(\".floating-text.selected\").data();\n    }\n\n    clearSelection(){\n        this.mainGroup.selectAll(\".edge.selected\").select('path').attr(\"marker-end\", d => \"url(#arrow\"+(this.isOptimal(d)?'-optimal':'')+\")\")\n        this.mainGroup.selectAll(\".selected\").classed('selected', false);\n        this.config.onSelectionCleared();\n    }\n\n    selectEdge(edge, clearSelectionBeforeSelect){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.config.onEdgeSelected(edge);\n        this.mainGroup.select('#edge-'+edge.id)\n            .classed('selected', true)\n            .select('path')\n            .attr(\"marker-end\", d => \"url(#arrow-selected)\")\n    }\n\n    isNodeSelected(node){\n        return this.getNodeD3Selection(node).classed('selected');\n    }\n\n    selectNode(node, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onNodeSelected(node);\n        }\n\n        this.getNodeD3SelectionById(node.id).classed('selected', true);\n    }\n\n    selectText(text, clearSelectionBeforeSelect, skipCallback){\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n\n        if(!skipCallback){\n            this.config.onTextSelected(text)\n        }\n\n        this.getTextD3SelectionById(text.id).classed('selected', true);\n    }\n\n    selectSubTree(node, clearSelectionBeforeSelect,skipCallback) {\n        if(clearSelectionBeforeSelect){\n            this.clearSelection();\n        }\n        this.selectNode(node, false, skipCallback);\n        node.childEdges.forEach(e=>this.selectSubTree(e.childNode, false, true));\n    }\n\n    selectAllNodes() {\n        this.mainGroup.selectAll(\".node\").classed('selected', true);\n    }\n\n    autoLayout(type, withoutStateSaving){\n        this.layout.autoLayout(type, withoutStateSaving);\n    }\n\n    updateDiagramTitle(titleValue){\n        if(!titleValue){\n            titleValue = '';\n        }\n        this.diagramTitle = titleValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n    redrawDiagramTitle(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n        title.text(this.diagramTitle);\n        Layout.setHangingPosition(title);\n\n        var marginTop = parseInt(this.config.title.margin.top);\n        this.titleContainer.attr('transform', 'translate('+(svgWidth/2)+','+( marginTop)+')');\n    }\n    redrawDiagramDescription(){\n        var svgWidth = this.svg.attr('width');\n        var svgHeight = this.svg.attr('height');\n        this.titleContainer = this.svg.selectOrAppend('g.sd-title-container');\n\n        var desc = this.titleContainer.selectOrAppend('text.sd-description');\n\n        if(!this.config.description.show){\n            desc.remove();\n            return;\n        }\n\n        var lines = this.diagramDescription ? this.diagramDescription.split('\\n') : [];\n        var tspans = desc.selectAll('tspan').data(lines);\n        tspans.enter().append('tspan')\n            .merge(tspans)\n            .html(l=>AppUtils.replaceUrls(AppUtils.escapeHtml(l)))\n            .attr('dy', (d,i)=>i>0 ? '1.1em': undefined)\n            .attr('x', '0');\n\n        tspans.exit().remove();\n        Layout.setHangingPosition(desc);\n\n        var title = this.titleContainer.selectOrAppend('text.sd-title');\n\n        var marginTop = 0;\n        if(this.diagramTitle){\n            marginTop += title.node().getBBox().height;\n            marginTop+= Math.max(parseInt(this.config.description.margin.top), 0);\n        }\n\n\n        desc.attr('transform', 'translate(0,'+( marginTop)+')');\n    }\n\n    updateDiagramDescription(descriptionValue){\n        if(!descriptionValue){\n            descriptionValue = '';\n        }\n        this.diagramDescription = descriptionValue;\n        this.redrawDiagramTitle();\n        this.redrawDiagramDescription();\n        this.updateMargin(true);\n    }\n\n\n    getTitleGroupHeight(withMargins){\n        if(!this.titleContainer){\n            return 0;\n        }\n        var h = this.titleContainer.node().getBBox().height;\n        if(withMargins){\n            h+= parseInt(this.config.title.margin.bottom);\n            h+= parseInt(this.config.title.margin.top);\n        }\n        return h;\n    }\n\n}\n"]}